{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36633",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36633/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36633/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36633/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/36633",
  "id": 1957075392,
  "node_id": "I_kwDOCFbutM50ppnA",
  "number": 36633,
  "title": "JPA refresh with PESSIMISTIC_WRITE ignored for lazy loaded entity",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1341157944,
      "node_id": "MDU6TGFiZWwxMzQxMTU3OTQ0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/upstream",
      "name": "triage/upstream",
      "color": "7db4d8",
      "default": false,
      "description": "Used for issues which are caused by issues in upstream projects/dependency"
    },
    {
      "id": 1425555736,
      "node_id": "MDU6TGFiZWwxNDI1NTU1NzM2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-orm",
      "name": "area/hibernate-orm",
      "color": "0366d6",
      "default": false,
      "description": "Hibernate ORM"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/302",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/302",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/302/labels",
    "id": 10458697,
    "node_id": "MI_kwDOCFbutM4An5ZJ",
    "number": 302,
    "title": "3.7.0",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 51,
    "state": "closed",
    "created_at": "2024-01-23T17:04:43Z",
    "updated_at": "2024-01-24T18:38:28Z",
    "due_on": null,
    "closed_at": "2024-01-24T12:34:43Z"
  },
  "comments": 4,
  "created_at": "2023-10-23T12:41:46Z",
  "updated_at": "2024-01-23T17:07:38Z",
  "closed_at": "2024-01-18T21:50:37Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen trying to lock a lazy loaded entity with `em.refresh(e, LockModeType.PESSIMISTIC_WRITE);`, Quarkus / Hibernate seemingly does nothing (no SQL / `select for update` is executed). \r\n\r\nThis only happens if the entity was not accessed prior to locking / refreshing the entity. As soon as an attribute is read, the `refresh` executes as expected. This behavior makes sense for a regular refresh (the entity wasn't yet loaded after all). However, this is not what I would expect if I specifically ask JPA to lock the entity with the refresh. Here, the `select for update` should be executed unconditionally.\r\n\r\n---\r\n\r\nAbbreviated example from https://github.com/mensinda/quarkus-stuff/tree/lockRefresh to illustrate:\r\n\r\n```java\r\n@Entity\r\npublic class MainEntity {\r\n    @Id\r\n    private long id;\r\n\r\n    @OneToOne(targetEntity = ReferencedEntity.class, fetch = FetchType.LAZY)\r\n    @JoinColumn(name = \"LEHRL\")\r\n    private ReferencedEntity referenced;\r\n}\r\n\r\n@Entity\r\npublic class ReferencedEntity {\r\n\r\n    @Id\r\n    private long id;\r\n\r\n    private String status;\r\n}\r\n\r\n@QuarkusTest\r\nclass DoTest {\r\n    /**\r\n     * Does <b>NOT</b> work as expected! No `select for update`!\r\n     */\r\n    @Test\r\n    @Transactional\r\n    void refresh() {\r\n        MainEntity m = em.find(MainEntity.class, 0);\r\n        ReferencedEntity e = m.referenced();\r\n        assertNotNull(e);\r\n\r\n        // First refresh, then access\r\n        em.refresh(e, LockModeType.PESSIMISTIC_WRITE);\r\n        assertEquals(\"ok\", e.status());\r\n    }\r\n}\r\n```\n\n### Expected behavior\n\nQuarkus / Hibernate executes a `select for update` for every `refresh` with a `PESSIMISTIC_WRITE` lock mode.\n\n### Actual behavior\n\nNO SQL is executed for the `refresh`  (compare with `refreshAfterRead` and `lock`)\n\n### How to Reproduce?\n\nI have created a minimal test case for this issue: https://github.com/mensinda/quarkus-stuff/tree/lockRefresh\r\n\r\nSteps to reproduce:\r\n1. clone / checkout the `lockRefresh` branch of https://github.com/mensinda/quarkus-stuff/tree/lockRefresh\r\n2. run `mvn clean verify`\r\n3. Observe that there is no `select for update` in the `NEW TEST: refresh` section\n\n### Output of `uname -a` or `ver`\n\nLinux XXXXXXX 5.15.0-56-generic #62-Ubuntu SMP Tue Nov 22 19:54:14 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk 17.0.8.1 2023-08-24\n\n### Quarkus version or git rev\n\n3.4.3\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.9.2 (c9616018c7a021c1c39be70fb2843d6f5f9b8a1c)\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36633/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36633/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
