{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20992",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20992/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20992/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20992/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20992",
  "id": 1035560054,
  "node_id": "I_kwDOCFbutM49uWR2",
  "number": 20992,
  "title": "Odd field reads from injections into JAX-RS @Provider",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2021-10-25T20:48:50Z",
  "updated_at": "2021-10-25T23:48:11Z",
  "closed_at": "2021-10-25T23:48:10Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nHey team,\r\n\r\nI have a config property. I create a bean class, into which I inject this property. Then I write an `ExceptionMapper` into which this bean class is injected. Afterwards, I try to read the config value from the injected instance and get a \"default\" result (null for ref types, defaults for primitives). Is this intended? \r\n\r\n\r\n### Expected behavior\r\n\r\nFields of an injected entity are read regardless of whether they're set from configs or plainly through code.\r\n\r\n### Actual behavior\r\n\r\nOnly the fields set in the code directly are read as expected.\r\n\r\n### How to Reproduce?\r\n\r\nError scenario:\r\n1. create a bean class\r\n2. create a field, which is injected from a config property\r\n3. create a field, which is set in code\r\n3. create a JAX-RS @Provider (e.g. an `ExceptionMapper`)\r\n4. inject the class from p.1 through field-injection\r\n5. invoke a `toString()` on the injected entity -> all fields seem the have the proper values\r\n6. read a single field -> only field from p.3 is read correctly\r\n7. inject a property directly into a @Provider class -> everything is read just right\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nDarwin C8049 20.5.0 Darwin Kernel Version 20.5.0: Sat May  8 05:10:33 PDT 2021; root:xnu-7195.121.3~9/RELEASE_X86_64 x86_64\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"16.0.1\" 2021-04-20 OpenJDK Runtime Environment (build 16.0.1+9-24) OpenJDK 64-Bit Server VM (build 16.0.1+9-24, mixed mode, sharing)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\nn/a\r\n\r\n### Quarkus version or git rev\r\n\r\n2.3.0.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.3 (ff8e977a158738155dc465c6a97ffaf31982d739)\r\n\r\n### Additional information\r\n\r\nHere's a link to a repro: https://github.com/artkonr/odd-reads-repro",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20992/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20992/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
