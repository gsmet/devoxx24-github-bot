{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32059",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32059/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32059/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32059/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/32059",
  "id": 1637200349,
  "node_id": "I_kwDOCFbutM5hlbHd",
  "number": 32059,
  "title": "`quarkus-jaxb` loads entity classes at build time even though no default JAXBContext will be created within the application",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1683744663,
      "node_id": "MDU6TGFiZWwxNjgzNzQ0NjYz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/jaxb",
      "name": "area/jaxb",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/241",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/241",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/241/labels",
    "id": 9190762,
    "node_id": "MI_kwDOCFbutM4AjD1q",
    "number": 241,
    "title": "3.0.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 127,
    "state": "closed",
    "created_at": "2023-03-22T09:42:22Z",
    "updated_at": "2023-04-02T16:24:01Z",
    "due_on": null,
    "closed_at": "2023-03-30T13:52:01Z"
  },
  "comments": 2,
  "created_at": "2023-03-23T09:57:22Z",
  "updated_at": "2023-03-23T11:39:15Z",
  "closed_at": "2023-03-23T11:24:41Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI am working on a test within Quarkiverse CXF that makes sure that SOAP service methods having runtime initialized arguments work. Those arguments typically have JAXB annotations and so they are catched by JaxbProcessor when collecting classes for the default JAXBContext. If some of those arguments has (for whatever reason) runtime init set, then the native build fails with the following exception:\r\n\r\n```\r\n[WARN] [stderr] Error: Classes that should be initialized at run time got initialized during image building:\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.core.util.UserError.abort(UserError.java:73)\r\n[WARN] [stderr]  io.quarkiverse.cxf.client.it.rtinit.Result the class was requested to be initialized at run time (from command line with 'io.quarkiverse.cxf.client.it.rtinit.Result'). To see why io.quarkiverse.cxf.client.it.rtinit.Result got initialized use --trace-class-initialization=io.quarkiverse.cxf.client.it.rtinit.Result\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.classinitialization.ProvenSafeClassInitializationSupport.checkDelayedInitialization(ProvenSafeClassInitializationSupport.java:273)\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.duringAnalysis(ClassInitializationFeature.java:164)\r\n[INFO] [stdout] ------------------------------------------------------------------------------------------------------------------------\r\n[WARN] [stderr] io.quarkiverse.cxf.client.it.rtinit.Operands the class was requested to be initialized at run time (from command line with 'io.quarkiverse.cxf.client.it.rtinit.Operands'). io.quarkus.runner.ApplicationImpl caused initialization of this class with the following trace: \r\n[WARN] [stderr]         at io.quarkiverse.cxf.client.it.rtinit.Operands.<clinit>(Operands.java)\r\n[WARN] [stderr]         at java.lang.Class.forName0(Unknown Source)\r\n[WARN] [stderr]         at java.lang.Class.forName(Class.java:467)\r\n[WARN] [stderr]         at io.quarkus.deployment.steps.JaxbProcessor$setupJaxbContextConfig1556898737.deploy_0(Unknown Source)\r\n[WARN] [stderr]         at io.quarkus.deployment.steps.JaxbProcessor$setupJaxbContextConfig1556898737.deploy(Unknown Source)\r\n[WARN] [stderr]         at io.quarkus.runner.ApplicationImpl.<clinit>(Unknown Source)\r\n[WARN] [stderr] \r\n[WARN] [stderr] To see how the classes got initialized, use --trace-class-initialization=io.quarkiverse.cxf.client.it.rtinit.Result\r\n[WARN] [stderr] com.oracle.svm.core.util.UserError$UserException: Classes that should be initialized at run time got initialized during image building:\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$10(NativeImageGenerator.java:748)\r\n[WARN] [stderr]  io.quarkiverse.cxf.client.it.rtinit.Result the class was requested to be initialized at run time (from command line with 'io.quarkiverse.cxf.client.it.rtinit.Result'). To see why io.quarkiverse.cxf.client.it.rtinit.Result got initialized use --trace-class-initialization=io.quarkiverse.cxf.client.it.rtinit.Result\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:85)\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$11(NativeImageGenerator.java:748)\r\n[WARN] [stderr]         at org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.AbstractAnalysisEngine.runAnalysis(AbstractAnalysisEngine.java:162)\r\n[WARN] [stderr] io.quarkiverse.cxf.client.it.rtinit.Operands the class was requested to be initialized at run time (from command line with 'io.quarkiverse.cxf.client.it.rtinit.Operands'). io.quarkus.runner.ApplicationImpl caused initialization of this class with the following trace: \r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:745)\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:578)\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:535)\r\n[WARN] [stderr]         at io.quarkiverse.cxf.client.it.rtinit.Operands.<clinit>(Operands.java)\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:403)\r\n[INFO] [stdout]                         1.4s (4.8% of total time) in 26 GCs | Peak RSS: 4.61GB | CPU load: 11.88\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:580)\r\n[WARN] [stderr]         at java.lang.Class.forName0(Unknown Source)\r\n[INFO] [stdout] ========================================================================================================================\r\n[WARN] [stderr]         at java.lang.Class.forName(Class.java:467)\r\n[INFO] [stdout] Failed generating 'quarkus-cxf-integration-test-client-2.0.0-SNAPSHOT-runner' after 29.2s.\r\n[WARN] [stderr]         at io.quarkus.deployment.steps.JaxbProcessor$setupJaxbContextConfig1556898737.deploy_0(Unknown Source)\r\n[WARN] [stderr]         at io.quarkus.deployment.steps.JaxbProcessor$setupJaxbContextConfig1556898737.deploy(Unknown Source)\r\n[WARN] [stderr]         at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:128)\r\n[WARN] [stderr]         at io.quarkus.runner.ApplicationImpl.<clinit>(Unknown Source)\r\n```\r\n\r\nSee the first commit of this PR for a reproducer: https://github.com/quarkiverse/quarkus-cxf/pull/771/commits\r\n\r\nI guess SOAP service methods having a runtime initialized argument will be a rather rare, but still possible case that we should support in Quarkus CXF. In the test the runtime init is forced via `quarkus.native.additional-build-args=--initialize-at-run-time=io.quarkiverse.cxf.client.it.rtinit.Operands`\r\n\r\nIn https://github.com/quarkusio/quarkus/pull/31666 we made the runtime validation of the default JAXBContext required only if the application actually uses the default JAXBContext - i.e. if there is at least one injection point for it. \r\n\r\nClearly, if a the default JAXBContext would be used by the application, then this issue is expected.\r\n\r\nBut OTOH, I believe, that when the default JAXBContext is not required by the application, then the classes for it should not be loaded at build time. Fixing this seems to be quite easy and I am going to send a PR to see whether it really works for all existing JAXB tests.\r\n\r\n\r\n\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32059/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32059/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
