{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20594",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20594/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20594/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20594/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20594",
  "id": 1020265206,
  "node_id": "I_kwDOCFbutM480AL2",
  "number": 20594,
  "title": "Allow trusted certificates to be specified at runtime by keystore and multiple PEM files",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1654772125,
      "node_id": "MDU6TGFiZWwxNjU0NzcyMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kubernetes",
      "name": "area/kubernetes",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/329",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/329",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/329/labels",
    "id": 11056804,
    "node_id": "MI_kwDOCFbutM4AqLak",
    "number": 329,
    "title": "3.12.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 195,
    "state": "closed",
    "created_at": "2024-05-15T09:27:54Z",
    "updated_at": "2024-07-04T18:19:16Z",
    "due_on": null,
    "closed_at": "2024-06-12T11:16:44Z"
  },
  "comments": 5,
  "created_at": "2021-10-07T16:59:41Z",
  "updated_at": "2024-06-04T06:56:52Z",
  "closed_at": "2024-06-04T06:56:47Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nAccording to https://quarkus.io/guides/native-and-ssl#the-truststore-path,\r\n\r\n> the root certificates are fixed at image build time [...] when the defaults need to be changed, these system properties must be provided at image build time\r\n\r\nBut trust settings can be environmental. Examples:\r\n\r\n- A corporate proxy may do MITM inspection of HTTPS traffic and re-sign with an organizational CA\r\n- An organizational CA may be used on-premise\r\n- An OpenShift cluster can provide service certificate with its own internal CA\r\n\r\nMaking this a build-time-only option limits the ability of Quarkus apps to connect to services whose certificates are signed by an environment-specific CA.\r\n\r\nIt would be helpful if operators could provide an environmental trust store at runtime.\r\n\r\nIdeally PEM files could be trusted directly to avoid the need to use keytool at runtime. PEM files can come from a number of sources, especially within OpenShift:\r\n\r\n- OpenShift can [inject its cluster-specific service CA certificate](https://docs.openshift.com/container-platform/4.8/security/certificates/service-serving-certificate.html#add-service-certificate-configmap_service-serving-certificate) into an annotated ConfigMap.\r\n- Operators may add add organizational CAs to a ConfigMap.\r\n- Cluster admins can configure the [proxy settings](https://docs.openshift.com/container-platform/4.8/networking/configuring-a-custom-pki.html#nw-proxy-configure-object_configuring-a-custom-pki) to include environmental CAs. This can be injected to a [specially labelled ConfigMap](https://docs.openshift.com/container-platform/4.8/networking/configuring-a-custom-pki.html#certificate-injection-using-operators_configuring-a-custom-pki).\r\n\r\nA runtime option to load trusted CAs from multiple PEM files would greatly ease Quarkus' use in environments where custom CA settings are a requirement.\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20594/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20594/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
