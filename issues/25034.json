{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25034",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25034/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25034/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25034/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25034",
  "id": 1209477303,
  "node_id": "I_kwDOCFbutM5IFyi3",
  "number": 25034,
  "title": "Quarkus Native build with Mandrel fails due to AWT Toolkit, AWT Color and AWTAccessor",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2260340367,
      "node_id": "MDU6TGFiZWwyMjYwMzQwMzY3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/mandrel",
      "name": "area/mandrel",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3494192914,
      "node_id": "LA_kwDOCFbutM7QRScS",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/graphics",
      "name": "area/graphics",
      "color": "0366d6",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2022-04-20T10:16:48Z",
  "updated_at": "2022-04-20T13:06:46Z",
  "closed_at": "2022-04-20T13:06:46Z",
  "active_lock_reason": null,
  "body": "i'm trying to build my project api with native using mandrel distribution 22.0 version like following. i've tried so many things like different Mandrel versions.  (  20.3 , 21.3) Unfortunately none of them have been worked so far. i'm still getting same exceptions although AWT libray is not used directly in project. on native build process.  i'm using [files](https://github.com/ma-hab/rest-graphics/tree/master/src/main/resources/META-INF/native-image)  like suggested on following issue https://github.com/quarkusio/quarkus/issues/19789. \r\n\r\n\r\nquarkus.native.container-build=true\r\nquarkus.native.native-image-xmx=8g\r\nquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel:22.0-java11\r\n\r\n\r\nquarkus.native.additional-build-args=-H:ReflectionConfigurationFiles=reflect-config.json,\\\r\n-H:ResourceConfigurationFiles=resources-config.json,\\\r\n--initialize-at-run-time=\\\r\njava.awt.Toolkit\\\\,\\\r\nsun.awt.AWTAccessor\\\\,\\\r\njava.awt.Color\\\\,\\\r\n\\\r\n--trace-class-initialization=\\\r\n  java.awt.Toolkit\\\\,\\\r\nsun.awt.AWTAccessor\\\\,\\\r\njava.awt.Color\\\\\r\n\r\n\r\n\r\npom.xml\r\n\r\n\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-resteasy</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-rest-client-jaxb</artifactId>\r\n    </dependency>\r\n  \r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-amazon-lambda-rest</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.jboss.resteasy</groupId>\r\n      <artifactId>resteasy-multipart-provider</artifactId>\r\n    </dependency>\r\n \r\n    <dependency>\r\n      <groupId>io.rest-assured</groupId>\r\n      <artifactId>rest-assured</artifactId>\r\n      <scope>test</scope>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.poi</groupId>\r\n      <artifactId>poi</artifactId>\r\n      <version>${apache.poi.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.poi</groupId>\r\n      <artifactId>poi-ooxml</artifactId>\r\n      <version>${apache.poi.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.commons</groupId>\r\n      <artifactId>commons-lang3</artifactId>\r\n      <version>${commons.lang3.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-amazon-s3</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>software.amazon.awssdk</groupId>\r\n      <artifactId>url-connection-client</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>software.amazon.awssdk</groupId>\r\n      <artifactId>sfn</artifactId>\r\n    </dependency>\r\n  \r\n    <dependency>\r\n      <groupId>com.amazonaws</groupId>\r\n      <artifactId>aws-java-sdk-lambda</artifactId>\r\n      <version>1.12.7</version>\r\n    </dependency>\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Actual behavior\r\n\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Running Quarkus native-image plugin on native-image 22.0.0.2-Final Mandrel Distribution (Java Version 11.0.14+9)                                  \r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] docker run --env LANG=C --rm -v internal-api-1.3.5-SNAPSHOT-native-\r\nge-source-jar:/project:z --name build-native-tjJBu quay.io/quarkus/ubi-quarkus-mandrel:22.0-java11 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-DCoordinatorEnvironmentBean.transactionStatu\r\nnagerEnable=false -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Dcom.sun.xml.bind.v2.bytecode.ClassTailor.noOptimize=true -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegate\r\ntory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=3 -J-Duser.language=en -J-Duser.country=US -J-Dfile.encoding=UTF-8 -H:-ParseOnce -H:ReflectionC\r\nigurationFiles=reflect-config.json -H:ResourceConfigurationFiles=resources-config.json --initialize-at-run-time=java.awt.Toolkit,sun.awt.AWTAccessor,java.awt.Color,--trace-class-initialization=java.awt.Toolki\r\nun.awt.AWTAccessor,java.awt.Color -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy\\$BySpaceAndTime -H:+JNI -H:+AllowFoldMethods -H:FallbackThreshold=0 -H:+ReportExceptionStackTraces\r\n-Xmx8g -H:-AddAllCharsets -H:EnableURLProtocols=http,https -H:-UseServiceLoaderFeature -H:+StackTrace internal-api-1.3.5-SNAPSHOT-runner -jar internal-api-1.3.5-SNAPSHOT-runner.jar                  \r\n========================================================================================================================                                                                                        \r\nGraalVM Native Image: Generating 'internal-api-1.3.5-SNAPSHOT-runner'...                                                                                                                                   \r\n========================================================================================================================                                                                                        \r\n[1/7] Initializing...                                                                                   (22.1s @ 0.30GB)                                                                                        \r\n Version info: 'GraalVM 22.0.0.2-Final Java 11 Mandrel Distribution'                                                                                                                                            \r\n 7 user-provided feature(s)                                                                                                                                                                                     \r\n  - io.quarkus.awt.runtime.graal.AwtFeature                                                                                                                                                                     \r\n  - io.quarkus.caffeine.runtime.graal.CacheConstructorsAutofeature                                                                                                                                              \r\n  - io.quarkus.jdbc.postgresql.runtime.graal.SQLXLMFeature                                                                                                                                                      \r\n  - io.quarkus.runner.AutoFeature                                                                                                                                                                               \r\n  - io.quarkus.runtime.graal.ResourcesFeature                                                                                                                                                                   \r\n  - org.hibernate.graalvm.internal.GraalVMStaticAutofeature                                                                                                                                                     \r\n  - org.hibernate.graalvm.internal.QueryParsingSupport                                                                                                                                                          \r\nThe bundle named: messages, has not been found. If the bundle is part of a module, verify the bundle name is a fully qualified class name. Otherwise verify the bundle path is accessible in the classpath.     \r\n[2/7] Performing analysis...  [*]                                                                       (61.2s @ 2.94GB)                                                                                        \r\n09:45:43,408 INFO  [org.hib.Version] HHH000412: Hibernate ORM core version 1.3.5-SNAPSHOT                                                                                                                       \r\n09:45:43,560 INFO  [org.hib.ann.com.Version] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}                                                                                                           \r\n09:45:43,599 INFO  [org.hib.dia.Dialect] HHH000400: Using dialect: io.quarkus.hibernate.orm.runtime.dialect.QuarkusPostgreSQL10Dialect                                                                          \r\n09:45:54,403 INFO  [org.jbo.threads] JBoss Threads version 3.4.2.Final                                                                                                                                          \r\nTo see how the classes got initialized, use --trace-class-initialization=sun.awt.AWTAccessor,java.awt.Toolkit,java.awt.Color                                                                                    \r\n  22,780 (90.78%) of 25,093 classes reachable                                                                                                                                                                   \r\n  33,865 (69.39%) of 48,801 fields reachable                                                                                                                                                                    \r\n 119,909 (70.47%) of 170,147 methods reachable                                                                                                                                                                  \r\n     580 classes, 1,079 fields, and 3,123 methods registered for reflection                                                                                                                                     \r\n                                                                                                                                                                                                                \r\nError: Classes that should be initialized at run time got initialized during image building:                                                                                                                    \r\n sun.awt.AWTAccessor the class was requested to be initialized at run time (from the command line with 'sun.awt.AWTAccessor'). To see why sun.awt.AWTAccessor got initialized use --trace-class-initialization=s\r\nawt.AWTAccessor                                                                                                                                                                                                 \r\njava.awt.Toolkit the class was requested to be initialized at run time (from the command line with 'java.awt.Toolkit'). To see why java.awt.Toolkit got initialized use --trace-class-initialization=java.awt.To\r\nit                                                                                                                                                                                                              \r\njava.awt.Color the class was requested to be initialized at run time (from the command line with 'java.awt.Color'). To see why java.awt.Color got initialized use --trace-class-initialization=java.awt.Color   \r\n                                                                                                                                                                                                                \r\ncom.oracle.svm.core.util.UserError$UserException: Classes that should be initialized at run time got initialized during image building:                                                                         \r\n sun.awt.AWTAccessor the class was requested to be initialized at run time (from the command line with 'sun.awt.AWTAccessor'). To see why sun.awt.AWTAccessor got initialized use --trace-class-initialization=s\r\nawt.AWTAccessor                                                                                                                                                                                                 \r\njava.awt.Toolkit the class was requested to be initialized at run time (from the command line with 'java.awt.Toolkit'). To see why java.awt.Toolkit got initialized use --trace-class-initialization=java.awt.To\r\nit                                                                                                                                                                                                              \r\njava.awt.Color the class was requested to be initialized at run time (from the command line with 'java.awt.Color'). To see why java.awt.Color got initialized use --trace-class-initialization=java.awt.Color   \r\n                                                                                                                                                                                                                \r\n        at com.oracle.svm.core.util.UserError.abort(UserError.java:73)                                                                                                                                          \r\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.checkDelayedInitialization(ConfigurableClassInitialization.java:555)                                                       \r\n        at com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.duringAnalysis(ClassInitializationFeature.java:167)                                                                             \r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$10(NativeImageGenerator.java:704)                                                                                              \r\n        at com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:74)                                                                                                                          \r\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$11(NativeImageGenerator.java:704)                                                                                              \r\n        at com.oracle.graal.pointsto.PointsToAnalysis.runAnalysis(PointsToAnalysis.java:755)                                                                                                                    \r\n        at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:702)                                                                                                        \r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:537)                                                                                                                      \r\n        at com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:494)                                                                                                                        \r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:426)                                                                                                     \r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:587)                                                                                                          \r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:126)                                                                                                           \r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus.main(NativeImageGeneratorRunner.java:617)                                                                                                  \r\n------------------------------------------------------------------------------------------------------------------------                                                                                        \r\n                        9.1s (10.7% of total time) in 40 GCs | Peak RSS: 5.16GB | CPU load: 7.83                                                                                                                \r\n------------------------------------------------------------------------------------------------------------------------                                                                                        \r\n\r\n\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"11.0.11\" 2021-04-20\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n22.0.0.2-Final Mandrel Distribution (Java Version 11.0.14+9)\r\n\r\n### Quarkus version or git rev\r\n\r\n2.5.0.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nMaven home: C:\\opt\\apache-maven-3.8.1\\bin\\.. Java version: 11.0.11, vendor: AdoptOpenJDK\r\n\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25034/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25034/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
