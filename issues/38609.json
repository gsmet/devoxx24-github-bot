{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38609",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38609/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38609/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38609/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38609",
  "id": 2120911811,
  "node_id": "I_kwDOCFbutM5-aovD",
  "number": 38609,
  "title": " Support OIDC Client JWT Bearer authentication",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/299",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/299",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/299/labels",
    "id": 10429739,
    "node_id": "MI_kwDOCFbutM4AnyUr",
    "number": 299,
    "title": "3.9.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 298,
    "state": "closed",
    "created_at": "2024-01-17T09:57:21Z",
    "updated_at": "2024-07-18T12:19:14Z",
    "due_on": null,
    "closed_at": "2024-03-13T12:25:09Z"
  },
  "comments": 1,
  "created_at": "2024-02-06T14:23:47Z",
  "updated_at": "2024-02-12T14:50:07Z",
  "closed_at": "2024-02-12T14:50:04Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc7523 defines how an incoming or possibly stored JWT bearer token can be exchanged using the JWT bearer token grant (already supported by the OIDC client) or be used to authenticate the client as part of whatever grant requests that are made. \r\n\r\nFor example, the use case in #38458 is to use the token capturing the  current client credentials which is periodically recycled in the cluster thus making it a more secure option to authenticate to the OIDC server. \r\n\r\n### Implementation ideas\r\n\r\nThis token is obtained out of band as far as the OIDC client is concerned whose job is to acquire tokens, therefore to support the JWT bearer client authentication at the OIDC client filter level a custom filter is required.\r\n\r\nThis issue is about making creating such custom filters very easy by only having to extend an abstract class and provide a required assertion property.\r\n\r\nGoing forward it will also benefit other cases where the OIDC client request parameters have to be provided dynamically at the filter level",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38609/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38609/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
