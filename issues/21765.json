{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21765",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21765/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21765/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21765/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21765",
  "id": 1065717531,
  "node_id": "I_kwDOCFbutM4_hY8b",
  "number": 21765,
  "title": "The interceptor has added parameters and cannot be intercepted",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2021-11-29T07:56:12Z",
  "updated_at": "2021-11-29T10:34:37Z",
  "closed_at": "2021-11-29T09:24:15Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\n```java\r\n@InterceptorBinding\r\n@Documented\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Target({ElementType.TYPE, ElementType.METHOD})\r\npublic @interface Log {\r\n\r\n\r\n    String value() default \"\";\r\n}\r\n```\r\n\r\n```java\r\n@Slf4j\r\n@Log\r\n@Interceptor\r\n@Priority(Interceptor.Priority.PLATFORM_BEFORE + 200)\r\npublic class LogInterceptor {\r\n\r\n    @AroundInvoke\r\n    Object invocation(InvocationContext context) throws Exception {\r\n        // 获取注解参数\r\n        Method method = context.getMethod();\r\n        String value = method.getAnnotation(Log.class).value();\r\n        log.info(\"===============\" + value + \"=============================\");\r\n        return context.proceed();\r\n    }\r\n}\r\n```\r\n\r\n```java\r\n @Log(value = \"1111111\")\r\n    @GET\r\n    @Operation(summary = \"查询包裹签收信息列表\")\r\n    public Response queryList(@BeanParam ParcelReceiveInfoQuery parcelReceiveInfoQuery) {\r\n        return Response.ok(parcelReceiveInfoService.queryList(parcelReceiveInfoQuery)).build();\r\n    }\r\n```\r\n\r\nI customized an annotation, and a value string is generated inside the annotation. When the value is not assigned, the interceptor defined by the program can enter the corresponding method of @AroundInvoke. When I use annotations to assign values to the Resource, the interceptor fails.\r\n\r\n### Expected behavior\r\n\r\nAfter the annotation declares the parameters and executes, the interceptor runs normally\r\n\r\n### Actual behavior\r\n\r\nInterceptor does not execute\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n11.0.13\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n21.3.0\r\n\r\n### Quarkus version or git rev\r\n\r\n2.4.2.Final/2.5.0Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nmvnw\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21765/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21765/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
