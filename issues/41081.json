{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41081",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41081/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41081/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41081/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/41081",
  "id": 2342109734,
  "node_id": "I_kwDOCFbutM6LmcIm",
  "number": 41081,
  "title": "`ContextNotActiveException` in `SecurityIdentityAugmentor` since Quarkus 3.10",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1808747697,
      "node_id": "MDU6TGFiZWwxODA4NzQ3Njk3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/cache",
      "name": "area/cache",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/334",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/334",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/334/labels",
    "id": 11163455,
    "node_id": "MI_kwDOCFbutM4Aqlc_",
    "number": 334,
    "title": "3.8.6",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 117,
    "state": "closed",
    "created_at": "2024-06-10T07:54:20Z",
    "updated_at": "2024-08-28T09:33:53Z",
    "due_on": null,
    "closed_at": "2024-08-28T09:33:53Z"
  },
  "comments": 28,
  "created_at": "2024-06-09T08:51:56Z",
  "updated_at": "2024-08-14T12:37:47Z",
  "closed_at": "2024-07-05T19:04:57Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nSince Quarkus 3.10 we get a `ContextNotActiveException` in our own `SecurityIdentityAugmentor`.\r\n\r\n```\r\n2024-06-01 15:59:51,328 ERROR [com.example.fre.ser.ExceptionMappers] (vert.x-eventloop-thread-3) Es ist ein unbehandelter Fehler aufgetreten.: jakarta.enterprise.context.ContextNotActiveException: RequestScoped context was not active when trying to obtain a bean instance for a client proxy of CLASS bean [class=io.quarkus.vertx.http.runtime.CurrentVertxRequest, id=0_6n6EmChCiiDdd8HelptG_A0AE]\r\n\t- you can activate the request context for a specific method using the @ActivateRequestContext interceptor binding\r\n\tat io.quarkus.arc.impl.ClientProxies.notActive(ClientProxies.java:70)\r\n\tat io.quarkus.arc.impl.ClientProxies.getSingleContextDelegate(ClientProxies.java:30)\r\n\tat io.quarkus.vertx.http.runtime.CurrentVertxRequest_ClientProxy.arc$delegate(Unknown Source)\r\n\tat io.quarkus.vertx.http.runtime.CurrentVertxRequest_ClientProxy.setCurrent(Unknown Source)\r\n\tat io.quarkus.resteasy.reactive.server.runtime.QuarkusCurrentRequest.set(QuarkusCurrentRequest.java:33)\r\n\tat org.jboss.resteasy.reactive.server.core.CurrentRequestManager.set(CurrentRequestManager.java:12)\r\n\tat org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext.handleRequestScopeActivation(ResteasyReactiveRequestContext.java:654)\r\n\tat io.quarkus.resteasy.reactive.server.runtime.QuarkusResteasyReactiveRequestContext.handleRequestScopeActivation(QuarkusResteasyReactiveRequestContext.java:39)\r\n\tat org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.requireCDIRequestScope(AbstractResteasyReactiveContext.java:264)\r\n\tat org.jboss.resteasy.reactive.server.handlers.ResponseWriterHandler.handle(ResponseWriterHandler.java:27)\r\n\tat io.quarkus.resteasy.reactive.server.runtime.QuarkusResteasyReactiveRequestContext.invokeHandler(QuarkusResteasyReactiveRequestContext.java:147)\r\n\tat org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:147)\r\n\tat org.jboss.resteasy.reactive.server.vertx.VertxResteasyReactiveRequestContext$1$1.handle(VertxResteasyReactiveRequestContext.java:78)\r\n\tat org.jboss.resteasy.reactive.server.vertx.VertxResteasyReactiveRequestContext$1$1.handle(VertxResteasyReactiveRequestContext.java:75)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:279)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:261)\r\n\tat io.vertx.core.impl.ContextInternal.lambda$runOnContext$0(ContextInternal.java:59)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\r\n```\r\n\r\nWe have not yet been able to create a reproducer, but we hope that a Quarkus expert can help with the following sample code. We were able to narrow down the problem, the exception always occurs when the cache is updated. \r\n\r\n```kotlin\r\nimport com.github.benmanes.caffeine.cache.Caffeine\r\nimport com.github.benmanes.caffeine.cache.LoadingCache\r\nimport io.quarkus.oidc.client.filter.OidcClientFilter\r\nimport io.quarkus.security.identity.AuthenticationRequestContext\r\nimport io.quarkus.security.identity.SecurityIdentity\r\nimport io.quarkus.security.identity.SecurityIdentityAugmentor\r\nimport io.quarkus.security.runtime.QuarkusSecurityIdentity\r\nimport io.smallrye.jwt.auth.principal.JWTCallerPrincipal\r\nimport io.smallrye.mutiny.Uni\r\nimport jakarta.enterprise.context.ApplicationScoped\r\nimport jakarta.inject.Inject\r\nimport jakarta.ws.rs.GET\r\nimport jakarta.ws.rs.Path\r\nimport jakarta.ws.rs.PathParam\r\nimport jakarta.ws.rs.Produces\r\nimport jakarta.ws.rs.core.MediaType\r\nimport org.eclipse.microprofile.jwt.Claims\r\nimport org.eclipse.microprofile.rest.client.inject.RegisterRestClient\r\nimport org.eclipse.microprofile.rest.client.inject.RestClient\r\nimport java.time.Duration\r\n\r\ndata class ExampleRolesResponse(val roles: List<String>)\r\n\r\n@RegisterRestClient\r\n@OidcClientFilter\r\n@ApplicationScoped\r\ninterface ExampleRestClient {\r\n\r\n    @GET\r\n    @Produces(MediaType.APPLICATION_JSON)\r\n    @Path(\"auth/{email}\")\r\n    fun getRoles(@PathParam(\"email\") email: String): Uni<ExampleRolesResponse>\r\n}\r\n\r\n@ApplicationScoped\r\nclass ExampleAuthorizationProvider @Inject constructor(\r\n    @RestClient private val client: ExampleRestClient,\r\n) {\r\n\r\n    private val cache: LoadingCache<String, Uni<ExampleRolesResponse>> = Caffeine.newBuilder()\r\n        .expireAfterWrite(Duration.ofMinutes(1L))\r\n        .build { email -> client.getRoles(email).memoize().indefinitely() } // the exception is thrown here\r\n\r\n    fun getRoles(email: String): Uni<ExampleRolesResponse> {\r\n        return cache.get(email)\r\n    }\r\n}\r\n\r\n@ApplicationScoped\r\nclass ExampleSecurityIdentityAugmentor @Inject constructor(\r\n    private val authProvider: ExampleAuthorizationProvider,\r\n) : SecurityIdentityAugmentor {\r\n\r\n    override fun augment(identity: SecurityIdentity, context: AuthenticationRequestContext): Uni<SecurityIdentity> {\r\n        val email = identity.email()\r\n        if (identity.isAnonymous || email == null) {\r\n            return Uni.createFrom().item(identity)\r\n        }\r\n\r\n        return authProvider.getRoles(email)\r\n            .map { response -> identity.createFrom(response) }\r\n    }\r\n\r\n    private fun SecurityIdentity.email(): String? {\r\n        return (principal as? JWTCallerPrincipal)\r\n            ?.getClaim<String>(Claims.email)\r\n            ?.lowercase()\r\n    }\r\n\r\n    private fun SecurityIdentity.createFrom(response: ExampleRolesResponse): SecurityIdentity {\r\n        val newAttributes = this.attributes + (\"example.response\" to response)\r\n        \r\n        return QuarkusSecurityIdentity.builder()\r\n            .addAttributes(newAttributes)\r\n            .addCredentials(this.credentials)\r\n            .addRoles(response.roles.toSet())\r\n            .addPermissionChecker { permission -> this.checkPermission(permission) } // sustain previous permission checks\r\n            .setPrincipal(this.principal)\r\n            .setAnonymous(this.isAnonymous)\r\n            .build()\r\n    }\r\n\r\n    override fun priority(): Int = 1000\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Actual behavior\r\n\r\n_No response_\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nLinux\r\n\r\n### Output of `java -version`\r\n\r\nJava 21\r\n\r\n### Quarkus version or git rev\r\n\r\nQuarkus 3.11.1\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41081/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41081/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
