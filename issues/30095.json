{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30095",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30095/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30095/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30095/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30095",
  "id": 1513519337,
  "node_id": "I_kwDOCFbutM5aNnjp",
  "number": 30095,
  "title": "Parameter ssl.endpoint.identification.algorithm with empty value doesn't work in quarkus 2.x",
  "labels": [],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2022-12-29T08:49:02Z",
  "updated_at": "2022-12-29T11:08:50Z",
  "closed_at": "2022-12-29T11:08:48Z",
  "active_lock_reason": null,
  "body": "Hi guys,\r\nI use this configuration for connection to kafka topic:\r\n\r\nmp.messaging.incoming.ddd.connector=smallrye-kafka\r\nmp.messaging.incoming.ddd.topic=trx\r\nmp.messaging.incoming.ddd.bootstrap.servers=xxx:9095\r\nmp.messaging.incoming.ddd.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer      \r\nmp.messaging.incoming.ddd.security.protocol=SASL_SSL\r\nmp.messaging.incoming.ddd.ssl.truststore.location=/truststore.jks\r\nmp.messaging.incoming.ddd.ssl.truststore.password=${KAFKA_PASS}\r\nmp.messaging.incoming.ddd.ssl.enabled.protocols=TLSv1.2\r\nmp.messaging.incoming.ddd.ssl.truststore.type=JKS\r\n**mp.messaging.incoming.ddd.ssl.endpoint.identification.algorithm=**\r\nmp.messaging.incoming.ddd.sasl.mechanism=SCRAM-SHA-512\r\nmp.messaging.incoming.ddd.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username....\r\n\r\nit works perfectly fine in 1.x Quarkus versions. But not in quarkus 2.x.\r\n\r\nSo running quarkus in debug mode consumers are configured differently.\r\n\r\nQuarkus 1.x log:\r\n\r\n... ...\r\n ssl.cipher.suites = null\r\n    ssl.enabled.protocols = [TLSv1.2]\r\n    **ssl.endpoint.identification.algorithm =**\r\n    ssl.key.password = null\r\n    ssl.keymanager.algorithm = SunX509\r\n    ssl.keystore.location = null\r\n    ssl.keystore.password = null\r\n    ssl.keystore.type = JKS\r\n    ssl.protocol = TLSv1.2\r\n    ssl.provider = null\r\n    ssl.secure.random.implementation = null\r\n    ssl.trustmanager.algorithm = PKIX\r\n   ... ...\r\n\r\nQuarkus 2.x log:\r\n\r\n ... ...\r\n    ssl.cipher.suites = null\r\n    ssl.enabled.protocols = [TLSv1.2, TLSv1.3]\r\n    **ssl.endpoint.identification.algorithm = https**\r\n    ssl.engine.factory.class = null\r\n    ssl.key.password = null\r\n    ssl.keymanager.algorithm = SunX509\r\n    ssl.keystore.certificate.chain = null\r\n    ssl.keystore.key = null\r\n    ssl.keystore.location = null\r\n    ssl.keystore.password = null\r\n    ssl.keystore.type = JKS\r\n    ssl.protocol = TLSv1.3\r\n    ssl.provider = null\r\n    ssl.secure.random.implementation = null\r\n    ssl.trustmanager.algorithm = PKIX\r\n   ... ...\r\n\r\n\r\nI get this errror : Caused by: java.security.cert.CertificateException: No subject alternative DNS name matching xxx found.\r\n\r\nIt is known that the hostname verification can be bypassed with the ssl.endpoint.identification.algorithm parameter to empty value, but quarkus 2 ignore the configuration.\r\n\r\nHow can I override ssl.endpoint.identification.algorithm parameter in quarkus 2.x?\r\n\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30095/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30095/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
