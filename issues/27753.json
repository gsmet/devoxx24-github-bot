{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27753",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27753/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27753/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27753/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27753",
  "id": 1363029898,
  "node_id": "I_kwDOCFbutM5RPi-K",
  "number": 27753,
  "title": "`quarkus-oidc` loses a refresh token if the provider does not recycle it during the refresh token grant",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/207",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/207",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/207/labels",
    "id": 8420699,
    "node_id": "MI_kwDOCFbutM4AgH1b",
    "number": 207,
    "title": "2.13.0.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 55,
    "state": "closed",
    "created_at": "2022-09-14T07:36:50Z",
    "updated_at": "2022-09-21T16:48:10Z",
    "due_on": null,
    "closed_at": "2022-09-21T16:48:10Z"
  },
  "comments": 1,
  "created_at": "2022-09-06T10:00:00Z",
  "updated_at": "2022-09-20T16:43:06Z",
  "closed_at": "2022-09-20T09:26:48Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\n`quarkus-oidc`, once it completes the code flow, keeps ID, access and refresh tokens concatenated in a single cookie or split into 3 separate cookies. The lifetime of all of these cookies is set to the age of the ID token plus some extra configurable duration.\r\nIf the session is about to expire and `quarkus-oidc` is allowed to auto-refresh it then it will use the refresh token to refresh ID and access tokens, and if a provider such as Keycloak supports a recommended RT recycling (to minimize the risk of RT being stolen), a new refresh token will be returned.\r\n\r\nHowever if a provider does not return a RT with a RT grant, then the original RT, if it is still valid should stay around - but unfortunately it is gone since `quarkus-oidc` deletes the session related cookies when auto-refreshing.\r\n\r\nIt needs to be investigated if it can be properly addressed by default - it is not a real blocker since if RT is not available - the side-affect is that the user will have to re-authenticate manually when the session has expired - but it does effect a user experience.\r\n\r\nPerhaps the best option is to use a custom `TokenStateManager` in such cases\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27753/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27753/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
