{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20950",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20950/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20950/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20950/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20950",
  "id": 1033564316,
  "node_id": "I_kwDOCFbutM49mvCc",
  "number": 20950,
  "title": "Quarkus Agroal Health Check: problem with additional unnamed DataSource producers",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2236032169,
      "node_id": "MDU6TGFiZWwyMjM2MDMyMTY5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/health",
      "name": "area/health",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2955097332,
      "node_id": "MDU6TGFiZWwyOTU1MDk3MzMy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/agroal",
      "name": "area/agroal",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/152",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/152",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/152/labels",
    "id": 7239525,
    "node_id": "MI_kwDOCFbutM4Abndl",
    "number": 152,
    "title": "2.5.0.CR1",
    "description": "",
    "creator": {
      "login": "aloubyansky",
      "id": 323379,
      "node_id": "MDQ6VXNlcjMyMzM3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/323379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aloubyansky",
      "html_url": "https://github.com/aloubyansky",
      "followers_url": "https://api.github.com/users/aloubyansky/followers",
      "following_url": "https://api.github.com/users/aloubyansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/aloubyansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aloubyansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aloubyansky/subscriptions",
      "organizations_url": "https://api.github.com/users/aloubyansky/orgs",
      "repos_url": "https://api.github.com/users/aloubyansky/repos",
      "events_url": "https://api.github.com/users/aloubyansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aloubyansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 305,
    "state": "closed",
    "created_at": "2021-10-11T08:43:12Z",
    "updated_at": "2022-01-07T16:32:59Z",
    "due_on": null,
    "closed_at": "2021-11-10T17:25:22Z"
  },
  "comments": 3,
  "created_at": "2021-10-22T13:08:06Z",
  "updated_at": "2021-11-02T09:15:58Z",
  "closed_at": "2021-11-02T09:15:56Z",
  "active_lock_reason": null,
  "body": "I am using Quarkus `2.4.0.CR1`. I enabled health checks in my quarkus-application by adding the `quarkus-smallrye-health` extension:\r\n```xml\r\n<dependency>\r\n  <groupId>io.quarkus</groupId>\r\n  <artifactId>quarkus-smallrye-health</artifactId>\r\n</dependency>\r\n```\r\n\r\nI also have a datasource which I inject and then have to CDI-produce under a different qualifier for a library I am using to find it:\r\n```java\r\npublic class PersistenceProducer {\r\n    private final DataSource dataSource;\r\n\r\n    @Inject\r\n    public PersistenceProducer(@Named(\"my-datasource\") DataSource dataSource) {\r\n        this.dataSource = dataSource;\r\n    }\r\n\r\n    @Produces\r\n    @MyCustomQualifier\r\n    public DataSource getMyDataSourceWithQualifier() {\r\n        return dataSource;\r\n    }\r\n}\r\n```\r\n\r\nHowever, when I try to access `/q/health-ui/` I encounter the following error:\r\n```\r\n2021-10-22 14:49:35,805 ERROR [io.sma.health] (vert.x-worker-thread-0) SRHCK01000: Error processing Health Checks: java.lang.NullPointerException: Cannot invoke \"javax.sql.DataSource.getConnection()\" because the return value of \"java.util.Map$Entry.getValue()\" is null\r\n        at io.quarkus.agroal.runtime.health.DataSourceHealthCheck.call(DataSourceHealthCheck.java:56)\r\n        at io.quarkus.agroal.runtime.health.DataSourceHealthCheck_Subclass.call$$superforward1(DataSourceHealthCheck_Subclass.zig:89)\r\n        ...\r\n```\r\n\r\nI tracked down the issue to `quarkus-agroal`'s `DataSourceHealthCheck` class. In its `init` method it retrieves all `DataSource` beans like this:\r\n\r\n```\r\nSet<Bean<?>> beans = Arc.container().beanManager().getBeans(DataSource.class);\r\n```\r\n\r\nWhich also finds the beans produced by my custom producer method. Unfortunately since I did not name them, the resulting beans don't have a `@Named` qualifier. This becomes an issue a few lines further down:\r\n```java\r\nif (bean.getName() == null) {\r\n    if (!excludedNames.contains(DataSourceUtil.DEFAULT_DATASOURCE_NAME)) {\r\n        // this is the default DataSource: retrieve it by type\r\n        DataSource defaultDs = Arc.container().instance(DataSource.class).get();\r\n        dataSources.put(DEFAULT_DS, defaultDs);\r\n    }\r\n} else {\r\n    // ...\r\n}\r\n```\r\n\r\nBecause the bean has no name it assumes that it's the default datasource. Since my application does not have a default datasource, it effectively inserts null `dataSources.put(DEFAULT_DS, null);`, which causes the aforementioned exception later on.\r\n\r\nA workaround is to give the bean I produce a bogus name:\r\n```java\r\n@Named(\"bogus\")\r\n@Produces\r\n@MyCustomQualifier\r\npublic DataSource getMyDataSourceWithQualifier() {\r\n    return dataSource;\r\n}\r\n```\r\n\r\nBut ideally I would expect `quarkus-agroal`'s `DataSourceHealthCheck` to handle this gracefully out of the box.\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20950/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20950/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
