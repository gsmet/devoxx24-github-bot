{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21854",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21854/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21854/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21854/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21854",
  "id": 1068557447,
  "node_id": "I_kwDOCFbutM4_sOSH",
  "number": 21854,
  "title": "Qute: shorter enum constant access",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1714005220,
      "node_id": "MDU6TGFiZWwxNzE0MDA1MjIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/qute",
      "name": "area/qute",
      "color": "0366d6",
      "default": false,
      "description": "The template engine"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/161",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161/labels",
    "id": 7468359,
    "node_id": "MI_kwDOCFbutM4AcfVH",
    "number": 161,
    "title": "2.7.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 334,
    "state": "closed",
    "created_at": "2021-12-08T07:48:18Z",
    "updated_at": "2022-02-03T19:52:11Z",
    "due_on": null,
    "closed_at": "2022-01-19T12:42:36Z"
  },
  "comments": 4,
  "created_at": "2021-12-01T15:36:10Z",
  "updated_at": "2021-12-13T15:02:14Z",
  "closed_at": "2021-12-09T13:28:31Z",
  "active_lock_reason": null,
  "body": "### Description\n\nAt the moment we make enum values accessible in views using this declaration:\r\n\r\n```java\r\n@TemplateData\r\npublic enum ContentStatus {\r\n    NEW,\r\n    ACCEPTED,\r\n    REJECTED,\r\n    DELETED;\r\n}\r\n```\r\n\r\nWhich then exposes values such as `fr_epardaud_model_ContentStatus:NEW` which is handy in case of name conflict, but not so much if you don't have any conflict.\r\n\r\nThe shorter behaviour can already be obtained with `@TemplateData(namespace = TemplateData.SIMPLENAME)` but I'd like to have another annotation that would be an alias for this. Perhaps `@TemplateEnum`?\r\n\r\n```java\r\n@TemplateEnum\r\npublic enum ContentStatus {\r\n    NEW,\r\n    ACCEPTED,\r\n    REJECTED,\r\n    DELETED;\r\n}\r\n```\r\n\r\nThis would be usable in the views as `ContentStatus:NEW`.\r\n\r\nNote that ATM I have a special case for accessing the `values()` enum static member:\r\n\r\n```java\r\n    @TemplateExtension(namespace = \"ReputationGainReason\", matchName = \"*\")\r\n    static ReputationGainReason reputaionGainReason(String value) {\r\n       return ReputationGainReason.valueOf(value);\r\n    }\r\n\r\n    @TemplateExtension(namespace = \"ReputationGainReason\", matchName = \"values\", priority = 6)\r\n    static ReputationGainReason[] reputaionGainReasonValues() {\r\n       return ReputationGainReason.values();\r\n    }\r\n```\r\n\r\nAnd I wonder if we should not automatically add it as for for all enums declared with `@TemplateData` and `@TemplateEnum`? So `ContentStatus:values` would call the `.values()` static method. WDYT?\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21854/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21854/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
