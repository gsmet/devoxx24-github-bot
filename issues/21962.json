{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21962",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21962/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21962/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21962/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21962",
  "id": 1072334516,
  "node_id": "I_kwDOCFbutM4_6oa0",
  "number": 21962,
  "title": "MTLS unrecognized critical extension(s)",
  "labels": [
    {
      "id": 985346626,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjY=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/question",
      "name": "kind/question",
      "color": "d876e3",
      "default": false,
      "description": "Further information is requested"
    },
    {
      "id": 1676631606,
      "node_id": "MDU6TGFiZWwxNjc2NjMxNjA2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/windows",
      "name": "env/windows",
      "color": "edea47",
      "default": false,
      "description": "Impacts Windows machines"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2021-12-06T16:16:08Z",
  "updated_at": "2022-01-01T17:38:33Z",
  "closed_at": "2022-01-01T17:38:31Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI write my MTLS Server with certificates from CA. The client can verify server's keystore with his truststore. But the server can't verify client's keystore with server's truststore. I get an error unrecognized critical extension(s) when server verifys client's certificate. \r\n\r\n\n\n### Expected behavior\n\nServer can verify client's certificate successfully.\n\n### Actual behavior\n\nThe client can verify server's keystore with his truststore. But the server can't verify client's keystore with server's truststore. \r\n\r\nError trace:\r\n\r\njavax.net.ssl|ERROR|33|vert.x-eventloop-thread-23|2021-12-03 15:00:27.373 CET|TransportContext.java:341|Fatal (CERTIFICATE_UNKNOWN): PKIX path validation failed: java.security.cert.CertPathValidatorException: unrecognized critical extension(s) (\r\n\"throwable\" : {\r\n  sun.security.validator.ValidatorException: PKIX path validation failed: java.security.cert.CertPathValidatorException: unrecognized critical extension(s)\r\n  \tat java.base/sun.security.validator.PKIXValidator.doValidate(PKIXValidator.java:369)\r\n  \tat java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:263)\r\n  \tat java.base/sun.security.validator.Validator.validate(Validator.java:264)\r\n  \tat java.base/sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:313)\r\n  \tat java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:276)\r\n  \tat java.base/sun.security.ssl.X509TrustManagerImpl.checkClientTrusted(X509TrustManagerImpl.java:135)\r\n  \tat java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkClientCerts(CertificateMessage.java:682)\r\n  \tat java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:411)\r\n  \tat java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:375)\r\n  \tat java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:392)\r\n  \tat java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:443)\r\n  \tat java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1074)\r\n  \tat java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1061)\r\n  \tat java.base/java.security.AccessController.doPrivileged(Native Method)\r\n  \tat java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:1008)\r\n  \tat io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1548)\r\n  \tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1394)\r\n  \tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1235)\r\n  \tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1284)\r\n  \tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)\r\n  \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)\r\n  \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\r\n  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n  \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n  \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n  \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n  \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n  \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n  \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n  \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n  \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n  \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n  \tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n  \tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n  \tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n  \tat java.base/java.lang.Thread.run(Thread.java:829)\r\n  Caused by: java.security.cert.CertPathValidatorException: unrecognized critical extension(s)\r\n  \tat java.base/sun.security.provider.certpath.PKIXMasterCertPathValidator.validate(PKIXMasterCertPathValidator.java:140)\r\n  \tat java.base/sun.security.provider.certpath.PKIXCertPathValidator.validate(PKIXCertPathValidator.java:224)\r\n  \tat java.base/sun.security.provider.certpath.PKIXCertPathValidator.validate(PKIXCertPathValidator.java:144)\r\n  \tat java.base/sun.security.provider.certpath.PKIXCertPathValidator.engineValidate(PKIXCertPathValidator.java:83)\r\n  \tat java.base/java.security.cert.CertPathValidator.validate(CertPathValidator.java:309)\r\n  \tat java.base/sun.security.validator.PKIXValidator.doValidate(PKIXValidator.java:364)\r\n  \t... 37 more}\r\n\r\n)\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\nMicrosoft Windows [Version 10.0.18363.1916]\n\n### Output of `java -version`\n\nopenjdk version \"11.0.2\" 2019-01-15 OpenJDK Runtime Environment 18.9 (build 11.0.2+9) OpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.4.1.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.3\n\n### Additional information\n\nMaybe I have a critical extension which is known for quarkus? If yes, how can I asign this in quarkus?\r\n\r\nHere are all critical extensions that I saw in certificate what I get:\r\n      {\r\n        ObjectId: 2.5.29.31 Criticality=true\r\n        CRLDistributionPoints [\r\n          [DistributionPoint:\r\n             [URIName: http://xxxx:80/CRL?type=complete&issuer=xxxx]\r\n        , DistributionPoint:\r\n             [URIName: file:///c:/CRLs/xxxx.crl]\r\n        ]]\r\n      },\r\n     {\r\n        ObjectId: 2.5.29.15 Criticality=true\r\n        KeyUsage [\r\n          DigitalSignature\r\n          Key_Encipherment\r\n        ]\r\n      },\r\n      {\r\n        ObjectId: 2.5.29.19 Criticality=true\r\n        BasicConstraints:[\r\n          CA:true\r\n          PathLen:0\r\n        ]\r\n      },\r\n\r\n      {\r\n        ObjectId: 2.5.29.15 Criticality=true\r\n        KeyUsage [\r\n          DigitalSignature\r\n          Key_CertSign\r\n          Crl_Sign\r\n        ]\r\n      },\r\n\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21962/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21962/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
