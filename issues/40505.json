{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40505",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40505/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40505/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40505/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/40505",
  "id": 2283845091,
  "node_id": "I_kwDOCFbutM6IILXj",
  "number": 40505,
  "title": "Remote development mode: out of sync application",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1273039603,
      "node_id": "MDU6TGFiZWwxMjczMDM5NjAz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/devmode",
      "name": "area/devmode",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 0,
  "created_at": "2024-05-07T17:06:44Z",
  "updated_at": "2024-05-08T05:59:58Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen using remote development mode, I sometimes get in a situation where I make the change, call the endpoint, and get the old behavior. a few seconds later a call to the same endpoint will get me the new behavior.\r\nI assume the first call happens before the remote dev client had time to inform the remote side that a patch was coming.\r\nIn other cases, calling the endpoint blocks for some time, then renders the new behavior, which is expected.\r\nThe only complaint is that getting the result from the endpoint takes in my situation 20 seconds. I checked that there was plenty of resources available on the worker node, and that the cpu limit was high enough. The application is taking less than 50 millicores. so in my situation cpu does not seem to be the limiting factor.\r\nIt might very well depend on the application and the environment, but this type of delay will certainly push away developers and limit the usefulness of this feature as a result.\n\n### Expected behavior\n\nIdeally, after the change is made, calling the endpoint should block until we are ready to get the new behavior.\r\nRestart should ideally be fast in dev mode.\n\n### Actual behavior\n\nCalling the endpoint after the change sometimes gives me the old behavior. Then after some time I will get the new one.\r\nIt takes a long time for the application to restart.\n\n### How to Reproduce?\n\nI am using a test application with the following extensions: \r\n``` \r\n2024-05-07 18:27:43,314 INFO [io.quarkus] (Quarkus Main Thread) {} Installed features: [cache, cdi, config-yaml, confluent-registry-avro, hibernate-validator, ironjacamar, kafka-client, messaging, messaging-kafka, micrometer, narayana-jta, opentelemetry, rest, rest-client, rest-client-jackson, rest-jackson, scheduler, security, smallrye-context-propagation, smallrye-fault-tolerance, smallrye-health, smallrye-openapi, swagger-ui, vault, vertx]\r\n``` \r\n\r\nThe application is not doing much, except sending a kafka message every 5 secs, and receiving the message it sent.\r\n\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### Quarkus version or git rev\n\n89b732bdc82 (future 3.11)\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40505/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40505/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
