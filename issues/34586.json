{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34586",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34586/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34586/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34586/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34586",
  "id": 1792156448,
  "node_id": "I_kwDOCFbutM5q0iMg",
  "number": 34586,
  "title": "Invalid handling of path segments in URLs by \"quarkus-resteasy-reactive\"",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/261",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/261",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/261/labels",
    "id": 9620417,
    "node_id": "MI_kwDOCFbutM4AksvB",
    "number": 261,
    "title": "3.2.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 137,
    "state": "closed",
    "created_at": "2023-07-05T15:27:44Z",
    "updated_at": "2023-08-07T13:21:27Z",
    "due_on": null,
    "closed_at": "2023-07-19T13:26:50Z"
  },
  "comments": 16,
  "created_at": "2023-07-06T20:03:59Z",
  "updated_at": "2023-07-18T16:24:13Z",
  "closed_at": "2023-07-18T14:03:19Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nIt looks like path splitting by \"quarkus-resteasy-reactive\" is slightly broken (\"quarkus-resteasy\" works), for following case (explained earlier at SO https://stackoverflow.com/questions/76632028/discrepancy-between-reactive-and-non-reactive-quarkus-jax-rs-endpoints-wrt-url-d).\r\n\r\nEndpoint like:\r\n\r\n```\r\n@ApplicationScoped\r\n@Path(\"/path\")\r\n@Produces(MediaType.APPLICATION_JSON)\r\n@Consumes(MediaType.APPLICATION_JSON)\r\npublic class PathResource\r\n{\r\n    @GET\r\n    @Path(\"/list/{primaryKey: .+}\")\r\n    public String pathAsList(@PathParam(\"primaryKey\") List<PathSegment> path)\r\n    {\r\n       return \"As List/std (%d) -> %s\".formatted(path.size(), path);\r\n    }\r\n```\r\n\r\nwhen invoked with URL like:\r\n\r\n```\r\nhttp://localhost:8081/path/list/ab%2Fcd/ef%2Fgh\r\n```\r\n\r\nshould produce `List` of 2 path elements; `\"ab/cd\"` and `\"ef/gh\"`, but actually produces 4 (for \"ab\", \"cd\", \"ef\" and \"gh\").\r\nThis would be due to first decoding the full path and then splitting by slashes; as opposed to reverse.\r\n\r\nI have Rest-assured tests to verify behavior difference (see https://github.com/tatu-at-datastax/quarkus-demo/blob/main/src/test/java/com/fasterxml/quarkus/PathResourceTest.java) but the call looks like:\r\n\r\n```\r\n    @Test\r\n    public void pathAsList() {\r\n        given()\r\n          .when().get(\"/path/list/{seg1}/{seg2}\", \"ab/cd\", \"ef/gh\")\r\n          .then()\r\n             .statusCode(200)\r\n             .body(is(\"As List/std (2) -> [ab/cd, ef/gh]\"));\r\n    }\r\n```\r\n\r\nResult is passing test when running against \"quarkus-resteasy\", but fail against \"quarkus-resteasy-reactive\".\r\n\r\n### Expected behavior\r\n\r\nDecoding of path parameter should split by non-encoded slashes first, then decode path segments; not decode full path and split by all slashes (encoded or not)\r\n\r\n### Actual behavior\r\n\r\nDue to what appears to be pre-mature character entity decoding, path segments are split also by encoded slashes (%2F), not only plain un-encoded ones.\r\n\r\n### How to Reproduce?\r\n\r\nReproduction included in description, but there is also Github repo:\r\n\r\n   https://github.com/tatu-at-datastax/quarkus-resteasy-reactive-34586\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"17.0.6\" 2023-01-17 LTS\r\n\r\n### GraalVM version (if different from Java)\r\n\r\nNot tested with graalVM\r\n\r\n### Quarkus version or git rev\r\n\r\n3.2.0.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.4\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34586/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34586/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
