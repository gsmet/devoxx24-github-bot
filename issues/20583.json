{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20583",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20583/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20583/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20583/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20583",
  "id": 1019875591,
  "node_id": "I_kwDOCFbutM48yhEH",
  "number": 20583,
  "title": "Qute: error reporting needs to be more concise",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1714005220,
      "node_id": "MDU6TGFiZWwxNzE0MDA1MjIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/qute",
      "name": "area/qute",
      "color": "0366d6",
      "default": false,
      "description": "The template engine"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 11,
  "created_at": "2021-10-07T10:24:20Z",
  "updated_at": "2022-08-04T09:28:26Z",
  "closed_at": "2022-08-04T09:28:26Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI'm getting Qute type-safe template errors displayed like this:\r\n\r\n```\r\n\tSuppressed: io.quarkus.qute.TemplateException: Incorrect expression found: {user}\r\n\t- Only type-safe expressions are allowed in the checked template defined via: fr.epardaud.rest.PersonOrGroups$Templates.view(); an expression must be based on a checked template parameter [autoAccept, artist], or bound via a param declaration, or the requirement must be relaxed via @CheckedTemplate(requireTypeSafeExpressions = false)\r\n\t- at PersonOrGroups/view.html:11\r\n\t\tat io.quarkus.qute.deployment.QuteProcessor.processTemplateErrors(QuteProcessor.java:170)\r\n\t\t... 11 more\r\n\tSuppressed: io.quarkus.qute.TemplateException: Incorrect expression found: {user}\r\n\t- Only type-safe expressions are allowed in the checked template defined via: fr.epardaud.rest.PersonOrGroups$Templates.view(); an expression must be based on a checked template parameter [autoAccept, artist], or bound via a param declaration, or the requirement must be relaxed via @CheckedTemplate(requireTypeSafeExpressions = false)\r\n\t- at PersonOrGroups/view.html:12\r\n\t\tat io.quarkus.qute.deployment.QuteProcessor.processTemplateErrors(QuteProcessor.java:170)\r\n\t\t... 11 more\r\n\tSuppressed: io.quarkus.qute.TemplateException: Incorrect expression found: {models.ContentStatus.REJECTED}\r\n\t- Only type-safe expressions are allowed in the checked template defined via: fr.epardaud.rest.PersonOrGroups$Templates.view(); an expression must be based on a checked template parameter [autoAccept, artist], or bound via a param declaration, or the requirement must be relaxed via @CheckedTemplate(requireTypeSafeExpressions = false)\r\n\t- at PersonOrGroups/view.html:13\r\n\t\tat io.quarkus.qute.deployment.QuteProcessor.processTemplateErrors(QuteProcessor.java:170)\r\n\t\t... 11 more\r\n\tSuppressed: io.quarkus.qute.TemplateException: Incorrect expression found: {models.ContentStatus.REJECTED}\r\n\t- Only type-safe expressions are allowed in the checked template defined via: fr.epardaud.rest.PersonOrGroups$Templates.view(); an expression must be based on a checked template parameter [autoAccept, artist], or bound via a param declaration, or the requirement must be relaxed via @CheckedTemplate(requireTypeSafeExpressions = false)\r\n\t- at PersonOrGroups/view.html:17\r\n\t\tat io.quarkus.qute.deployment.QuteProcessor.processTemplateErrors(QuteProcessor.java:170)\r\n\t\t... 11 more\r\n\tSuppressed: io.quarkus.qute.TemplateException: Incorrect expression found: {models.ContentStatus.NEW}\r\n\t- Only type-safe expressions are allowed in the checked template defined via: fr.epardaud.rest.PersonOrGroups$Templates.view(); an expression must be based on a checked template parameter [autoAccept, artist], or bound via a param declaration, or the requirement must be relaxed via @CheckedTemplate(requireTypeSafeExpressions = false)\r\n\t- at PersonOrGroups/view.html:18\r\n\t\tat io.quarkus.qute.deployment.QuteProcessor.processTemplateErrors(QuteProcessor.java:170)\r\n\t\t... 11 more\r\n```\r\n\r\nGiven that I have hundreds of these, it would be more convenient to have a more concise way to list errors, such as:\r\n\r\n```\r\n\tPersonOrGroups/view.html:11: Incorrect expression found: {user}\r\n\t- Only type-safe expressions are allowed in the checked template defined via: fr.epardaud.rest.PersonOrGroups$Templates.view(); an expression must be based on a checked template parameter [autoAccept, artist], or bound via a param declaration, or the requirement must be relaxed via @CheckedTemplate(requireTypeSafeExpressions = false)\r\n\tPersonOrGroups/view.html:12: Incorrect expression found: {user}\r\n\t- Only type-safe expressions are allowed in the checked template defined via: fr.epardaud.rest.PersonOrGroups$Templates.view(); an expression must be based on a checked template parameter [autoAccept, artist], or bound via a param declaration, or the requirement must be relaxed via @CheckedTemplate(requireTypeSafeExpressions = false)\r\netcâ€¦\r\n```\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20583/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20583/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
