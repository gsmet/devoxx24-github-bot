{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36287",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36287/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36287/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36287/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/36287",
  "id": 1926154167,
  "node_id": "I_kwDOCFbutM5yzse3",
  "number": 36287,
  "title": "Investigate overriding AppCDS in post integration test phase ",
  "labels": [
    {
      "id": 1273027849,
      "node_id": "MDU6TGFiZWwxMjczMDI3ODQ5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/core",
      "name": "area/core",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2023-10-04T12:52:52Z",
  "updated_at": "2023-10-04T12:53:51Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nCurrently AppCDS does not use a training set, but instead relies on running the application up to a certain point. This is safe to do, but it misses loading various classes\r\n\r\nAn interesting idea is to use the integration test as a training run that can then dump a new archive.\r\nWe can then replace the original AppCDS in the post integration test phase.\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36287/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36287/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
