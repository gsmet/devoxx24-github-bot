{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33547",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33547/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33547/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33547/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33547",
  "id": 1721531346,
  "node_id": "I_kwDOCFbutM5mnHvS",
  "number": 33547,
  "title": "infinispan-client + micrometer combination doesn't compile in native",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282122953,
      "node_id": "MDU6TGFiZWwxMjgyMTIyOTUz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/infinispan",
      "name": "area/infinispan",
      "color": "0366d6",
      "default": false,
      "description": "Infinispan"
    },
    {
      "id": 2236031886,
      "node_id": "MDU6TGFiZWwyMjM2MDMxODg2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/metrics",
      "name": "area/metrics",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/252",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/252",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/252/labels",
    "id": 9434344,
    "node_id": "MI_kwDOCFbutM4Aj_To",
    "number": 252,
    "title": "3.0.4.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 52,
    "state": "closed",
    "created_at": "2023-05-23T17:07:47Z",
    "updated_at": "2023-06-28T14:04:44Z",
    "due_on": null,
    "closed_at": "2023-05-24T14:28:02Z"
  },
  "comments": 9,
  "created_at": "2023-05-23T08:38:16Z",
  "updated_at": "2023-05-23T17:22:00Z",
  "closed_at": "2023-05-23T13:29:58Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\ninfinispan-client + micrometer combination doesn't compile in native when using Quarkus 3.0.3.Final / Quarkus main\r\n\r\n```\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] /Users/rsvoboda/.sdkman/candidates/java/22.3.1.r17-grl/bin/native-image -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dlogging.initial-configurator.min-level=500 -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Dio.quarkus.caffeine.graalvm.recordStats=true -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=3 -J-Duser.language=en -J-Duser.country=GB -J-Dfile.encoding=UTF-8 --features=io.quarkus.runner.Feature,io.quarkus.caffeine.runtime.graal.CacheConstructorsFeature,io.quarkus.runtime.graal.DisableLoggingFeature,io.quarkus.infinispan.client.runtime.graal.DisableLoggingFeature -J--add-exports=java.security.jgss/sun.security.krb5=ALL-UNNAMED -J--add-opens=java.base/java.text=ALL-UNNAMED -J--add-opens=java.base/java.io=ALL-UNNAMED -J--add-opens=java.base/java.lang.invoke=ALL-UNNAMED -J--add-opens=java.base/java.util=ALL-UNNAMED -H:+CollectImageBuildStatistics -H:ImageBuildStatisticsFile=infinispan-client-micrometer-1.0.0-SNAPSHOT-runner-timing-stats.json -H:BuildOutputJSONFile=infinispan-client-micrometer-1.0.0-SNAPSHOT-runner-build-output-stats.json -H:+AllowFoldMethods -J-Djava.awt.headless=true --no-fallback --link-at-build-time -H:+ReportExceptionStackTraces -H:-AddAllCharsets --enable-url-protocols=http,https -H:-UseServiceLoaderFeature -H:+StackTrace -H:AdditionalSecurityProviders=com.sun.security.sasl.Provider -J--add-exports=org.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED --exclude-config io\\.netty\\.netty-codec /META-INF/native-image/io\\.netty/netty-codec/generated/handlers/reflect-config\\.json --exclude-config io\\.netty\\.netty-handler /META-INF/native-image/io\\.netty/netty-handler/generated/handlers/reflect-config\\.json infinispan-client-micrometer-1.0.0-SNAPSHOT-runner -jar infinispan-client-micrometer-1.0.0-SNAPSHOT-runner.jar\r\n========================================================================================================================\r\nGraalVM Native Image: Generating 'infinispan-client-micrometer-1.0.0-SNAPSHOT-runner' (executable)...\r\n========================================================================================================================\r\nWarning: Could not register method io.quarkus.micrometer.runtime.export.PrometheusMeterRegistryProvider.configure(PrometheusRuntimeConfig) for reflection. Reason: java.lang.NoClassDefFoundError: io/micrometer/prometheus/PrometheusNamingConvention.\r\n[1/7] Initializing...                                                                                    (9.7s @ 0.31GB)\r\n Version info: 'GraalVM 22.3.1 Java 17 CE'\r\n Java version info: '17.0.6+10-jvmci-22.3-b13'\r\n C compiler: cc (apple, x86_64, 14.0.3)\r\n Garbage collector: Serial GC\r\n 4 user-specific feature(s)\r\n - io.quarkus.caffeine.runtime.graal.CacheConstructorsFeature\r\n - io.quarkus.infinispan.client.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase\r\n - io.quarkus.runner.Feature: Auto-generated class by Quarkus from the existing extensions\r\n - io.quarkus.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase\r\n[2/7] Performing analysis...  []                                                                        (10.4s @ 1.47GB)\r\n   4,380 (83.25%) of  5,261 classes reachable\r\n   5,491 (50.47%) of 10,880 fields reachable\r\n  18,061 (76.23%) of 23,692 methods reachable\r\n     181 classes,     0 fields, and     0 methods registered for reflection\r\n\r\nFatal error: com.oracle.graal.pointsto.util.AnalysisError$ParsingError: Error encountered while parsing io.quarkus.micrometer.runtime.export.handlers.PrometheusHandler.handle(io.vertx.ext.web.RoutingContext)\r\nParsing context:\r\n   at io.quarkus.micrometer.runtime.export.handlers.PrometheusHandler.handle(PrometheusHandler.java:27)\r\n   at io.quarkus.micrometer.runtime.export.handlers.PrometheusHandler.handle(PrometheusHandler.java:18)\r\n   at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1290)\r\n   at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)\r\n   at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:141)\r\n   at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)\r\n   at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)\r\n   at io.vertx.mutiny.ext.web.Router.handle(Router.java:75)\r\n   at io.vertx.mutiny.ext.web.Router.accept(Router.java:486)\r\n   at io.vertx.mutiny.ext.web.Router.accept(Router.java:27)\r\n   at java.util.Collections$2.tryAdvance(Collections.java:4853)\r\n   at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)\r\n   at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)\r\n   at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)\r\n   at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n   at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n   at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n   at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n   at java.util.stream.IntPipeline.findFirst(IntPipeline.java:552)\r\n   at java.text.DecimalFormatSymbols.findNonFormatChar(DecimalFormatSymbols.java:844)\r\n   at java.text.DecimalFormatSymbols.initialize(DecimalFormatSymbols.java:823)\r\n   at java.text.DecimalFormatSymbols.<init>(DecimalFormatSymbols.java:115)\r\n   at sun.util.locale.provider.DecimalFormatSymbolsProviderImpl.getInstance(DecimalFormatSymbolsProviderImpl.java:85)\r\n   at java.text.DecimalFormatSymbols.getInstance(DecimalFormatSymbols.java:185)\r\n   at java.util.Formatter.zero(Formatter.java:2450)\r\n   at java.util.Formatter$FormatSpecifier.getZero(Formatter.java:4450)\r\n   at java.util.Formatter$FormatSpecifier.localizedMagnitude(Formatter.java:4466)\r\n   at java.util.Formatter$FormatSpecifier.localizedMagnitude(Formatter.java:4455)\r\n   at java.util.Formatter$FormatSpecifier.print(Formatter.java:4034)\r\n   at java.util.Formatter$FormatSpecifier.print(Formatter.java:3984)\r\n   at java.util.Formatter$FormatSpecifier.printDateTime(Formatter.java:3009)\r\n   at java.util.Formatter$FormatSpecifier.print(Formatter.java:2911)\r\n   at java.util.Formatter.format(Formatter.java:2678)\r\n   at java.util.Formatter.format(Formatter.java:2625)\r\n   at java.lang.String.format(String.java:4141)\r\n   at jdk.internal.util.Preconditions.outOfBoundsMessage(Preconditions.java:188)\r\n   at jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\r\n   at jdk.internal.util.Preconditions.outOfBoundsCheckFromIndexSize(Preconditions.java:82)\r\n   at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:361)\r\n   at java.util.Objects.checkFromIndexSize(Objects.java:411)\r\n\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.util.AnalysisError.parsingError(AnalysisError.java:153)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.flow.MethodTypeFlow.createFlowsGraph(MethodTypeFlow.java:104)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureFlowsGraphCreated(MethodTypeFlow.java:83)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.flow.MethodTypeFlow.getOrCreateMethodFlowsGraph(MethodTypeFlow.java:65)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.typestate.DefaultVirtualInvokeTypeFlow.onObservedUpdate(DefaultVirtualInvokeTypeFlow.java:109)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:562)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.PointsToAnalysis$1.run(PointsToAnalysis.java:488)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.util.CompletionExecutor.executeCommand(CompletionExecutor.java:193)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.util.CompletionExecutor.lambda$executeService$0(CompletionExecutor.java:177)\r\n\tat java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1395)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.externalHelpQuiescePool(ForkJoinPool.java:2104)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.awaitQuiescence(ForkJoinPool.java:3321)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.util.CompletionExecutor.complete(CompletionExecutor.java:243)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.PointsToAnalysis.doTypeflow(PointsToAnalysis.java:541)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.PointsToAnalysis.finish(PointsToAnalysis.java:529)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.AbstractAnalysisEngine.runAnalysis(AbstractAnalysisEngine.java:143)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:745)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:578)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:535)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:403)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:580)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:128)\r\nCaused by: org.graalvm.compiler.java.BytecodeParser$BytecodeParserError: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: io.micrometer.prometheus.PrometheusMeterRegistry. This error is reported at image build time because class io.quarkus.micrometer.runtime.export.handlers.PrometheusHandler is registered for linking at image build time by command line\r\n\tat parsing io.quarkus.micrometer.runtime.export.handlers.PrometheusHandler.setup(PrometheusHandler.java:67)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.throwParserError(BytecodeParser.java:2518)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.throwParserError(SharedGraphBuilderPhase.java:110)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3393)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.handleBytecodeBlock(BytecodeParser.java:3345)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3190)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1138)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:1030)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:97)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.phases.SharedGraphBuilderPhase.run(SharedGraphBuilderPhase.java:84)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:446)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.flow.AnalysisParsedGraph.parseBytecode(AnalysisParsedGraph.java:135)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.meta.AnalysisMethod.ensureGraphParsed(AnalysisMethod.java:685)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.phases.InlineBeforeAnalysisGraphDecoder.lookupEncodedGraph(InlineBeforeAnalysis.java:180)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:1162)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:1145)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:1003)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:957)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:817)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.phases.InlineBeforeAnalysisGraphDecoder.processNextNode(InlineBeforeAnalysis.java:240)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:548)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:833)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.phases.InlineBeforeAnalysis.decodeGraph(InlineBeforeAnalysis.java:98)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:179)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:349)\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.flow.MethodTypeFlow.createFlowsGraph(MethodTypeFlow.java:93)\r\n\t... 21 more\r\nCaused by: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: io.micrometer.prometheus.PrometheusMeterRegistry. This error is reported at image build time because class io.quarkus.micrometer.runtime.export.handlers.PrometheusHandler is registered for linking at image build time by command line\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.reportUnresolvedElement(SharedGraphBuilderPhase.java:333)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.handleUnresolvedType(SharedGraphBuilderPhase.java:288)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.handleUnresolvedLoadConstant(SharedGraphBuilderPhase.java:259)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genLoadConstant(BytecodeParser.java:3945)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5124)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3385)\r\n\t... 46 more\r\n------------------------------------------------------------------------------------------------------------------------\r\n                        0.6s (2.7% of total time) in 18 GCs | Peak RSS: 1.99GB | CPU load: 5.95\r\n========================================================================================================================\r\nFailed generating 'infinispan-client-micrometer-1.0.0-SNAPSHOT-runner' after 20.3s.\r\n```\r\n\r\n`quarkus-micrometer-registry-prometheus` is needed to compile succesfully into native when using combination of infinispan-client + micrometer. But when using just infinispan-client or just micrometer no additional deps are needed.\n\n### Expected behavior\n\ninfinispan-client + micrometer combination compiles in native\n\n### Actual behavior\n\ninfinispan-client + micrometer combination doesn't compile in native\n\n### How to Reproduce?\n\n - mvn -Dquarkus-plugin.version=3.0.3.Final -Dquarkus.platform.artifact-id=quarkus-bom io.quarkus:quarkus-maven-plugin:3.0.3.Final:create -DprojectGroupId=io.quarkus.qe -DprojectArtifactId=infinispan-client-micrometer -DprojectVersion=1.0.0-SNAPSHOT -DplatformGroupId=io.quarkus -DplatformArtifactId=quarkus-bom -Dextensions=infinispan-client,micrometer -DquarkusRegistryClient=false\r\n - cd infinispan-client-micrometer\r\n - mvn clean package -Dnative\r\n\n\n### Output of `uname -a` or `ver`\n\nmacOS\n\n### Output of `java -version`\n\nJava 17\n\n### GraalVM version (if different from Java)\n\n22.3\n\n### Quarkus version or git rev\n\n3.0.3.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33547/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33547/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
