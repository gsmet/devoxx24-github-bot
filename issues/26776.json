{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26776",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26776/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26776/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26776/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26776",
  "id": 1307534535,
  "node_id": "I_kwDOCFbutM5N72TH",
  "number": 26776,
  "title": "OpenTelemetry: High span name cardinality for invalid HTTP request spans",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2236031412,
      "node_id": "MDU6TGFiZWwyMjM2MDMxNDEy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/tracing",
      "name": "area/tracing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/204",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/204",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/204/labels",
    "id": 8384152,
    "node_id": "MI_kwDOCFbutM4Af-6Y",
    "number": 204,
    "title": "2.12.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 77,
    "state": "closed",
    "created_at": "2022-09-05T19:04:15Z",
    "updated_at": "2022-09-13T05:31:24Z",
    "due_on": null,
    "closed_at": "2022-09-07T11:32:02Z"
  },
  "comments": 3,
  "created_at": "2022-07-18T07:42:13Z",
  "updated_at": "2022-09-12T13:49:23Z",
  "closed_at": "2022-08-23T15:22:34Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nThis is about the remaining issue from #26216:\r\nWhen using the `quarkus-opentelemetry` extension and observing Vert.x HTTP server request spans, the span names for **invalid HTTP requests** (resulting in status 400 or also 501 responses) contain the full request URI path. The [OTEL spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md#name) declares such high cardinality span names as unsuitable. \r\n\r\nIn practice, this means the span selection combobox in the Jaeger UI gets fill with all kinds of weird URI paths of bot requests trying to exploit some vulnerability.\r\n```\r\n/someWeirdPathTryingToExploitSomeVulnerability?someParamX\r\n```\r\n\r\n_Some_ of these span names still can get renamed by using a \"match-all\" Vert.x route with a failure handler (invoking `ctx.request().routed(name)` there), \r\n\r\nBut there are kinds of invalid HTTP requests, for which no route failure handler will get invoked. This happens for example with HTTP requests with an invalid `Content-Length` header value.\n\n### Expected behavior\n\nI would expect some fixed span name (e.g. the HTTP request method name) to be used as span name for such invalid HTTP requests - **if** no request route name got set/applied (i.e. no named route got matched and `ctx.request().routed(name)` wasn't invoked).\r\n\n\n### Actual behavior\n\nHigh cardinality span names are used.\n\n### How to Reproduce?\n\nMake invalid HTTP requests to a quarkus-opentelemetry application having a Vert.x HTTP server endpoint and observe created span names.\r\nExamples:\r\n`printf 'GET invalid__no_leading_slash HTTP/1.0\\r\\n\\r\\n' | nc -q 3 localhost 80`\r\n`printf 'GET /something%%%%3 HTTP/1.0\\r\\n\\r\\n' | nc -q 3 localhost 80`\r\n\r\n`printf 'GET /something HTTP/1.1\\r\\nContent-Length: 18446744073709551615\\r\\n\\r\\n' | nc -q 3 localhost 80`\r\n=> no Vert.x route getting invoked\r\n\r\n`printf 'GET /something HTTP/5.0\\r\\n\\r\\n' | nc -q 3 localhost 80`\r\n=> this actually returns status 501; no Vert.x route getting invoked\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\nopenjdk 17.0.3 2022-04-19\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.10.2\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26776/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26776/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
