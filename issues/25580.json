{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25580",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25580/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25580/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25580/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25580",
  "id": 1236096064,
  "node_id": "I_kwDOCFbutM5JrVRA",
  "number": 25580,
  "title": "Commas in Headers with AWS Lambda",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1326073020,
      "node_id": "MDU6TGFiZWwxMzI2MDczMDIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/amazon-lambda",
      "name": "area/amazon-lambda",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/183",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/183",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/183/labels",
    "id": 7917759,
    "node_id": "MI_kwDOCFbutM4AeNC_",
    "number": 183,
    "title": "2.10.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 253,
    "state": "closed",
    "created_at": "2022-04-27T08:14:38Z",
    "updated_at": "2023-01-13T10:46:24Z",
    "due_on": null,
    "closed_at": "2022-06-09T16:06:42Z"
  },
  "comments": 7,
  "created_at": "2022-05-14T18:45:28Z",
  "updated_at": "2022-05-18T19:29:10Z",
  "closed_at": "2022-05-18T19:29:06Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen you are dealing with headers that can have commas in their value, such as Access-Control-Request-Headers, the Lambda Handler seems to interpret them as different header values which causes CORS to not work correctly.\n\n### Expected behavior\n\nWhen executing the curl\r\n```\r\ncurl http://localhost:8080/hello -X OPTIONS -H 'Origin: http://example.com' -H 'Access-Control-Request-Headers: bar,foo' -v\r\n```\r\nthe following header is returned\r\n```\r\naccess-control-allow-headers: bar,foo\r\n```\n\n### Actual behavior\n\nThe following header is returned\r\n```\r\naccess-control-allow-headers: bar\r\n```\n\n### How to Reproduce?\n\n1. Generate a new quarkus project with \"AWS Lambda HTTP\" and \"RestEasy Classic Jackson\" extension\r\n2. Add the following lines to the application.properties:\r\n```\r\nquarkus.http.cors=true\r\nquarkus.http.cors.origins=http://example.com\r\n```\r\n3. Run ./mvnw quarkus:dev\r\n4. Execute the curls given above\r\n5. Uncomment the \"quarkus-amazon-lambda-http\" in the `pom.xml` to see the expected behaviour\n\n### Output of `uname -a` or `ver`\n\nLinux [REMOVED] 5.13.0-40-generic #45~20.04.1-Ubuntu SMP Mon Apr 4 09:38:31 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"14.0.2\" 2020-07-14\n\n### GraalVM version (if different from Java)\n\nN/A, the issue can be reproduced without GraalVM\n\n### Quarkus version or git rev\n\n2.9.0.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.4\n\n### Additional information\n\nEvent though the reproduction steps do not include deployment to Lambda, I have observed the same behavior with a different project also when it was deployed to AWS Lambda\r\n\r\nIn the `io.quarkus.vertx.http.runtime.cors.CORSFilter` class, only the first header value is retrieved in this line:\r\n```\r\nfinal String requestedHeaders = request.getHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS);\r\n```\r\n\r\nBut in the `io.quarkus.amazon.lambda.http.LambdaHttpHandler`, the string parts separated by comma are stored as different header values:\r\n```\r\nfor (String val : header.getValue().split(\",\"))\r\n  nettyRequest.headers().add(header.getKey(), val);\r\n```\r\nThis is probably necessary because the API Gateway will send multiple header values separated with comma and there is no way to reconstruct the original request from the API Gateway's event. Maybe it would be an acceptable solution to have the CORSFilter expect multiple header values",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25580/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25580/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
