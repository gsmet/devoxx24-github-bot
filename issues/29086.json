{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29086",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29086/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29086/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29086/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29086",
  "id": 1437889773,
  "node_id": "I_kwDOCFbutM5VtHTt",
  "number": 29086,
  "title": "Allows pre-load data in Redis",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2184343143,
      "node_id": "MDU6TGFiZWwyMTg0MzQzMTQz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/redis",
      "name": "area/redis",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/219",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/219",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/219/labels",
    "id": 8705199,
    "node_id": "MI_kwDOCFbutM4AhNSv",
    "number": 219,
    "title": "2.16.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 198,
    "state": "closed",
    "created_at": "2022-11-30T08:29:23Z",
    "updated_at": "2023-03-07T08:22:30Z",
    "due_on": null,
    "closed_at": "2023-01-11T15:14:00Z"
  },
  "comments": 1,
  "created_at": "2022-11-07T07:25:15Z",
  "updated_at": "2022-12-10T16:15:50Z",
  "closed_at": "2022-12-10T16:15:46Z",
  "active_lock_reason": null,
  "body": "### Description\n\nThis feature is equivalent to the Hibernate ORM one but for Redis. It would allow the user to configure the Redis extension to pre-load data in the _associated_ Redis client. \r\n\r\nThe format should be compatible with: https://github.com/redis-developer/demo-movie-app-redisearch-java/tree/master/redisearch-docker/dataset.\r\n\r\nThe file extension should be `.redis` (default to `import.redis`). \n\n### Implementation ideas\n\n1. add a config item in the `RedisClientConfig` (`Optional<List<File>>`)\r\n2. in the processor, process the configuration and build a set of `client-name, List<File>` \r\n3. make sure the file in included in native if needed \r\n4. handle the default (redis.import) and detect if the file is present or not\r\n5. handle `no-file`\r\n6. handle application profile like in hibernate (no import by default in prod)\r\n7. the preload process should be in a recorder. Because importing, a `flushall` must be executed (should this be configurable?)\r\n8. the data is preloaded by executing each line as an instruction. Order of the files (if multiple) must be enforced. \r\n9. The client can be queried using `CDI` `select`. ",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29086/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29086/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
