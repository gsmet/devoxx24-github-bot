{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34967",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34967/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34967/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34967/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34967",
  "id": 1818902233,
  "node_id": "I_kwDOCFbutM5saj7Z",
  "number": 34967,
  "title": "JAX RS kind of overlapping paths not reachable",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346621,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjE=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/duplicate",
      "name": "triage/duplicate",
      "color": "cfd3d7",
      "default": false,
      "description": "This issue or pull request already exists"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2023-07-24T18:14:44Z",
  "updated_at": "2023-07-25T06:41:49Z",
  "closed_at": "2023-07-25T06:41:42Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nNot sure if this is a according to the spec or a bug.\r\n\r\nIf `@Path` on a class (TestSubApi) overlaps the combination of `@Path` on class and `@Path` on a method of another class (TestApi), the method of the second class (TestApi) isn't reachable.\r\n\r\nPaths: on class + on method\r\n* TestApi: /test + /{name} -> not reachable (404)\r\n* TestSubApi: /test/{name}/ + config -> works\r\n\n\n### Expected behavior\n\nAs the path don't overlap all methods/paths should be reachable.\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\nRun this service:\r\n```\r\nimport jakarta.enterprise.context.ApplicationScoped;\r\nimport jakarta.ws.rs.GET;\r\nimport jakarta.ws.rs.Path;\r\nimport jakarta.ws.rs.core.Response;\r\n\r\n@ApplicationScoped\r\n@Path(\"/test\")\r\npublic class TestApi {\r\n    @Path(\"/{name}\")\r\n    @GET\r\n    public Response getName(String name) {\r\n        return Response.ok().entity(name).build();\r\n    }\r\n}\r\n\r\n@ApplicationScoped\r\n@Path(\"/test/{name}\")\r\nclass TestSubApi {\r\n    @Path(\"/config\")\r\n    @GET\r\n    public Response getConfig(String name) {\r\n        return Response.ok().entity(\"Config of \" + name).build();\r\n    }\r\n}\r\n```\r\n`/test/{name}` can't be called and returns a 404. `/test/{name}/config` works\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n3.2.0.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\nIf all the code is in one class with a common `@Path` everything works.\r\nIf both classes use `@Path(\"/\")` and the full path on the methods it works as well.\r\n\r\nAs the code in my project that is broken is generated, it's a bit laborious to change the paths.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34967/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34967/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
