{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24736",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24736/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24736/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24736/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24736",
  "id": 1191726173,
  "node_id": "I_kwDOCFbutM5HCExd",
  "number": 24736,
  "title": "Annotated providers aren't registered if there is no @Consumes(\"*/*\") or @Provider(\"*/*\")",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346627,
      "node_id": "MDU6TGFiZWw5ODUzNDY2Mjc=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/wontfix",
      "name": "triage/wontfix",
      "color": "ffffff",
      "default": false,
      "description": "This will not be worked on"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2022-04-04T12:39:59Z",
  "updated_at": "2022-04-05T08:59:12Z",
  "closed_at": "2022-04-05T08:59:04Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nHi,\r\n\r\nI've encountered a weird behavior (bug) concerning classes that are annoted with `@Provider`. The problem that I have is, that I want to provide my own `MessageBodyWriter` to serialize Java classes that are returned by the endpoint. However, instead of using my custom body writer some generic writer that accesses fields via reflection is used.\r\n\r\n\r\n### Example:\r\nBased on `rest-client-quickstart` with added objects and adjusted methods:\r\n\r\n*  `CustomMessageBodyWriter`: annotated with `@Provider` and `@Produces(MediaType.APPLICATION_JSON)` implementing  ` MessageBodyWriter`\r\n* `CountrySerializer`: used by the `ObjectMapper` defined in `CustomMessageBodyWriter` to serialize the entity `Country`\r\n* `CountriesResource` rest endpoint to retrieve a country (annotated with `@Produces(MediaType.APPLICATION_JSON)`)\r\n* `CountryResourceTest` small test to check if the custom serializer is being used\r\n\r\n`CustomMessageBodyWriter` is not used until some random method (not the one being called) or class is annotated with either `@Produces(MediaType.WILDCARD)` or `@Consumes(MediaType.WILDCARD)` (see `CountriesResource#noContent`). If the annotation is present the test runs through, if it is removed or replaced with another media type the test fails.\r\n\r\n[provider-bug.tar.gz](https://github.com/quarkusio/quarkus/files/8409726/provider-bug.tar.gz)\r\n\n\n### Expected behavior\n\nCustom serializer is used.\n\n### Actual behavior\n\nGeneric serializer is used.\n\n### How to Reproduce?\n\nImport project and run the test\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\nopenjdk version \"11.0.14.1\" 2022-02-08\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.7.3.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24736/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24736/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
