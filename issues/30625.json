{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30625",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30625/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30625/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30625/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30625",
  "id": 1557744126,
  "node_id": "I_kwDOCFbutM5c2Un-",
  "number": 30625,
  "title": "OIDC authentication loop if Cookie Policy sameSite=strict",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/231",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/231",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/231/labels",
    "id": 8975088,
    "node_id": "MI_kwDOCFbutM4AiPLw",
    "number": 231,
    "title": "2.16.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 74,
    "state": "closed",
    "created_at": "2023-01-27T17:04:23Z",
    "updated_at": "2023-05-15T13:59:09Z",
    "due_on": null,
    "closed_at": "2023-02-01T13:07:35Z"
  },
  "comments": 12,
  "created_at": "2023-01-26T07:54:25Z",
  "updated_at": "2023-02-01T12:57:37Z",
  "closed_at": "2023-01-30T19:39:01Z",
  "active_lock_reason": null,
  "body": "### Description\n\nUsing the OIDC authentication code workflow may lead to a loop of authentication requests, if not properly configured and currently there is no hint to that in the Documentation.\r\n\r\nIf the user visits the app for the first time, the current default setting of `quarkus.oidc.authentication.cookie-same-site=strict` leads to the following chain:\r\n1. user is not authenticated, goes to https://example.org/login, response is\r\n  ```\r\n  302 Found\r\n  location: https://provider.org/oauth/authorize?response_type=code&client_id=XXXX&state=YYYY&...\r\nset-cookie: q_auth=YYYY|/login?code=XYZ&state=YYYY; Max-Age=1800; Path=/; HTTPOnly; SameSite=Strict\r\n  ```\r\n2. User is redirected to provider.org and has to grant the new App permissions for authentication\r\n3. Provider redirects the user to example.org with code & state  (Not 302 calls, as user action required!)\r\n4. Because of the sameSite=Strict policy, the q_auth cookie is not send to example.org. So it retriggers an authentication with similar request as in 1\r\n5. User is redirected to provider.org\r\n6. provider.org sends 302 redirect to example.org with code & state, as already logged in\r\n7. 302s were originally started from example.org, so cookie is sent and user is successfully authenticated (could not test that, just my understanding)\r\n\r\nSo after an additional roundtrip, the user is authenticated and everything is ok (if it works as I understand it).\r\n\r\nHowever, if provider.org does not send a 302 for the redirection but an html page with a javascript redirect (e.g. gitlab, the only provider I currently test with) this leads to a loop, since the request is originated always from provider.org and with sameSite=strict the cookie will never be send.\r\n\r\nIt's not a bug as it can be configured and many providers probably do the redirect with a 302, but I think it is worth noting in the documentation.\r\n\r\nThe following setting solved the issue for me:\r\n```\r\nquarkus.oidc.authentication.cookie-same-site=lax\r\n```\r\n\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30625/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30625/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
