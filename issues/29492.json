{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29492",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29492/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29492/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29492/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29492",
  "id": 1464559568,
  "node_id": "I_kwDOCFbutM5XS2fQ",
  "number": 29492,
  "title": "Connection Errors are not catched by @Retry annotations",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 10,
  "created_at": "2022-11-25T13:34:56Z",
  "updated_at": "2023-01-10T22:27:28Z",
  "closed_at": "2023-01-10T22:27:28Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI have integrated smallrye fault tolerance as described in the tutorials.\r\n\r\nI have a resilience anotated client like this:\r\n```kotlin\r\n@RegisterRestClient(configKey = \"resilience-tester\")\r\ninterface TestResilienceHttpClient {\r\n\r\n  @GET\r\n  @Retry(maxRetries = 10, delay = 1600)\r\n  @Timeout(value = 5000)\r\n  @Path(\"/test/fail\")\r\n  fun testFail(): Int\r\n}\r\n```\r\n\r\nand an http controller like this:\r\n```kotlin\r\n@Path(\"/test\")\r\nclass TestResilienceResource(\r\n  @RestClient private val client: TestResilienceHttpClient,\r\n){\r\n  @GET\r\n  @Path(\"/fail\")\r\n  fun failIntermittently(): Int {\r\n    if (Random().nextBoolean() || Random().nextBoolean()) {\r\n      log.error(\"Intentional Fail\");\r\n      throw RuntimeException(\"Intentional Resource Failure.\");\r\n    }\r\n    return Random().nextInt(99)\r\n  }\r\n\r\n  @GET\r\n  @Path(\"/fail/trigger\")\r\n  fun trigger(): Int {\r\n    return client.testFail()\r\n  }\r\n}\r\n```\r\n\r\nCalling `curl http://localhost:8080/test/fail/trigger` works fine if an HTTP client can connect to the server, eg with this application.properties:\r\n```\r\nquarkus.rest-client.resilience-tester.url=http://localhost:8080\r\n```\r\n\r\nbut if it can not, the resilience annotations are just ignored and you get a stack trace after 30 seconds:\r\n```\r\nquarkus.rest-client.resilience-tester.url=http://localhost:8081\r\n```\r\n\r\n\r\n```\r\n2022-11-25 13:16:40,472 DEBUG [io.sma.fau.cor.eve.loop] (executor-thread-0) Found event loop integration class io.smallrye.faulttolerance.vertx.VertxEventLoop\r\n     2022-11-25 13:16:56,499 SEVERE [com.sco.sco.htt.exc.ApplicationExceptionMapper] (executor-thread-0) Internal server error: : javax.ws.rs.ProcessingException: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:8081\r\n        at org.jboss.resteasy.reactive.client.handlers.ClientSendRequestHandler$3.accept(ClientSendRequestHandler.java:214)\r\n        at org.jboss.resteasy.reactive.client.handlers.ClientSendRequestHandler$3.accept(ClientSendRequestHandler.java:206)\r\n        at io.smallrye.context.impl.wrappers.SlowContextualConsumer.accept(SlowContextualConsumer.java:21)\r\n        at io.smallrye.mutiny.helpers.UniCallbackSubscriber.onFailure(UniCallbackSubscriber.java:65)\r\n        at io.smallrye.mutiny.operators.uni.UniOperatorProcessor.onFailure(UniOperatorProcessor.java:54)\r\n        at io.smallrye.mutiny.operators.uni.UniOperatorProcessor.onFailure(UniOperatorProcessor.java:54)\r\n        at org.jboss.resteasy.reactive.client.AsyncResultUni.lambda$subscribe$1(AsyncResultUni.java:36)\r\n        at io.vertx.core.impl.future.FutureImpl$3.onFailure(FutureImpl.java:153)\r\n        at io.vertx.core.impl.future.FutureBase.lambda$emitFailure$1(FutureBase.java:69)\r\n        at io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:81)\r\n        at io.vertx.core.impl.DuplicatedContext.execute(DuplicatedContext.java:173)\r\n        at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:66)\r\n        at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)\r\n        at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)\r\n        at io.vertx.core.http.impl.HttpClientImpl.lambda$doRequest$8(HttpClientImpl.java:659)\r\n        at io.vertx.core.net.impl.pool.Endpoint.lambda$getConnection$0(Endpoint.java:52)\r\n        at io.vertx.core.http.impl.SharedClientHttpStreamEndpoint$Request.handle(SharedClientHttpStreamEndpoint.java:162)\r\n        at io.vertx.core.http.impl.SharedClientHttpStreamEndpoint$Request.handle(SharedClientHttpStreamEndpoint.java:123)\r\n        at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:50)\r\n        at io.vertx.core.impl.ContextImpl.emit(ContextImpl.java:274)\r\n        at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:22)\r\n        at io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectFailed$1.run(SimpleConnectionPool.java:382)\r\n        at io.vertx.core.net.impl.pool.CombinerExecutor.submit(CombinerExecutor.java:50)\r\n        at io.vertx.core.net.impl.pool.SimpleConnectionPool.execute(SimpleConnectionPool.java:245)\r\n        at io.vertx.core.net.impl.pool.SimpleConnectionPool.lambda$connect$2(SimpleConnectionPool.java:259)\r\n        at io.vertx.core.http.impl.SharedClientHttpStreamEndpoint.lambda$connect$2(SharedClientHttpStreamEndpoint.java:104)\r\n        at io.vertx.core.impl.future.FutureImpl$3.onFailure(FutureImpl.java:153)\r\n        at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)\r\n        at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)\r\n        at io.vertx.core.impl.future.Composition$1.onFailure(Composition.java:66)\r\n        at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)\r\n        at io.vertx.core.impl.future.FailedFuture.addListener(FailedFuture.java:98)\r\n        at io.vertx.core.impl.future.Composition.onFailure(Composition.java:55)\r\n        at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)\r\n        at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)\r\n        at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)\r\n        at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:50)\r\n        at io.vertx.core.impl.ContextImpl.emit(ContextImpl.java:274)\r\n        at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:22)\r\n        at io.vertx.core.net.impl.NetClientImpl.failed(NetClientImpl.java:294)\r\n        at io.vertx.core.net.impl.NetClientImpl.lambda$connectInternal$4(NetClientImpl.java:262)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)\r\n        at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)\r\n        at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)\r\n        at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:109)\r\n        at io.vertx.core.net.impl.ChannelProvider.lambda$handleConnect$0(ChannelProvider.java:159)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)\r\n        at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)\r\n        at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)\r\n        at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)\r\n        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)\r\n        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\nCaused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:8081\r\nCaused by: java.net.ConnectException: Connection refused\r\n        at java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n        at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n        at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)\r\n        at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)\r\n        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\n\r\n2022-11-25 13:16:56,568 INFO  [io.qua.htt.access-log] (executor-thread-0) 172.24.0.1 - - 25/Nov/2022:13:16:56 +0000 \"GET /test/fail/trigger HTTP/1.1\" 500 108\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe retries and backoffs happen even when the client cannot connect.\r\n\r\n### Actual behavior\r\n\r\nNo retires happen.\r\n\r\n### How to Reproduce?\r\n\r\nThis should be reproducible by creating the above mentioned files in a test project and calling with curl.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nLinux 7d9dde80e62b 6.0.9-arch1-1 #1 SMP PREEMPT_DYNAMIC Wed, 16 Nov 2022 17:01:17 +0000 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"17.0.5\" 2022-10-18\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.8.2.FINAL\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nGradle 7.5.1\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29492/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29492/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
