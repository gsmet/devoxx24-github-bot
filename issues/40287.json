{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40287",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40287/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40287/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40287/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/40287",
  "id": 2263917583,
  "node_id": "I_kwDOCFbutM6G8KQP",
  "number": 40287,
  "title": "Using a custom ParamConverter fails when not sending that parameter with the request",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/334",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/334",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/334/labels",
    "id": 11163455,
    "node_id": "MI_kwDOCFbutM4Aqlc_",
    "number": 334,
    "title": "3.8.6",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 117,
    "state": "closed",
    "created_at": "2024-06-10T07:54:20Z",
    "updated_at": "2024-08-28T09:33:53Z",
    "due_on": null,
    "closed_at": "2024-08-28T09:33:53Z"
  },
  "comments": 4,
  "created_at": "2024-04-25T15:35:57Z",
  "updated_at": "2024-08-14T13:01:51Z",
  "closed_at": "2024-08-09T15:16:07Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen using a custom ParamConverter, the call fails when we do not sending  any value for that parameter in the request.\n\n### Expected behavior\n\nThe request would be executed\n\n### Actual behavior\n\nA 404 error happens due to a NPE.\n\n### How to Reproduce?\n\nTake this example code:\r\n\r\n```\r\n@GET\r\n    @Path(\"/greet\")\r\n    public Response greet(@QueryParam(\"number\") @Parameter(allowEmptyValue = true) Optional<Integer> numberOpt) {\r\n        if (numberOpt.isPresent()) {\r\n            Integer number= numberOpt.get();\r\n            if (number == null) {\r\n                return Response.ok(\"Hello! You provided an empty number.\").build();\r\n            } else {\r\n                return Response.ok(\"Hello, \" + number+ \"!\").build();\r\n            }\r\n        } else {\r\n            return Response.ok(\"Hello, world! No number was provided.\").build();\r\n        }\r\n    }\r\n```\r\n    \r\nThis is the converter:\r\n\r\n```\r\npublic class OptionalIntegerParamConverter implements ParamConverter<Optional<Integer>> {\r\n\r\n\t@Override\r\n    public Optional<Integer> fromString(String value) {\r\n\t\tif (value == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n        if (value.trim().isEmpty()) {\r\n        \treturn Optional.empty();\r\n        }\r\n        \r\n        try {\r\n        \tint parsedInt = Integer.parseInt(value);\r\n        \treturn Optional.of(parsedInt);\r\n        } catch (NumberFormatException e) {\r\n            throw new IllegalArgumentException(\"Invalid integer value\");\r\n        }\r\n    }\r\n    @Override\r\n    public String toString(Optional<Integer> value) {\r\n    \tif (!value.isPresent()) {\r\n    \t\treturn null;\r\n    \t}\r\n    \t\r\n    \tInteger intValue = value.get();\r\n        if (intValue == null) {\r\n            return null;\r\n        } else {\r\n            return intValue.toString();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n}\r\n```\r\nAnd this is its provider:\r\n```\r\n@Provider\r\npublic class OptionalIntegerParamConverterProvider implements ParamConverterProvider {\r\n    @SuppressWarnings(\"unchecked\")\r\n\t@Override\r\n    public <T> ParamConverter<T> getConverter(Class<T> rawType, Type genericType, Annotation[] annotations) {\r\n    \tif (rawType.equals(Optional.class)) {\r\n            if (genericType instanceof ParameterizedType) {\r\n                ParameterizedType parameterizedType = (ParameterizedType) genericType;\r\n                Type[] typeArguments = parameterizedType.getActualTypeArguments();\r\n                if (typeArguments.length == 1 && typeArguments[0].equals(Integer.class)) {\r\n                    return (ParamConverter<T>) new OptionalIntegerParamConverter();\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null; // return null if no converter is needed for the type\r\n    }\r\n}\r\n```\r\n\r\nIf that is setup, then trying to call the service without providing any value to the number parameter will fail within `RuntimeResolvedConverter` \r\n\r\n```\r\npublic Object convert(Object parameter) {\r\n        if (runtimeConverter != null)\r\n            return runtimeConverter.fromString(parameter.toString());\r\n        return quarkusConverter.convert(parameter);\r\n    }\r\n```\r\nit fails because parameter is null.\r\n\r\nIf I provide no conversion, then it fails only when checking the `Send empty value`, since \"\" cannot be converted to an Optional<Integer>\r\n\r\nThus, a simple change in `RuntimeResolvedConverter` would fix this:\r\n```\r\npublic Object convert(Object parameter) {\r\n        if (runtimeConverter != null)\r\n            return runtimeConverter.fromString(parameter != null ? parameter.toString() : null);\r\n        return quarkusConverter.convert(parameter);\r\n    }\r\n```\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40287/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40287/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
