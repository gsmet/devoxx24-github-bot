{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30462",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30462/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30462/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30462/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30462",
  "id": 1548671694,
  "node_id": "I_kwDOCFbutM5cTtrO",
  "number": 30462,
  "title": "Bug/OpenTelemetry extension - unexpected exceptions are not recorded on the span",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2236031412,
      "node_id": "MDU6TGFiZWwyMjM2MDMxNDEy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/tracing",
      "name": "area/tracing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/261",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/261",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/261/labels",
    "id": 9620417,
    "node_id": "MI_kwDOCFbutM4AksvB",
    "number": 261,
    "title": "3.2.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 137,
    "state": "closed",
    "created_at": "2023-07-05T15:27:44Z",
    "updated_at": "2023-08-07T13:21:27Z",
    "due_on": null,
    "closed_at": "2023-07-19T13:26:50Z"
  },
  "comments": 29,
  "created_at": "2023-01-19T07:57:44Z",
  "updated_at": "2023-07-06T07:11:13Z",
  "closed_at": "2023-07-05T11:45:49Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nMy sample application throws an unexpected exception, and I would expect that the current span would contain an event of `exception` and that attributes of 'exception.message` and/or `exception.stacktrace` would be filled.\r\nsee [OTEL Semantic conventions of Exceptions](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/exceptions.md#attributes)\r\n\r\n### Expected behavior\r\n\r\nwhenever there's an unexpected exception, the OTEL extension should catch it log event of `exception` and fill span attributes `exception.message` and/or `exception.stacktrace`\r\n\r\n### Actual behavior\r\n\r\nthe span does not contain event of `exception` and attributes `exception.message` and/or `exception.stacktrace` are not being filled\r\n\r\n### How to Reproduce?\r\n\r\nI used [Quick start of Vertx](https://github.com/quarkusio/quarkus-quickstarts/tree/main/vertx-quickstart) and added to it the following class file\r\n\r\n```java\r\npackage org.acme;\r\n\r\nimport io.opentelemetry.api.trace.Span;\r\nimport io.opentelemetry.api.trace.StatusCode;\r\nimport io.smallrye.mutiny.Uni;\r\nimport io.vertx.mutiny.core.Vertx;\r\n\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\nimport java.io.IOException;\r\n\r\n@Path(\"/err\")\r\npublic class ErrResource {\r\n\r\n    private final Vertx vertx;\r\n\r\n    ErrResource(Vertx vertx) { // <2>\r\n        this.vertx = vertx;\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/genException01\")\r\n    public Uni<String> genExc01() {\r\n        throw new RuntimeException(\"exception 01\");\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/genFailure01\")\r\n    public Uni<String> genFail01() {\r\n        return Uni.createFrom().failure(new IOException(\"fail01\"));\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/genRecordException\")\r\n    public Uni<String> genInternalRecordException() {\r\n        Span currSpan = Span.current();\r\n        currSpan.recordException(new RuntimeException(\"Got recorded?\"));\r\n        currSpan.setStatus(StatusCode.ERROR);\r\n        return Uni.createFrom().item(\"exception should been recorded\");\r\n    }\r\n\r\n}\r\n```\r\n\r\n\r\n* Repro 1 - accessing /err/genFailure01\r\n\r\nsee details at https://github.com/quarkusio/quarkus/issues/30462#issuecomment-1396577651\r\n\r\n* Repro 2 - accessing /err/genException01\r\n\r\nsee details at https://github.com/quarkusio/quarkus/issues/30462#issuecomment-1396581548\r\n\r\n* Manual recording of exception - accessing /err/genRecordException\r\n\r\nsee details at https://github.com/quarkusio/quarkus/issues/30462#issuecomment-1396588707\r\n\r\nit works as excepted but it means that every user has to do it manually - not ideal.\r\n**I think that should be the case when unexpected exception is catched within the framework.**\r\n\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nwindows 11\r\n\r\n### Output of `java -version`\r\n\r\njava 17.0.5 2022-10-18 LTS\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.15.3.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.6\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30462/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30462/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
