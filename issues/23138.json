{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23138",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23138/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23138/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23138/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23138",
  "id": 1112622496,
  "node_id": "I_kwDOCFbutM5CUUWg",
  "number": 23138,
  "title": "Ability to access all roles of multiple keycloak clients in a OpenID token",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3289887215,
      "node_id": "MDU6TGFiZWwzMjg5ODg3MjE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/keycloak",
      "name": "area/keycloak",
      "color": "0366d6",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2022-01-24T13:05:14Z",
  "updated_at": "2022-01-25T14:09:56Z",
  "closed_at": "2022-01-25T14:09:55Z",
  "active_lock_reason": null,
  "body": "### Description\n\nThis might be a niche use-case, but I need to check if a user has a specific role from another client.\r\nAs an example, suppose I have a keycloak OpenID token with two roles from two clients:\r\n```json\r\n{\r\n  \"name\": \"John Doe\",\r\n  ...\r\n  \"resource_access\": {\r\n     \"client1\": {\r\n        \"roles\": [\r\n           \"role1\"\r\n        ]\r\n     },\r\n     \"client2\": {\r\n        \"roles\": [\r\n           \"role2\"\r\n        ]\r\n     }\r\n  }\r\n}\r\n```\r\nMy oidc config in my `application.properties` looks something like this:\r\n```properties\r\nquarkus.oidc.auth-server-url=://localhost:8180/auth/realms/quarkus\r\nquarkus.oidc.client-id=client1\r\n# the role-claim-path is implicitly resource_access/ + clientId + /roles\r\n# quarkus.oidc.roles.role-claim-path=resource_access/client1/roles\r\n```\r\nIn my application code I need to check if the user/token has both `role1` and `role2`. Currently this does not work, as the `quarkus.oidc.roles.role-claim-path` can only select a single claim, and keycloak tokens have different claims for multiple clients.\r\n\n\n### Implementation ideas\n\n### Idea 1\r\n\r\nThe config property `quarkus.oidc.roles.role-claim-path` could be refactored to accept a list of claim paths, e.g.:\r\n```properties\r\nquarkus.oidc.roles.role-claim-path=resource_access/client1/roles,resource_access/client2/roles\r\n```\r\n\r\n### Idea 2\r\nAnother idea would be to allow wildcards in the  `quarkus.oidc.roles.role-claim-path` property:\r\n```properties\r\nquarkus.oidc.roles.role-claim-path=resource_access/*/roles\r\n```\r\n\r\n---\r\n\r\nThe second idea might be more usefull, when a token has a lot of different clients and you don't want to list every client in your configuration. Also, the wildcard approach would be more similar to other keycloak oidc implementations, like the keycloak-wildfyl-adapter, where (as far as I can remember) you can access all roles from a token.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23138/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23138/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
