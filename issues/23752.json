{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23752",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23752/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23752/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23752/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23752",
  "id": 1139808246,
  "node_id": "I_kwDOCFbutM5D8Bf2",
  "number": 23752,
  "title": "maven: Support different/multiple class-directories for tests",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282136257,
      "node_id": "MDU6TGFiZWwxMjgyMTM2MjU3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/maven",
      "name": "area/maven",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1520022286,
      "node_id": "MDU6TGFiZWwxNTIwMDIyMjg2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/bootstrap",
      "name": "area/bootstrap",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/182",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/182",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/182/labels",
    "id": 7891214,
    "node_id": "MI_kwDOCFbutM4AeGkO",
    "number": 182,
    "title": "2.8.2.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 37,
    "state": "closed",
    "created_at": "2022-04-19T12:35:34Z",
    "updated_at": "2022-05-24T21:01:39Z",
    "due_on": null,
    "closed_at": "2022-04-26T12:43:51Z"
  },
  "comments": 1,
  "created_at": "2022-02-16T10:12:01Z",
  "updated_at": "2022-04-25T20:22:28Z",
  "closed_at": "2022-04-25T17:10:31Z",
  "active_lock_reason": null,
  "body": "### Description\n\nSuppose we have a maven project with the following folder structure:\r\n\r\n```\r\n ├──src\r\n │   ├── blackboxtest\r\n │   ├── integrationtest\r\n │   ├── main\r\n │   └── test\r\n └──target\r\n     ├── blackboxtest-classes\r\n     ├── classes\r\n     ├── generated-blackboxtest-sources\r\n     ├── generated-integrationtest-sources\r\n     ├── generated-sources\r\n     ├── generated-test-sources\r\n     ├── integrationtest-classess\r\n     └── test-classes\r\n```\r\n\r\nWe want to have the following capabilities:\r\n- execute classes in `test-classes` as unit tests (through `surefire`, already works as expected)\r\n- execute classes in `integrationtest-classes` (through `failsafe`)\r\n- execute classes in `blackboxtest-classes` (through `failsafe`).\r\n\r\nThe executions of `failsafe` are set up as follows in the `pom.xml`:\r\n\r\n```\r\n      ...\r\n      <plugin>\r\n        <artifactId>maven-failsafe-plugin</artifactId>\r\n        <version>${surefire-plugin.version}</version>\r\n        <executions>\r\n          <execution>\r\n            <phase>none</phase>\r\n          </execution>\r\n          <execution>\r\n            <id>integration-test</id>\r\n            <goals>\r\n              <goal>integration-test</goal>\r\n              <goal>verify</goal>\r\n            </goals>\r\n            <phase>${failsafe.it-phase}</phase>\r\n            <configuration>\r\n              <additionalClasspathElements>\r\n                <additionalClasspathElement>\r\n                  ${project.build.testOutputDirectory}\r\n                </additionalClasspathElement>\r\n              </additionalClasspathElements>\r\n              <includes>\r\n                <include>**/*.java</include>\r\n              </includes>\r\n              <trimStackTrace>false</trimStackTrace>\r\n              <systemPropertyVariables>\r\n                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\r\n                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\r\n                <maven.home>${maven.home}</maven.home>\r\n              </systemPropertyVariables>\r\n              <classesDirectory>${project.build.outputDirectory}</classesDirectory>\r\n              <testClassesDirectory>${project.build.directory}/target/integrationtest-classes</testClassesDirectory>\r\n            </configuration>\r\n          </execution>\r\n          <execution>\r\n            <id>blackbox-test</id>\r\n            <goals>\r\n              <goal>integration-test</goal>\r\n              <goal>verify</goal>\r\n            </goals>\r\n            <phase>${failsafe.bt-phase}</phase>\r\n            <configuration>\r\n              <additionalClasspathElements>\r\n                <additionalClasspathElement>\r\n                  ${project.build.testOutputDirectory}\r\n                </additionalClasspathElement>\r\n                <additionalClasspathElement>\r\n                  ${project.build.directory}/integrationtest-classes\r\n                </additionalClasspathElement>\r\n              </additionalClasspathElements>\r\n              <includes>\r\n                <include>**/*.java</include>\r\n              </includes>\r\n              <trimStackTrace>false</trimStackTrace>\r\n              <systemPropertyVariables>\r\n                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\r\n                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\r\n                <maven.home>${maven.home}</maven.home>\r\n              </systemPropertyVariables>\r\n              <classesDirectory>${project.build.outputDirectory}</classesDirectory>\r\n              <testClassesDirectory>${project.basedir}/target/blackboxtest-classes\r\n            </configuration>\r\n          </execution>\r\n        </executions>\r\n      </plugin>\r\n      ...\r\n```\r\n\r\n## Current Behaviour\r\n\r\nWith this setup, if we execute `./mvnw clean verify`, we get an exception:\r\n```\r\n[ERROR] de.turing85.GreetingResourceIntegrationTest.testHelloEndpoint  Time elapsed: 0 s  <<< ERROR!\r\njava.lang.RuntimeException: java.lang.RuntimeException: The test class class de.turing85.GreetingResourceIntegrationTest is not located in any of the directories [classes\\java\\native-integrationTest, classes\\scala\\integration-test, \\test-classes, classes\\kotlin\\native-integration-test, classes\\kotlin\\native-integrationTest, classes\\scala\\integrationTest, classes\\kotlin\\test, classes\\kotlin\\native-test, classes\\java\\native-integration-test, classes\\java\\native-test, classes\\java\\test, classes\\java\\integration-test, classes\\scala\\test, out\\test, quarkus-app-classes-test, classes\\kotlin\\integration-test, classes\\kotlin\\integrationTest, classes\\scala\\native-integrationTest, bin\\test, classes\\java\\integrationTest, classes\\scala\\native-integration-test, classes\\scala\\native-test]\r\n        at io.quarkus.test.junit.QuarkusTestExtension.throwBootFailureException(QuarkusTestExtension.java:626)\r\n        ...\r\n```\r\nWhat's more: when I try to execute ./mvnw quarkus:dev, quarkus tries to compile the integrationtests first, which fails. As such, quarkus starts  up in dev mode, but no tests can be run since no tests were compiled. While the devmode application is running, we can call `./mvnw package` to compile all tests. After this, we can execute the tests in the devmode console.\r\n\r\n## Desired behaviour\r\n\r\nIt would be great if we can configure quarkus to:\r\n1. compile the (test) sources in the right order\r\n2. in what directory (directories) the tests can be found (for `devmode` as well as `failsafe`-executions)\r\n\r\n## Sample project setup\r\nCan be found in [this bitbucket repo](https://bitbucket.org/turing85/quarkus-source-sets/).\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23752/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23752/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
