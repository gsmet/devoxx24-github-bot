{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41441",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41441/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41441/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41441/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/41441",
  "id": 2373076230,
  "node_id": "I_kwDOCFbutM6NckUG",
  "number": 41441,
  "title": "Kafka consumer has a lag when connecting to a broker in KRaft mode",
  "labels": [
    {
      "id": 985346626,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjY=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/question",
      "name": "kind/question",
      "color": "d876e3",
      "default": false,
      "description": "Further information is requested"
    },
    {
      "id": 1658790125,
      "node_id": "MDU6TGFiZWwxNjU4NzkwMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kafka",
      "name": "area/kafka",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 9,
  "created_at": "2024-06-25T16:06:04Z",
  "updated_at": "2024-07-04T08:13:23Z",
  "closed_at": "2024-07-04T08:13:23Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI have an application, which contains a Rest endpoint, which sends messages to kafka via Emitter after receiving a HTTP request, and a consumer, which processes them.\r\nWhen I connect to kafka broker, which runs in a \"classic\" mode (with Zookeeper), the application works as expected. When I connect to kafka broker, which runs in a KRaft mode (without Zookeeper), the application sends the messages to the kafka, but do not process them, unless I wait for some time after the app started to send the first request.\n\n### Expected behavior\n\nAfter the app started, it should process all incoming messages, be they from HTTP or Kafka.\n\n### Actual behavior\n\nThe app doesn't start to process the messages right away.\n\n### How to Reproduce?\n\n1. `git clone -b slow-kraft git@github.com:fedinskiy/reproducer.git && cd reproducer`\r\n2. [Optional] Build a image for dual-mode kafka: `podman build --tag double-kafka -f Dockerfile`\r\n3. Run Kafka in a classic mode, eg: ` podman run --rm -it -p9092:9092 -p2181:2181 --name kafka double-kafka:latest /tmp/classic.sh`\r\n4. Run the tests: `mvn clean verify  -Dtest=GreetingResourceTest#fastTest`. The logs contain line from consumer: ` INFO  [io.qua.qe.SlowTopicConsumer] (vert.x-eventloop-thread-3) Processed Message fast`\r\n5. Run Kafka in a kraft mode, eg `podman run --rm -it -p9092:9092 -p2181:2181 --name kafka double-kafka:latest /tmp/kraft.sh`\r\n6. Run the tests: `mvn clean verify  -Dtest=GreetingResourceTest#fastTest`. The logs doesn't contain line from consumer.\r\n7. Run the tests with an initial waiting: `mvn clean verify  -Dtest=GreetingResourceTest#slowTest`. The logs contain line from the consumer: ` [io.qua.qe.SlowTopicConsumer] (vert.x-eventloop-thread-3) Processed Message wait`\r\n\n\n### Output of `uname -a` or `ver`\n\n6.7.3-200.fc39.x86_64\n\n### Output of `java -version`\n\nJava version: 21.0.1, vendor: Eclipse Adoptium\n\n### Quarkus version or git rev\n\n3.11.3\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae)\n\n### Additional information\n\nThe error is reproduced using Quarkus tests but we first encountered using https://github.com/quarkus-qe/quarkus-test-suite, which runs an application in a prod mode.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41441/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41441/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
