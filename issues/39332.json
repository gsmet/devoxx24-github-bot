{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39332",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39332/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39332/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39332/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/39332",
  "id": 2179515421,
  "node_id": "I_kwDOCFbutM6B6MQd",
  "number": 39332,
  "title": "Support programmatic Schema definition with Protostream 5 in Infinispan ",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282122953,
      "node_id": "MDU6TGFiZWwxMjgyMTIyOTUz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/infinispan",
      "name": "area/infinispan",
      "color": "0366d6",
      "default": false,
      "description": "Infinispan"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2024-03-11T16:05:20Z",
  "updated_at": "2024-03-25T11:40:03Z",
  "closed_at": "2024-03-25T11:40:03Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nProtostream 5 allows programmatic schema definition.\r\n\r\n```java\r\n\r\n Schema schema = new Schema.Builder(\"myschema.proto\")\r\n            .syntax(Syntax.PROTO3)\r\n            .addImport(\"another.proto\")\r\n            .packageName(\"org.infinispan.protostream.test\")\r\n\r\n            .addMessage(\"Address\")\r\n               .addField(Type.Scalar.STRING, \"street\", 1)\r\n               .addField(Type.Scalar.INT32, \"number\", 2)\r\n\r\n            .addMessage(\"User\")\r\n               .addComment(\"@Indexed\")\r\n               .addField(Type.Scalar.INT32, \"age\", 1)\r\n                  .addComment(\"@Field\")\r\n               .addField(Type.Scalar.STRING, \"name\", 2)\r\n                  .addComment(\"@Field\")\r\n               .addRepeatedField(Type.create(\"Address\"), \"addresses\", 3)\r\n               .addNestedMessage(\"Nested\",\r\n                  m -> m.addComment(\"Nested comment\").addField(Type.Scalar.BOOL, \"is_it\", 1)\r\n               )\r\n               .addOneOf(\"either\",\r\n                     o -> o.addOneOfField(Type.Scalar.STRING, \"sub1\", 4).addOneOfField(Type.Scalar.INT32, \"sub2\", 5)\r\n               )\r\n               .addMap(Type.Scalar.STRING, Type.Scalar.STRING, \"properties\", 6)\r\n               .addEnum(\"gender\")\r\n                  .addComment(\"@Enum\")\r\n                  .addOption(\"allow_alias\", false)\r\n                  .addValue(\"male\", 0)\r\n                  .addValue(\"female\", 1)\r\n                     .addOption(\"custom_option\", \"hello\")\r\n                  .addValue(\"unspecified\", 2)\r\n               .addReservedRange(4, 10)\r\n               .addReserved(15)\r\n               .addReserved(\"dont_wanna_say\")\r\n            .build();\r\n```\r\n\r\nSupport injection with @Produces like with the  FileDescriptorSource\r\n\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39332/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39332/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
