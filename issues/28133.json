{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28133",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28133/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28133/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28133/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/28133",
  "id": 1381056066,
  "node_id": "I_kwDOCFbutM5SUT5C",
  "number": 28133,
  "title": "Implement per persistence unit configuration for Hibernate Envers",
  "labels": [
    {
      "id": 1273026509,
      "node_id": "MDU6TGFiZWwxMjczMDI2NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/persistence",
      "name": "area/persistence",
      "color": "FBCA04",
      "default": false,
      "description": "OBSOLETE, DO NOT USE"
    },
    {
      "id": 1425555736,
      "node_id": "MDU6TGFiZWwxNDI1NTU1NzM2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-orm",
      "name": "area/hibernate-orm",
      "color": "0366d6",
      "default": false,
      "description": "Hibernate ORM"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/214",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/214",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/214/labels",
    "id": 8581813,
    "node_id": "MI_kwDOCFbutM4AgvK1",
    "number": 214,
    "title": "2.15.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 194,
    "state": "closed",
    "created_at": "2022-10-26T07:03:06Z",
    "updated_at": "2023-05-15T13:57:18Z",
    "due_on": null,
    "closed_at": "2022-11-30T12:45:37Z"
  },
  "comments": 9,
  "created_at": "2022-09-21T14:45:42Z",
  "updated_at": "2022-10-31T10:20:27Z",
  "closed_at": "2022-10-31T10:20:24Z",
  "active_lock_reason": null,
  "body": "Hibernate Envers actually has the existing infrastructure to do so as we implement the `active` boolean per persistence unit but all the rest of the config is still global.\r\nWe should move everything to the persistence unit specific config, adjust `HibernateEnversRecorder#contributeBootProperties()` to target per PU config for all properties and it would probably work. If we're lucky.\r\n\r\nWe also need a proper test for that new feature.\r\n\r\nTypically, we want to be able to do:\r\n\r\n```\r\nquarkus.hibernate-envers.db1.store-data-at-delete=true\r\nquarkus.hibernate-envers.db1.audit-table-suffix=_aud\r\nquarkus.hibernate-envers.db1.revision-field-name=rev\r\nquarkus.hibernate-envers.db1.revision-type-field-name=revtype\r\nquarkus.hibernate-envers.db1.audit-strategy=org.hibernate.envers.strategy.ValidityAuditStrategy\r\nquarkus.hibernate-envers.db1.audit-strategy-validity-end-rev-field-name=revend\r\nquarkus.hibernate-envers.db1.audit-strategy-validity-store-revend-timestamp=true\r\nquarkus.hibernate-envers.db1.audit-strategy-validity-revend-timestamp-field-name=revend_tstmp\r\n\r\nquarkus.hibernate-envers.db2.audit-table-suffix=_aud\r\nquarkus.hibernate-envers.db2.revision-field-name=revision_id\r\nquarkus.hibernate-envers.db2.revision-type-field-name=revtype\r\nquarkus.hibernate-envers.db2.do-not-audit-optimistic-locking-field=false\r\nquarkus.hibernate-envers.db2.store-data-at-delete=true\r\n```\r\n\r\n### Discussed in https://github.com/quarkusio/quarkus/discussions/27971\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **Traivor** September 15, 2022</sup>\r\nIt doesn't appear that the hibernate-envers plugin supports configuration on a persistence unit basis. Am I reading things right? Are there any plans to support this?\r\n\r\nAlternatively, would passing envers properties via the new quarkus.hibernate-orm.\"unit-name\".unsupported-properties property work?</div>",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28133/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28133/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
