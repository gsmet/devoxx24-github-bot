{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21853",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21853/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21853/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21853/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21853",
  "id": 1068543378,
  "node_id": "I_kwDOCFbutM4_sK2S",
  "number": 21853,
  "title": "Qute: support globals",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1714005220,
      "node_id": "MDU6TGFiZWwxNzE0MDA1MjIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/qute",
      "name": "area/qute",
      "color": "0366d6",
      "default": false,
      "description": "The template engine"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/161",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161/labels",
    "id": 7468359,
    "node_id": "MI_kwDOCFbutM4AcfVH",
    "number": 161,
    "title": "2.7.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 334,
    "state": "closed",
    "created_at": "2021-12-08T07:48:18Z",
    "updated_at": "2022-02-03T19:52:11Z",
    "due_on": null,
    "closed_at": "2022-01-19T12:42:36Z"
  },
  "comments": 1,
  "created_at": "2021-12-01T15:26:48Z",
  "updated_at": "2022-01-13T15:59:55Z",
  "closed_at": "2022-01-13T15:59:55Z",
  "active_lock_reason": null,
  "body": "### Description\n\nAt the moment if I want to pass variables to templates I can pass them via the template invocation using `@CheckedTemplates` but if I want to declare global variables that apply to every template, I need to either declare them for every template (not realistic) or declare a namespace for them:\r\n\r\n```java\r\n@TemplateExtension(namespace = \"global\")\r\npublic class Globals {\r\n    public static User user() {\r\n        return Arc.container().instance(Security.class).get().getUser();\r\n    }\r\n    public static String requestUrl() {\r\n        return Arc.container().instance(UriInfo.class).get().getRequestUri().toASCIIString();\r\n    }\r\n    public static int VARCHAR_SIZE() {\r\n        return Util.VARCHAR_SIZE;\r\n    }\r\n}\r\n```\r\n\r\nAnd then I need to use the `global:` prefix everwhere, which can be unwieldy:\r\n\r\n```html\r\n            {#if global:user && global:user.alerts}\r\n                <div id=\"persistent-alert\">\r\n                    <span class=\"close\" onclick=\"removeAlert('{uri:LoggedInUsers.closeAlert(global:user.alerts.get(0).id)}', this)\">&times;</span>\r\n                    <span id=\"persistent-alert-text\">{global:user.alerts.get(0).text}</span>\r\n                </div>\r\n```\r\n\r\nI'd like to simplify this by allowing globals with no namespace, like this:\r\n\r\n```java\r\n@TemplateExtension\r\npublic class Globals {\r\n    public static User user() {\r\n        return Arc.container().instance(Security.class).get().getUser();\r\n    }\r\n    public static String requestUrl() {\r\n        return Arc.container().instance(UriInfo.class).get().getRequestUri().toASCIIString();\r\n    }\r\n    public static int VARCHAR_SIZE() {\r\n        return Util.VARCHAR_SIZE;\r\n    }\r\n}\r\n```\r\n\r\nSo I can use them like this:\r\n\r\n```html\r\n            {#if user && user.alerts}\r\n                <div id=\"persistent-alert\">\r\n                    <span class=\"close\" onclick=\"removeAlert('{uri:LoggedInUsers.closeAlert(global:alerts.get(0).id)}', this)\">&times;</span>\r\n                    <span id=\"persistent-alert-text\">{global:alerts.get(0).text}</span>\r\n                </div>\r\n```\r\n\r\nAt build-time we can scan all the globals declared with `@TemplateExtension` and no namespace, and collect them into a list of globals that we add to the per-template type-safe parameters, so that type-checking will know about these globals as well as the per-template parameters we already have.\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21853/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21853/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
