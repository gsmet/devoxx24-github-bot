{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25041",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25041/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25041/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25041/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25041",
  "id": 1209759243,
  "node_id": "I_kwDOCFbutM5IG3YL",
  "number": 25041,
  "title": "RestClientBuilderResolver not working with REST Client Reactive in plain unit tests",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346625,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjU=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/invalid",
      "name": "triage/invalid",
      "color": "e4e669",
      "default": false,
      "description": "This doesn't seem right"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2022-04-20T14:18:05Z",
  "updated_at": "2022-04-21T13:37:02Z",
  "closed_at": "2022-04-21T04:46:46Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWith the REST Client provided by RESTEasy Classic it's possible to manually obtain an implementation for your REST Client in a unit test without having to start Quarkus with a`@QuarkusTest` annotation. Now that we are trying to migrate our project to RESTEasy Reactive with Quarkus 2.8 we discovered that this approach no longer works for us.\r\n\r\nExample code:\r\n```java\r\npackage nl.wjglerum;\r\n\r\nimport com.github.tomakehurst.wiremock.WireMockServer;\r\nimport com.github.tomakehurst.wiremock.core.WireMockConfiguration;\r\nimport io.quarkus.test.junit.QuarkusTest;\r\nimport org.eclipse.microprofile.rest.client.spi.RestClientBuilderResolver;\r\nimport org.junit.jupiter.api.Assertions;\r\nimport org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.net.URI;\r\nimport java.net.URISyntaxException;\r\n\r\nimport static com.github.tomakehurst.wiremock.client.WireMock.*;\r\n\r\npublic class ExtensionServiceTest {\r\n\r\n    static WireMockServer wireMockServer;\r\n    static ExtensionService extensionService;\r\n\r\n    @BeforeAll\r\n    static void setup() throws URISyntaxException {\r\n        WireMockConfiguration configuration = WireMockConfiguration.options().dynamicPort();\r\n        wireMockServer = new WireMockServer(configuration);\r\n\r\n        wireMockServer.stubFor(get(urlEqualTo(\"/extensions?id=io.quarkus%3Aquarkus-rest-client\"))\r\n                .willReturn(aResponse()\r\n                        .withHeader(\"Content-Type\", \"application/json\")\r\n                        .withBody(\r\n                                \"[{\" +\r\n                                        \"\\\"id\\\": \\\"io.quarkus:quarkus-rest-client\\\",\" +\r\n                                        \"\\\"name\\\": \\\"REST Client\\\"\" +\r\n                                        \"}]\"\r\n                        )));\r\n\r\n        wireMockServer.start();\r\n\r\n        extensionService = RestClientBuilderResolver.instance().newBuilder()\r\n                .baseUri(new URI(wireMockServer.baseUrl()))\r\n                .build(ExtensionService.class);\r\n    }\r\n\r\n    @Test\r\n    void test() {\r\n        Assertions.assertEquals(\"REST Client\", extensionService.getById(\"io.quarkus:quarkus-rest-client\").get(0).name);\r\n    }\r\n}\r\n```\r\n\r\nHow would this approach be possible with the REST Client Reactive? We for example also use these stubs when we want to obtain an instance of a REST Client in our unit tests with Camel by extending from `CamelTestSupport` for those tests.\r\n\r\n### Expected behavior\r\n\r\nWith REST Client Classic:\r\n\r\n```\r\n$ ./mvnw test -Dtest=ExtensionServiceTest\r\n[INFO] Scanning for projects...\r\n[INFO] \r\n[INFO] --------------< nl.wjglerum:quarkus-rest-client-wiremock >--------------\r\n[INFO] Building quarkus-rest-client-wiremock 1.0.0-SNAPSHOT\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ quarkus-rest-client-wiremock ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] Copying 2 resources\r\n[INFO] \r\n[INFO] --- quarkus-maven-plugin:2.8.1.Final:generate-code (default) @ quarkus-rest-client-wiremock ---\r\n[INFO] \r\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ quarkus-rest-client-wiremock ---\r\n[INFO] Nothing to compile - all classes are up to date\r\n[INFO] \r\n[INFO] --- quarkus-maven-plugin:2.8.1.Final:generate-code-tests (default) @ quarkus-rest-client-wiremock ---\r\n[INFO] \r\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ quarkus-rest-client-wiremock ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] skip non existing resourceDirectory /Users/wjglerum/Documents/Dev/quarkus-rest-client-wiremock/src/test/resources\r\n[INFO] \r\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ quarkus-rest-client-wiremock ---\r\n[INFO] Nothing to compile - all classes are up to date\r\n[INFO] \r\n[INFO] --- maven-surefire-plugin:3.0.0-M6:test (default-test) @ quarkus-rest-client-wiremock ---\r\n[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider\r\n[INFO] \r\n[INFO] -------------------------------------------------------\r\n[INFO]  T E S T S\r\n[INFO] -------------------------------------------------------\r\n[INFO] Running nl.wjglerum.ExtensionServiceTest\r\n2022-04-20 16:01:26,920 INFO  [wir.org.ecl.jet.uti.log] (main) Logging initialized @4822ms to wiremock.org.eclipse.jetty.util.log.Slf4jLog\r\n2022-04-20 16:01:28,097 INFO  [wir.org.ecl.jet.ser.Server] (main) jetty-9.4.46.v20220331; built: 2022-03-31T16:38:08.030Z; git: bc17a0369a11ecf40bb92c839b9ef0a8ac50ea18; jvm 11.0.11+9\r\n2022-04-20 16:01:28,150 INFO  [wir.org.ecl.jet.ser.han.ContextHandler] (main) Started w.o.e.j.s.ServletContextHandler@c4c0b41{/__admin,null,AVAILABLE}\r\n2022-04-20 16:01:28,184 INFO  [wir.org.ecl.jet.ser.han.Con.ROOT] (main) RequestHandlerClass from context returned com.github.tomakehurst.wiremock.http.StubRequestHandler. Normalized mapped under returned 'null'\r\n2022-04-20 16:01:28,186 INFO  [wir.org.ecl.jet.ser.han.ContextHandler] (main) Started w.o.e.j.s.ServletContextHandler@38548b19{/,null,AVAILABLE}\r\n2022-04-20 16:01:28,272 INFO  [wir.org.ecl.jet.ser.AbstractConnector] (main) Started NetworkTrafficServerConnector@d1f74b8{HTTP/1.1, (http/1.1, h2c)}{0.0.0.0:64107}\r\n2022-04-20 16:01:28,274 INFO  [wir.org.ecl.jet.ser.Server] (main) Started @6179ms\r\n2022-04-20 16:01:28,330 WARN  [org.jbo.res.mic.cli.RestClientBuilderImpl] (main) CDI container is not available\r\n2022-04-20 16:01:29,097 WARN  [org.jbo.res.mic.cli.RestClientBuilderImpl] (main) CDI container is not available\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.223 s - in nl.wjglerum.ExtensionServiceTest\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  33.332 s\r\n[INFO] Finished at: 2022-04-20T16:01:30+02:00\r\n[INFO] ------------------------------------------------------------------------\r\n```\r\n\r\n### Actual behavior\r\n\r\nWith REST Client Reactive:\r\n\r\n```\r\n$ ./mvnw test -Dtest=ExtensionServiceTest\r\n[INFO] Scanning for projects...\r\n[INFO] \r\n[INFO] --------------< nl.wjglerum:quarkus-rest-client-wiremock >--------------\r\n[INFO] Building quarkus-rest-client-wiremock 1.0.0-SNAPSHOT\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ quarkus-rest-client-wiremock ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] Copying 2 resources\r\n[INFO] \r\n[INFO] --- quarkus-maven-plugin:2.8.1.Final:generate-code (default) @ quarkus-rest-client-wiremock ---\r\n[INFO] \r\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ quarkus-rest-client-wiremock ---\r\n[INFO] Nothing to compile - all classes are up to date\r\n[INFO] \r\n[INFO] --- quarkus-maven-plugin:2.8.1.Final:generate-code-tests (default) @ quarkus-rest-client-wiremock ---\r\n[INFO] \r\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ quarkus-rest-client-wiremock ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] skip non existing resourceDirectory /Users/wjglerum/Documents/Dev/quarkus-rest-client-wiremock/src/test/resources\r\n[INFO] \r\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ quarkus-rest-client-wiremock ---\r\n[INFO] Changes detected - recompiling the module!\r\n[INFO] Compiling 3 source files to /Users/wjglerum/Documents/Dev/quarkus-rest-client-wiremock/target/test-classes\r\n[INFO] \r\n[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ quarkus-rest-client-wiremock ---\r\n[INFO] \r\n[INFO] -------------------------------------------------------\r\n[INFO]  T E S T S\r\n[INFO] -------------------------------------------------------\r\n[INFO] Running nl.wjglerum.ExtensionServiceTest\r\n2022-04-20 15:58:40,191 INFO  [wir.org.ecl.jet.uti.log] (main) Logging initialized @2215ms to wiremock.org.eclipse.jetty.util.log.Slf4jLog\r\n2022-04-20 15:58:40,788 INFO  [wir.org.ecl.jet.ser.Server] (main) jetty-9.4.46.v20220331; built: 2022-03-31T16:38:08.030Z; git: bc17a0369a11ecf40bb92c839b9ef0a8ac50ea18; jvm 11.0.11+9\r\n2022-04-20 15:58:40,812 INFO  [wir.org.ecl.jet.ser.han.ContextHandler] (main) Started w.o.e.j.s.ServletContextHandler@273842a6{/__admin,null,AVAILABLE}\r\n2022-04-20 15:58:40,826 INFO  [wir.org.ecl.jet.ser.han.Con.ROOT] (main) RequestHandlerClass from context returned com.github.tomakehurst.wiremock.http.StubRequestHandler. Normalized mapped under returned 'null'\r\n2022-04-20 15:58:40,827 INFO  [wir.org.ecl.jet.ser.han.ContextHandler] (main) Started w.o.e.j.s.ServletContextHandler@73877e19{/,null,AVAILABLE}\r\n2022-04-20 15:58:40,867 INFO  [wir.org.ecl.jet.ser.AbstractConnector] (main) Started NetworkTrafficServerConnector@6d6bc158{HTTP/1.1, (http/1.1, h2c)}{0.0.0.0:64070}\r\n2022-04-20 15:58:40,868 INFO  [wir.org.ecl.jet.ser.Server] (main) Started @2894ms\r\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.63 s <<< FAILURE! - in nl.wjglerum.ExtensionServiceTest\r\n[ERROR] nl.wjglerum.ExtensionServiceTest  Time elapsed: 1.63 s  <<< ERROR!\r\njava.lang.IllegalStateException: No RestClientBuilderResolver implementation found!\r\n        at nl.wjglerum.ExtensionServiceTest.setup(ExtensionServiceTest.java:38)\r\n\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[ERROR] Errors: \r\n[ERROR]   ExtensionServiceTest.setup:38 ? IllegalState No RestClientBuilderResolver impl...\r\n[INFO] \r\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  12.265 s\r\n[INFO] Finished at: 2022-04-20T15:58:41+02:00\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M5:test (default-test) on project quarkus-rest-client-wiremock: There are test failures.\r\n[ERROR] \r\n[ERROR] Please refer to /Users/wjglerum/Documents/Dev/quarkus-rest-client-wiremock/target/surefire-reports for the individual test results.\r\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\r\n[ERROR] -> [Help 1]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR] \r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\r\n```\r\n\r\n### How to Reproduce?\r\n\r\nFollow the steps from the guides to define a REST Client and some tests:\r\n- https://quarkus.io/guides/rest-client-reactive\r\n- https://quarkus.io/guides/rest-client#using-a-mock-http-server-for-tests\r\n[quarkus-rest-client-wiremock.zip](https://github.com/quarkusio/quarkus/files/8522171/quarkus-rest-client-wiremock.zip)\r\n\r\nAnd see the example project [quarkus-rest-client-wiremock.zip](https://github.com/quarkusio/quarkus/files/8522197/quarkus-rest-client-wiremock.zip)\r\n\r\nIf you switch to the REST Client Reactive the test fails.\r\n\r\n\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n`Darwin Willems-MBP 21.4.0 Darwin Kernel Version 21.4.0: Fri Mar 18 00:45:05 PDT 2022; root:xnu-8020.101.4~15/RELEASE_X86_64 x86_64`\r\n\r\n### Output of `java -version`\r\n\r\n`openjdk version \"11.0.11\" 2021-04-20`\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n`2.8.1`\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n`Apache Maven 3.8.4 (9b656c72d54e5bacbed989b64718c159fe39b537)`\r\n\r\n### Additional information\r\n\r\nI also tried to instantiate the builder provided by the REST Client Reactive, however that resulted in a `NullPointerException` towards ArC. I guess that makes sense as we don't have an active Quarkus application.\r\n\r\n```java\r\n        extensionService = new RestClientBuilderImpl()\r\n                .baseUri(new URI(wireMockServer.baseUrl()))\r\n                .build(ExtensionService.class);\r\n```\r\n\r\n```\r\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.12 s <<< FAILURE! - in nl.wjglerum.ExtensionServiceTest\r\n[ERROR] nl.wjglerum.ExtensionServiceTest  Time elapsed: 1.12 s  <<< ERROR!\r\njava.lang.NullPointerException\r\n        at io.quarkus.rest.client.reactive.runtime.RestClientBuilderImpl.build(RestClientBuilderImpl.java:285)\r\n```\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25041/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25041/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
