{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40692",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40692/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40692/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40692/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/40692",
  "id": 2302348795,
  "node_id": "I_kwDOCFbutM6JOw37",
  "number": 40692,
  "title": "Web server: Make brotli, deflate, gzip configurable",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1273030910,
      "node_id": "MDU6TGFiZWwxMjczMDMwOTEw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/config",
      "name": "area/config",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1320737519,
      "node_id": "MDU6TGFiZWwxMzIwNzM3NTE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/vertx",
      "name": "area/vertx",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/329",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/329",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/329/labels",
    "id": 11056804,
    "node_id": "MI_kwDOCFbutM4AqLak",
    "number": 329,
    "title": "3.12.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 195,
    "state": "closed",
    "created_at": "2024-05-15T09:27:54Z",
    "updated_at": "2024-07-04T18:19:16Z",
    "due_on": null,
    "closed_at": "2024-06-12T11:16:44Z"
  },
  "comments": 3,
  "created_at": "2024-05-17T10:20:13Z",
  "updated_at": "2024-06-10T20:31:24Z",
  "closed_at": "2024-06-10T20:31:21Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nSparkled by #40533 \r\n\r\nWhen [http compression](https://quarkus.io/guides/http-reference#http-compression) is enabled, Quarkus defaults to gzip, i.e. when faced with this request header:\r\n\r\n```\r\n> Accept-Encoding: deflate, gzip, br\r\n```\r\n\r\nit responds with gzipped content:\r\n\r\n```\r\n< content-encoding: gzip\r\n```\r\n\r\nSimilarly, if the client claims only support for `deflate`, Quarkus obliges with deflate compressed content:\r\n\r\n```\r\n> Accept-Encoding: deflate\r\n```\r\n\r\n```\r\n< content-encoding: deflate\r\n```\r\n\r\nBrotli compression is available via brotli4j JNI wrapper and it is a part of Vert.x and it could be used  by Quarkus both in Native and  HotSpot, see [example project](https://github.com/Karm/dev-null/tree/main/brotli4j-native). The configuration is cumbersome and requires additional config in user's app. When configured, it works though:\r\n\r\n```\r\n> Accept-Encoding: deflate, gzip, br\r\n```\r\n\r\n```\r\n< content-encoding: br\r\n```\r\n\r\nI'd like to add a new option, yet another knob to tune, [alongside the existing options here](https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java#L82):\r\n\r\n```\r\nquarkus.http.enable-compression=true\r\nquarkus.http.compress-media-types=text/plain\r\n```\r\n\r\nI have this cooking now:\r\n\r\n```\r\n\r\n    /**\r\n     * If user adds br, then brotli will be added to the list of supported compression algorithms.\r\n     * It implies loading libbrotli native library via JNI and in case of Native image,\r\n     * packing the native library into the native image as a resource thus inflating its size.\r\n     * Note that a native shared object library must be available for your platform in Brotli4J project.\r\n     */\r\n    @ConfigItem(defaultValue = \"gzip,deflate\")\r\n    public Optional<List<String>> compressionAlgorithms;\r\n\r\n```\r\nEDIT: Actually this does not handle well, because if you would like to remove e.g. deflate, it would require additional substitutions and tweaking in vert.x to actually remove it and that is a \"feature\" nobody asked for. So it would be much better to call it:\r\n\r\n```\r\n    public Optional<List<String>> addCompressors;\r\n\r\n```\r\nAnd now if it adds br as brotli, the Brotli compressor is added back to Vert.x, where it was removed in the first place in isBrotliAvailable.\r\n\r\n...and a corresponding native build steps that would bake resources and init as needed so as user doesn't have to.\r\n\r\nWIP...\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40692/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40692/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
