{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24868",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24868/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24868/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24868/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24868",
  "id": 1199587817,
  "node_id": "I_kwDOCFbutM5HgEHp",
  "number": 24868,
  "title": "Change Content type in prematch filter does not change content type when matching (reactive!)",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/184",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/184",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/184/labels",
    "id": 7922797,
    "node_id": "MI_kwDOCFbutM4AeORt",
    "number": 184,
    "title": "2.7.6.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 171,
    "state": "closed",
    "created_at": "2022-04-28T08:08:41Z",
    "updated_at": "2022-05-30T11:25:22Z",
    "due_on": null,
    "closed_at": "2022-05-30T11:25:22Z"
  },
  "comments": 6,
  "created_at": "2022-04-11T08:27:46Z",
  "updated_at": "2022-05-12T08:46:35Z",
  "closed_at": "2022-04-14T06:22:16Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWhen you post message with a non existing content-type (application/example) and in the prematch you change it \r\nto \"application/json\" i expect the matching rule should use the new content-type when matching. \r\n\r\nInstead i get the following message: \r\n\r\n```posh\r\nERROR: Exception occured, message= The content-type header value did not match the value in @Consumes\r\njavax.ws.rs.NotSupportedException: The content-type header value did not match the value in @Consumes\r\n\tat org.jboss.resteasy.reactive.server.handlers.ClassRoutingHandler.handle(ClassRoutingHandler.java:118)\r\n\tat org.jboss.resteasy.reactive.server.handlers.ClassRoutingHandler.handle(ClassRoutingHandler.java:27)\r\n\tat org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:141)\r\n\tat org.jboss.resteasy.reactive.server.handlers.RestInitialHandler.beginProcessing(RestInitialHandler.java:49)\r\n\tat org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveVertxHandler.handle(ResteasyReactiveVertxHandler.java:17)\r\n\tat org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveVertxHandler.handle(ResteasyReactiveVertxHandler.java:7)\r\n```\r\n\r\nBelow the simple pre match rule\r\n\r\n```java\r\n @ServerRequestFilter(preMatching = true)\r\n  public void preMatchingFilter(ContainerRequestContext requestContext) {\r\n  \r\n    \r\n    requestContext.getHeaders().put(HttpHeaders.CONTENT_TYPE, List.of(MediaType.APPLICATION_JSON));   \r\n\r\n\r\n  }\r\n```\r\n\r\n\r\n\r\nI am using the following libs:\r\n```\r\n\r\n\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-amazon-lambda-rest</artifactId>\r\n\t\t</dependency>\t\t\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-vertx</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-resteasy-reactive</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.smallrye.reactive</groupId>\r\n\t\t\t<artifactId>smallrye-mutiny-vertx-auth-oauth2</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.smallrye.reactive</groupId>\r\n\t\t\t<artifactId>smallrye-mutiny-vertx-web-client</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-logging-json</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkiverse.amazonservices</groupId>\r\n\t\t\t<artifactId>quarkus-amazon-ssm</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>software.amazon.awssdk</groupId>\r\n\t\t\t<artifactId>url-connection-client</artifactId>\r\n\t\t</dependency>\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nMatching will use the new content-type set in the pre match filter\r\n\r\n### Actual behavior\r\n\r\nMatching will use the old content-type\r\n\r\n### How to Reproduce?\r\n\r\n1. Implement a simple rest service:\r\n\r\n```java\r\n @Path(\"/example\")\r\n@Consumes(MediaType.APPLICATION_JSON)\r\n  @POST\r\n  public Uni<Response> example(byte[] bytes)  {    \r\n\r\n....\r\n}\r\n```\r\n\r\n2. Create pre match filter which changes the content-type to application/json\r\n3. Post a message with a content-type application/example\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nMicrosoft Windows [Version 10.0.19044.1586]\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"11.0.14\" 2022-01-18 LTS\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n22.0\r\n\r\n### Quarkus version or git rev\r\n\r\n2.7.5.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n3.8.4\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24868/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24868/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
