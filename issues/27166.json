{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27166",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27166/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27166/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27166/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27166",
  "id": 1330788110,
  "node_id": "I_kwDOCFbutM5PUjcO",
  "number": 27166,
  "title": "Connection pool exhaustion for lazy entity association (acquisition timeout)",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1449536431,
      "node_id": "MDU6TGFiZWwxNDQ5NTM2NDMx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kafka-streams",
      "name": "area/kafka-streams",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/201",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/201",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/201/labels",
    "id": 8316083,
    "node_id": "MI_kwDOCFbutM4AfuSz",
    "number": 201,
    "title": "2.13.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 257,
    "state": "closed",
    "created_at": "2022-08-17T08:31:42Z",
    "updated_at": "2024-07-09T02:26:14Z",
    "due_on": null,
    "closed_at": "2022-09-14T20:11:06Z"
  },
  "comments": 12,
  "created_at": "2022-08-06T16:05:51Z",
  "updated_at": "2022-09-09T16:48:45Z",
  "closed_at": "2022-09-09T16:46:43Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nHi guys!\r\nI've noticed that some async processing in our project exhausts a database connection pool, and it never recovers.\r\nThe problem can be fixed by adding @Transactional annotation to @Incoming event handler, but \r\n1) I am not changing anything in the database during this process, using only \"findById\" method and getting some info from an entity\r\n2) for some methods, performance is the case, so I would rather not add transactional processing there\r\n\r\nPlease check the reproducer.\r\nThere are two related entities and two tests: \r\n1) GreetingResourceTest: we are calling the HTTP endpoint repeatedly 50 times, and everything is ok. The connection pool works fine and gives us all entities to process\r\n2) GreetingKafkaTest: we are sending an event to the topic and waiting for it to be processed. After the 4th repeat, it starts to fail because the connection pool max-size is set to 5\r\n\r\nPlease notice that when you set EAGER association between two entities, everything works fine for both tests.\r\nI believe something is wrong with releasing DB connection during async execution.\r\n\r\n### Expected behavior\r\n\r\nLAZY association between entities works the same as EAGER one for non-transactional processing: connections are reused in the pool\r\n\r\n### Actual behavior\r\n\r\n\"Unable to acquire JDBC Connection\" after some calls (max pool size)\r\nCaused by: java.sql.SQLException: Sorry, acquisition timeout!\r\n\r\n### How to Reproduce?\r\n\r\n[cp-reproducer.zip](https://github.com/quarkusio/quarkus/files/9275380/cp-reproducer.zip)\r\n\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\njava version \"11.0.12\" 2021-07-20 LTS Java(TM) SE Runtime Environment 18.9 (build 11.0.12+8-LTS-237) Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.12+8-LTS-237, mixed mode)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.11.2 and smaller\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27166/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27166/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
