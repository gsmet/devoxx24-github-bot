{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25163",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25163/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25163/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25163/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25163",
  "id": 1215650016,
  "node_id": "I_kwDOCFbutM5IdVjg",
  "number": 25163,
  "title": "Quarkus reactive extensions with Postgis issue",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2122256208,
      "node_id": "MDU6TGFiZWwyMTIyMjU2MjA4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-reactive",
      "name": "area/hibernate-reactive",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 6,
  "created_at": "2022-04-26T09:13:34Z",
  "updated_at": "2022-12-23T19:52:59Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nHi there!\r\nI stumbled upon some issues running a reactive application using Panache along with Postgis. It seems the none reactive approach working fine in this example [#6615](https://github.com/quarkusio/quarkus/issues/6615#issuecomment-609674851). However when I tried the same approach for the reactive way I started getting some issues. Not sure exactly what I am missing to make this work or if you have any pointers.\r\n\r\nI am using hibernate spatial version 5.6.5.Final to setup the dialect \r\n\r\n `quarkus.hibernate-orm.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect`\r\n\r\n\r\nThanks!\n\n### Expected behavior\n\nCall endpoint and see geometry data. \r\n\r\n`[{\"name\":\"test\",\"geom\":{\"type\":\"Point\",\"coordinates\":[550700.0,5801000.0]}}]`\n\n### Actual behavior\n\nException is thrown.\r\n\r\n```\r\n2022-04-26 10:47:46,608 ERROR [org.jbo.res.rea.com.cor.AbstractResteasyReactiveContext] (vert.x-eventloop-thread-2) Request failed: java.lang.ClassCastException: class java.lang.String cannot be cast to class io.vertx.core.buffer.Buffer (java.lang.String is in module java.base of loader 'bootstrap'; io.vertx.co\r\nre.buffer.Buffer is in unnamed module of loader io.quarkus.bootstrap.classloading.QuarkusClassLoader @378542de)\r\n        at io.vertx.sqlclient.Tuple.getBuffer(Tuple.java:592)\r\n        at io.vertx.sqlclient.Row.getBuffer(Row.java:351)\r\n        at org.hibernate.reactive.adaptor.impl.ResultSetAdaptor.getBytes(ResultSetAdaptor.java:257)\r\n        at org.hibernate.type.descriptor.sql.VarbinaryTypeDescriptor$2.doExtract(VarbinaryTypeDescriptor.java:60)\r\n        at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)\r\n        at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)\r\n        at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)\r\n        at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)\r\n        at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)\r\n        at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3214)\r\n        at org.hibernate.loader.Loader.loadFromResultSet(Loader.java:1887)\r\n        at org.hibernate.loader.Loader.hydrateEntityState(Loader.java:1811)\r\n        at org.hibernate.loader.Loader.instanceNotYetLoaded(Loader.java:1784)\r\n        at org.hibernate.loader.Loader.getRow(Loader.java:1624)\r\n        at org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:748)\r\n        at org.hibernate.loader.Loader.getRowsFromResultSet(Loader.java:1047)\r\n        at org.hibernate.reactive.loader.hql.impl.ReactiveQueryLoader.getRowsFromResultSet(ReactiveQueryLoader.java:223)\r\n        at org.hibernate.reactive.loader.ReactiveLoaderBasedResultSetProcessor.reactiveExtractResults(ReactiveLoaderBasedResultSetProcessor.java:73)\r\n        at org.hibernate.reactive.loader.hql.impl.ReactiveQueryLoader$1.reactiveExtractResults(ReactiveQueryLoader.java:72)\r\n        at org.hibernate.reactive.loader.ReactiveLoader.reactiveProcessResultSet(ReactiveLoader.java:145)\r\n        at org.hibernate.reactive.loader.ReactiveLoader.lambda$doReactiveQueryAndInitializeNonLazyCollections$0(ReactiveLoader.java:77)\r\n        at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1146)\r\n        at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)\r\n        at java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2144)\r\n        at io.vertx.core.Future.lambda$toCompletionStage$2(Future.java:360)\r\n        at io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n        at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n        at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n        at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n        at io.vertx.sqlclient.impl.QueryResultBuilder.tryComplete(QueryResultBuilder.java:102)\r\n        at io.vertx.sqlclient.impl.QueryResultBuilder.tryComplete(QueryResultBuilder.java:35)\r\n        at io.vertx.core.Promise.complete(Promise.java:66)\r\n        at io.vertx.core.Promise.handle(Promise.java:51)\r\n        at io.vertx.core.Promise.handle(Promise.java:29)\r\n        at io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n        at io.vertx.core.impl.future.FutureBase.lambda$emitSuccess$0(FutureBase.java:54)\r\n        at io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:81)\r\n        at io.vertx.core.impl.DuplicatedContext.execute(DuplicatedContext.java:173)\r\n        at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:51)\r\n        at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n        at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n        at io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n        at io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:41)\r\n        at io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:23)\r\n        at io.vertx.sqlclient.impl.command.CommandResponse.fire(CommandResponse.java:46)\r\n        at io.vertx.sqlclient.impl.SocketConnectionBase.handleMessage(SocketConnectionBase.java:287)\r\n        at io.vertx.pgclient.impl.PgSocketConnection.handleMessage(PgSocketConnection.java:96)\r\n        at io.vertx.sqlclient.impl.SocketConnectionBase.lambda$init$0(SocketConnectionBase.java:99)\r\n        at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:50)\r\n        at io.vertx.core.impl.ContextImpl.emit(ContextImpl.java:274)\r\n        at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:22)\r\n        at io.vertx.core.net.impl.NetSocketImpl.handleMessage(NetSocketImpl.java:394)\r\n        at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:156)\r\n        at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n        at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n        at io.vertx.pgclient.impl.codec.PgEncoder.lambda$write$0(PgEncoder.java:87)\r\n        at io.vertx.pgclient.impl.codec.PgCommandCodec.handleReadyForQuery(PgCommandCodec.java:139)\r\n        at io.vertx.pgclient.impl.codec.PgDecoder.decodeReadyForQuery(PgDecoder.java:237)\r\n        at io.vertx.pgclient.impl.codec.PgDecoder.channelRead(PgDecoder.java:96)\r\n        at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:835)\r\n```\n\n### How to Reproduce?\n\n\r\n## Clone\r\nhttps://github.com/dvddhln/quarkus-reactive-postgis-reproducer\r\n\r\n\r\n## Start\r\n`mvn quarkus:dev`\r\n\r\n\r\n## Run\r\n`curl -X GET http://localhost:8080/location`\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\nopenjdk version \"12.0.2\" 2019-07-16\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.7.5.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nMaven 3.6.2 \n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25163/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25163/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
