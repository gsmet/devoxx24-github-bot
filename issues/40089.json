{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40089",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40089/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40089/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40089/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/40089",
  "id": 2244959816,
  "node_id": "I_kwDOCFbutM6Fz15I",
  "number": 40089,
  "title": "Qute: i18n for enum ",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1714005220,
      "node_id": "MDU6TGFiZWwxNzE0MDA1MjIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/qute",
      "name": "area/qute",
      "color": "0366d6",
      "default": false,
      "description": "The template engine"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/323",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/323",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/323/labels",
    "id": 10825140,
    "node_id": "MI_kwDOCFbutM4ApS20",
    "number": 323,
    "title": "3.11.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 180,
    "state": "closed",
    "created_at": "2024-04-16T10:59:06Z",
    "updated_at": "2024-08-07T12:38:09Z",
    "due_on": null,
    "closed_at": "2024-05-15T13:36:12Z"
  },
  "comments": 7,
  "created_at": "2024-04-16T02:18:23Z",
  "updated_at": "2024-04-18T13:41:06Z",
  "closed_at": "2024-04-18T13:41:03Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nAssigning a localized name for enum values is rather challenging with the current Qute API.\r\nIt would be helpful to be able to set part of the key as the first parameter of the message method:\r\n\r\n\r\n\r\n### Implementation ideas\r\n\r\n```java\r\npublic enum \r\nMyEnum {\r\n  ON, OFF, UNDEFINED\r\n}\r\n\r\n@MessageBundle \r\npublic interface AppMessages {\r\n\r\n    @Message \r\n    String displayName(MyEnum name);\r\n\r\n}\r\n```\r\n\r\nThen the localized file could look like:\r\n\r\n```\r\n# This comment is ignored\r\ndisplayName.ON=On\r\ndisplayName.OFF=Off\r\ndisplayName.UNDEFINED=Undefined\r\n```\r\n\r\nWe could add a new annotation for the parameter to make it explicit that it is part of the key:\r\n\r\n```java\r\n\r\npublic interface AppMessages {\r\n\r\n    @Message \r\n    String displayName(@MessageKey MyEnum name);\r\n\r\n}\r\n```\r\n\r\nif we want to be able to provide the message in the @Message annotation, we could make it repeatable:\r\n\r\n```java\r\n\r\npublic interface AppMessages {\r\n\r\n    @Message(key=\"ON\", value=\"On\")\r\n    @Message(key=\"OFF\", value=\"Off\")\r\n    @Message(key=\"UNDEFINED\", value=\"Undefined\")\r\n    String displayName(@MessageKey MyEnum name);\r\n\r\n}\r\n```\r\nor we could just prevent to set the message if MessageKey is present ?",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40089/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40089/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
