{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34151",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34151/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34151/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34151/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34151",
  "id": 1764414480,
  "node_id": "I_kwDOCFbutM5pKtQQ",
  "number": 34151,
  "title": "Missing security feature ENC()",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 18,
  "created_at": "2023-06-20T00:43:59Z",
  "updated_at": "2023-07-31T13:06:17Z",
  "closed_at": "2023-07-31T12:57:45Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nIt is a breeze to add some secuity to passwords in springboot. Please provide an easy way to use jasypt.  If not, how is Quarkus integrating bcrypt or some other system, so users can EASILY encrypt the passwords.  Do not suggest external systems like Vault. \r\n\r\nhttps://github.com/quarkusio/quarkus/issues/10855\r\n\r\n\r\n```sh\r\n# quite easy in springboot, as jasypt is integrated well\r\nset DB_URL=ENC(ATBD2N+G1GjGZ3rhpdDgSzmMvtJMpyKaqHVGIJgt10iHsZcRilfpPKPDJ25gr+jRwxlD3VIUzCX3kjFkFs/5/bNbDIpyld=)\r\nset DB_USER=ENC(82hdW8ZfRPBRz28v6eA4NTE4dRTd7yRAVp041QPPPeJlIov2I2GX)\r\nset DB_PASSWORD=ENC(xqDhKNFrAASJf69NXM54PmOOk0RhsvucuYppQOy0wpHo30JCiXQg)\r\n\r\n```\r\n\r\n\r\n### Implementation ideas\r\n\r\nA suggested developer workflow [work in progress, please revise]:\r\n\r\n1. Override environment specific props like db-passwords, apikeys etc in config/application.yml\r\n2. For sensitive config parameters in config/applicaiton.yml, use DEC(naked_password).\r\n3. During development: When you run quarkus:dev, those DEC() values will be seemlessly overwritten in those file(s) with ENC(encrypted_password)\r\n4. During bulid: When you run quarkus:build, it will create xyz-app.jar, also it will create .rundev.bat and .rundev.sh. The env specific overrides in config/application.yml will be specified as environmental variables in those run script files. This will give an idea of what environment variables you will expose in kubernetes or other cloud environments.\r\n5. For encrypting passwords in commandline, please use the command quarkus:encrypt . You may override the algorithm if required.\r\n6. For working example: Please see the secret-message property in the basic hello-world example.\r\n7. Non documented complexity: Developer do not need to know small-rye, big-rye, what algo to use for encryption etc. Quarkus will those the appropriate mechanism for securing sensitive information.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34151/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34151/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
