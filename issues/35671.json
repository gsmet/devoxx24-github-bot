{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35671",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35671/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35671/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35671/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35671",
  "id": 1876786882,
  "node_id": "I_kwDOCFbutM5v3X7C",
  "number": 35671,
  "title": "security-jpa: Wrong password passed to custom password provider",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/284",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/284",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/284/labels",
    "id": 10103752,
    "node_id": "MI_kwDOCFbutM4AmivI",
    "number": 284,
    "title": "3.2.8.Final",
    "description": "",
    "creator": {
      "login": "aloubyansky",
      "id": 323379,
      "node_id": "MDQ6VXNlcjMyMzM3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/323379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aloubyansky",
      "html_url": "https://github.com/aloubyansky",
      "followers_url": "https://api.github.com/users/aloubyansky/followers",
      "following_url": "https://api.github.com/users/aloubyansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/aloubyansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aloubyansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aloubyansky/subscriptions",
      "organizations_url": "https://api.github.com/users/aloubyansky/orgs",
      "repos_url": "https://api.github.com/users/aloubyansky/repos",
      "events_url": "https://api.github.com/users/aloubyansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aloubyansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 129,
    "state": "closed",
    "created_at": "2023-10-25T07:58:05Z",
    "updated_at": "2023-11-15T14:06:19Z",
    "due_on": "2023-11-15T08:00:00Z",
    "closed_at": "2023-11-08T14:04:29Z"
  },
  "comments": 2,
  "created_at": "2023-09-01T05:50:01Z",
  "updated_at": "2023-10-25T17:00:12Z",
  "closed_at": "2023-09-04T08:43:01Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI'm trying to get basic auth with jakarta persistence to work with a quarkus REST service. I followed the instructions on https://quarkus.io/guides/security-basic-authentication-tutorial but found a not expected behaviour with a custom password provider.\r\n\r\nHere's the relevant code:\r\n`\r\n  @Entity\r\n  @Table(name = \"pwd_table\")\r\n  @UserDefinition \r\n  public class LoginUser {\r\n\r\n    @Id\r\n    @Column(name = \"USERID\")\r\n    public Long userid;\r\n    \r\n    @Column(name = \"USERNAME\")\r\n    @Username\r\n    public String username;\r\n\r\n    @Column(name = \"PWD_CRYPT\")\r\n    @Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)\r\n    public String password;\r\n    \r\n    @Roles\r\n    public String roles;\r\n    \r\n  }\r\n`\r\n\r\n`\r\n public class CustomPasswordProvider implements PasswordProvider {\r\n    \r\n    public CustomPasswordProvider() {\r\n        \r\n    }\r\n    \r\n    @Override\r\n    public org.wildfly.security.password.Password getPassword(String pass) {\r\n        byte[] digest = MyHash.hash(pass) // simplified code, we use SCrypt here...\r\n        return SimpleDigestPassword.createRaw(\"myhash\", digest);\r\n    }\r\n}\r\n`\r\n\r\n`\r\n@GET\r\n@RolesAllowed(\"backoffice\")\r\n@Path(\"/{myId}\")\r\n@Produces(MediaType.APPLICATION_XML)\r\npublic Response getXML(@PathParam(\"myId\") String myId) {\r\n...\r\n}\r\n`\n\n### Expected behavior\n\nMy expectation is that the password provided in the header of the http request is passed to the getPassword method in the PasswordProvider class in order to hash this clear text password and compare it then to the hashed password that is stored in the database for the authentication process.\n\n### Actual behavior\n\nWhat happens is the the hashed password from the database is passed to the PasswordProvider and is hashed again there which makes no sense. The authentication fails of course (401 Unauthorized).\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\nLinux pcck1 6.4.0-3-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.4.11-1 (2023-08-17) x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"17.0.9-ea\" 2023-10-17 OpenJDK Runtime Environment (build 17.0.9-ea+4-Debian-1) OpenJDK 64-Bit Server VM (build 17.0.9-ea+4-Debian-1, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n3.1.2.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.7\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35671/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35671/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
