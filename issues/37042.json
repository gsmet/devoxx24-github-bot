{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37042",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37042/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37042/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37042/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/37042",
  "id": 1990574232,
  "node_id": "I_kwDOCFbutM52pcCY",
  "number": 37042,
  "title": "Make @DefaultBean work with @Priority",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/288",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/288",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/288/labels",
    "id": 10189838,
    "node_id": "MI_kwDOCFbutM4Am3wO",
    "number": 288,
    "title": "3.7.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 432,
    "state": "closed",
    "created_at": "2023-11-15T08:06:53Z",
    "updated_at": "2024-05-17T12:27:49Z",
    "due_on": null,
    "closed_at": "2024-01-17T13:52:08Z"
  },
  "comments": 8,
  "created_at": "2023-11-13T12:34:02Z",
  "updated_at": "2023-11-15T14:39:19Z",
  "closed_at": "2023-11-15T14:39:13Z",
  "active_lock_reason": null,
  "body": "### Description\n\nLet's say I work on a small framework which can be used by an application by depending on several different dependencies (`framework-core` or `framework-advanced`), based on the application needs.\r\n\r\nThe `framework-core` dependency contains these two classes:\r\n```\r\n@ApplicationScoped\r\n@DefaultBean\r\npublic class CoreFeature {\r\n    // Details omitted, not relevant\r\n}\r\n\r\n@ApplicationScoped\r\npublic class InternalFrameworkService {\r\n\r\n    @Inject\r\n    CoreFeature coreFeature;\r\n\r\n    // coreFeature is used somehow.\r\n}\r\n```\r\n\r\nThe `framework-advanced` dependency depends on `framework-core` and contains this class:\r\n```\r\n@ApplicationScoped\r\n@DefaultBean\r\npublic class AdvancedFeature extends CoreFeature {\r\n    // Details omitted, not relevant\r\n}\r\n```\r\nRight now, when an app depends on `framework-advanced`, Arc will complain because it cannot determine which of `CoreFeature` and `AdvancedFeature` should be injected in `InternalFrameworkService`. I would like this to work using `@Priority` on `CoreFeature` and `AdvancedFeature` so that Arc injects the one with the highest priority, just like it does with `@Alternative`.\r\n\r\nWhy do I need `@DefaultBean`? Because I want the users of the framework to be able to do this:\r\n```\r\n@ApplicationScoped\r\npublic class UserCustomizedCoreFeature extends CoreFeature {\r\n    // Details omitted, not relevant\r\n}\r\n```\r\nOr that:\r\n```\r\n@ApplicationScoped\r\npublic class UserCustomizedAdvancedFeature extends AdvancedFeature {\r\n    // Details omitted, not relevant\r\n}\r\n```\r\nAnd override anything that comes from the framework with whatever they need to implement.\r\n\r\nThis whole thing can work without `@Priority` working with `@DefaultBean`, but the users of the framework have to use `@Alternative` alongside with `@Priority` on their class, which is something I'd like to avoid.\n\n### Implementation ideas\n\nMake `@DefaultBean` and `@Priority` work similarly to `@Alternative` and `@Priority`.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37042/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37042/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
