{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34632",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34632/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34632/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34632/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34632",
  "id": 1795582070,
  "node_id": "I_kwDOCFbutM5rBmh2",
  "number": 34632,
  "title": "Resteasy Reactive: Server becomes unresponsive due to race condition on ContainerResponseContext.getEntityStream()",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/261",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/261",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/261/labels",
    "id": 9620417,
    "node_id": "MI_kwDOCFbutM4AksvB",
    "number": 261,
    "title": "3.2.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 137,
    "state": "closed",
    "created_at": "2023-07-05T15:27:44Z",
    "updated_at": "2023-08-07T13:21:27Z",
    "due_on": null,
    "closed_at": "2023-07-19T13:26:50Z"
  },
  "comments": 10,
  "created_at": "2023-07-09T21:58:25Z",
  "updated_at": "2023-07-18T16:23:59Z",
  "closed_at": "2023-07-18T09:03:45Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWe have had unexplained intermittent timeouts occurring on various Rest services and eventually managed to reproduce it under load and isolate the cause.\r\n\r\nI've added a reproducer which shows that under high throughput you can create a race condition where a call to getEntityStream in a JAX-RS Container response filter for a response with no body (returns a 204) will eventually cause all current TCP connections to the server to become unresponsive. Clients need to terminate and reconnect in order to send requests. All in-progress requests or new requests on the open TCP connections will result in no HTTP response from the server. Instead clients will just receive an ACK to the request.\r\n\r\n### Expected behavior\r\n\r\nThe entity stream call should return an empty stream all the time and not cause the server to stop responding.\r\n\r\n### Actual behavior\r\n\r\nIn my reproducer, after a minute or two one will see the server stops processing requests.\r\n\r\n### How to Reproduce?\r\n\r\ngit clone https://github.com/bcluap/quarkus-examples.git\r\ncd quarkus-examples/resteasy-reactive\r\nmvn clean install\r\njava -jar ./target/quarkus-app/quarkus-run.jar\r\n\r\nThen run a load test like this:\r\nwrk --timeout=10s -d600 -t1 -c1  'http://localhost:8000/test'\r\n\r\nThe server will log \"HERE\" over and over and eventually stop. The load test client experiences timeouts for all future requests. Only fresh TCP connections get any response from the server.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nLinux paul-xps 5.19.0-45-generic #46~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Wed Jun 7 15:06:04 UTC 20 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"20.0.1\" 2023-04-18 OpenJDK Runtime Environment Temurin-20.0.1+9 (build 20.0.1+9) OpenJDK 64-Bit Server VM Temurin-20.0.1+9 (build 20.0.1+9, mixed mode, sharing)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\nNA\r\n\r\n### Quarkus version or git rev\r\n\r\n3.1.3.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nmvn 3.9.3\r\n\r\n### Additional information\r\n\r\nCan reproduce on my laptop and AWS ECS. The lock up occurs normally within a minute of the load test kicking off. Commenting out the responseContext.getEntityStream(); in the filter prevents the issue.\r\n\r\nNote this only happens when there is no response. A thread dump during the lock up shows that the server is not doing anything and not locking on anything. Its as though the event loop has lost all knowledge of the TCP connections.\r\n\r\nIf the jax-rs method returns void or returns a null String then the same behaviour is seen. It does not happen if data is returned in the body.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34632/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34632/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
