{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28627",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28627/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28627/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28627/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/28627",
  "id": 1411082595,
  "node_id": "I_kwDOCFbutM5UG2lj",
  "number": 28627,
  "title": "Using raw `RestResponse` return type has unexpected consequences",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/212",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/212",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/212/labels",
    "id": 8574708,
    "node_id": "MI_kwDOCFbutM4Agtb0",
    "number": 212,
    "title": "2.13.4.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 87,
    "state": "closed",
    "created_at": "2022-10-24T14:12:19Z",
    "updated_at": "2023-01-25T09:02:55Z",
    "due_on": null,
    "closed_at": "2022-11-07T12:39:34Z"
  },
  "comments": 9,
  "created_at": "2022-10-17T07:50:19Z",
  "updated_at": "2022-10-31T15:22:34Z",
  "closed_at": "2022-10-19T06:17:55Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nSpecifying the raw `RestResponse` type as an endpoint's return type causes Quarkus to configure the `ServerStringMessageBodyHandler` for this endpoint. This will most often not be what the user wants.\r\n\r\nIn the following example, where the endpoint returns `multipart/form-data` responses, but has the raw `RestResponse` type as its return type, the POJO entity gets serialized using its `toString()` method rather than using `MultipartMessageBodyWriter`:\r\n\r\n```java\r\n    @GET\r\n    @Produces(MediaType.MULTIPART_FORM_DATA)\r\n    @Path(\"file2\")\r\n    public RestResponse getFile2() {\r\n        return RestResponse.ok(new DownloadFormData(\"test.txt\", new File(\"test.txt\")));\r\n    }\r\n```\r\n\r\nThe use case for returning `RestResponse` is to allow dynamically setting response headers, as [documented](https://quarkus.io/guides/resteasy-reactive#manually-setting-the-response). Of course the return type should be specified with a generic type parameter.\r\n\r\n### Expected behavior\r\n\r\nSince `RestResponse` is the counterpart of the JAX-RS `Response` type, which isn't generic, I think it would make sense if Quarkus would log a build-time usage warning, whenever an endpoint returns the raw `RestResponse` type.\r\n\r\n### Actual behavior\r\n\r\nCurrently there is no warning and Quarkus will \"silently\" configure the `ServerStringMessageBodyHandler`.\r\n\r\n### How to Reproduce?\r\n\r\nCreate an endpoint with `RestResponse` as the return type.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.13.2.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28627/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28627/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
