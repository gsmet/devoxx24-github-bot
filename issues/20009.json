{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20009",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20009/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20009/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20009/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20009",
  "id": 991423710,
  "node_id": "MDU6SXNzdWU5OTE0MjM3MTA=",
  "number": 20009,
  "title": "Quarkus Native Executable build (using Docker) fails",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2550509852,
      "node_id": "MDU6TGFiZWwyNTUwNTA5ODUy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/amazon-services",
      "name": "area/amazon-services",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2021-09-08T18:41:55Z",
  "updated_at": "2021-12-31T08:13:07Z",
  "closed_at": "2021-12-30T11:04:26Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI am trying to build a Quarkus native executable using docker using the following command **`mvn clean package \"-Pnative\" \"-Dquarkus.native.container-build=true\" \"-Dquarkus.native.container-runtime=docker\"`**\r\n\r\nQuarkus version: 2.2.2.Final,\r\nMaven version : 3.8.1,\r\nJava version: 11\r\n\r\n\r\nHere is my **pom.xml**:\r\n\r\n`<?xml version=\"1.0\"?>\r\n<project\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"\r\n\txmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<groupId>com.amitkumar</groupId>\r\n\t<artifactId>sample-quarkus-project</artifactId>\r\n\t<version>1.0.0-SNAPSHOT</version>\r\n\t<properties>\r\n\t\t<compiler-plugin.version>3.8.1</compiler-plugin.version>\r\n\t\t<maven.compiler.parameters>true</maven.compiler.parameters>\r\n\t\t<maven.compiler.source>11</maven.compiler.source>\r\n\t\t<maven.compiler.target>11</maven.compiler.target>\r\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n\t\t<quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\r\n\t\t<quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\r\n\t\t<quarkus.platform.version>2.2.2.Final</quarkus.platform.version>\r\n\t\t<surefire-plugin.version>3.0.0-M5</surefire-plugin.version>\r\n\t</properties>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>${quarkus.platform.group-id}</groupId>\r\n\t\t\t\t<artifactId>${quarkus.platform.artifact-id}</artifactId>\r\n\t\t\t\t<version>${quarkus.platform.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-config-yaml</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.amazonaws</groupId>\r\n\t\t\t<artifactId>aws-java-sdk-dynamodb</artifactId>\r\n\t\t\t<version>1.11.1022</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-hibernate-validator</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-amazon-lambda-rest</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-resteasy</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-resteasy-jackson</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-arc</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<version>1.18.20</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-junit5</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.rest-assured</groupId>\r\n\t\t\t<artifactId>rest-assured</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.mockito</groupId>\r\n\t\t\t<artifactId>mockito-core</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.mockito</groupId>\r\n\t\t\t<artifactId>mockito-junit-jupiter</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-jacoco</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>${quarkus.platform.group-id}</groupId>\r\n\t\t\t\t<artifactId>quarkus-maven-plugin</artifactId>\r\n\t\t\t\t<version>${quarkus.platform.version}</version>\r\n\t\t\t\t<extensions>true</extensions>\r\n\t\t\t\t<executions>\r\n\t\t\t\t\t<execution>\r\n\t\t\t\t\t\t<goals>\r\n\t\t\t\t\t\t\t<goal>build</goal>\r\n\t\t\t\t\t\t\t<goal>generate-code</goal>\r\n\t\t\t\t\t\t\t<goal>generate-code-tests</goal>\r\n\t\t\t\t\t\t</goals>\r\n\t\t\t\t\t</execution>\r\n\t\t\t\t</executions>\r\n\t\t\t</plugin>\r\n\t\t\t<plugin>\r\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n\t\t\t\t<version>${compiler-plugin.version}</version>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<parameters>${maven.compiler.parameters}</parameters>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t\t<plugin>\r\n\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\r\n\t\t\t\t<version>${surefire-plugin.version}</version>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<systemPropertyVariables>\r\n\t\t\t\t\t\t<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\r\n\t\t\t\t\t\t<maven.home>${maven.home}</maven.home>\r\n\t\t\t\t\t</systemPropertyVariables>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\t<profiles>\r\n\t\t<profile>\r\n\t\t\t<id>native</id>\r\n\t\t\t<activation>\r\n\t\t\t\t<property>\r\n\t\t\t\t\t<name>native</name>\r\n\t\t\t\t</property>\r\n\t\t\t</activation>\r\n\t\t\t<build>\r\n\t\t\t\t<plugins>\r\n\t\t\t\t\t<plugin>\r\n\t\t\t\t\t\t<artifactId>maven-failsafe-plugin</artifactId>\r\n\t\t\t\t\t\t<version>${surefire-plugin.version}</version>\r\n\t\t\t\t\t\t<executions>\r\n\t\t\t\t\t\t\t<execution>\r\n\t\t\t\t\t\t\t\t<goals>\r\n\t\t\t\t\t\t\t\t\t<goal>integration-test</goal>\r\n\t\t\t\t\t\t\t\t\t<goal>verify</goal>\r\n\t\t\t\t\t\t\t\t</goals>\r\n\t\t\t\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t\t\t\t<systemPropertyVariables>\r\n\t\t\t\t\t\t\t\t\t\t<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\r\n\t\t\t\t\t\t\t\t\t\t<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\r\n\t\t\t\t\t\t\t\t\t\t<maven.home>${maven.home}</maven.home>\r\n\t\t\t\t\t\t\t\t\t</systemPropertyVariables>\r\n\t\t\t\t\t\t\t\t</configuration>\r\n\t\t\t\t\t\t\t</execution>\r\n\t\t\t\t\t\t</executions>\r\n\t\t\t\t\t</plugin>\r\n\t\t\t\t</plugins>\r\n\t\t\t</build>\r\n\t\t\t<properties>\r\n\t\t\t\t<quarkus.package.type>native</quarkus.package.type>\r\n\t\t\t</properties>\r\n\t\t</profile>\r\n\t</profiles>\r\n</project>\r\n`\r\n\r\n\r\nHere is my DynamoDB configuration class (I am using DynamoDBMapper):\r\n\r\n\r\n`import javax.enterprise.context.ApplicationScoped;\r\nimport javax.enterprise.inject.Produces;\r\n\r\nimport com.amazonaws.services.dynamodbv2.AmazonDynamoDB;\r\nimport com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder;\r\nimport com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;\r\nimport com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig;\r\nimport com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig.TableNameOverride;\r\nimport static com.delta.pctm.constants.DatabaseConstants.*;\r\n\r\nimport io.quarkus.runtime.annotations.RegisterForReflection;\r\n\r\n\r\n@ApplicationScoped\r\n@RegisterForReflection\r\npublic class DynamoDbConfiguration {\r\n\t\r\n\t\r\n\t@Produces\r\n\tpublic DynamoDBMapper dynamoDBMapper(AmazonDynamoDB dynamoDB, DynamoDBMapperConfig dynamoDBMapperConfig) {\r\n\t\treturn new DynamoDBMapper(dynamoDB, dynamoDBMapperConfig);\r\n\t}\r\n\r\n\t\r\n\t@Produces\r\n\tpublic AmazonDynamoDB dynamoDB() {\r\n\t\treturn AmazonDynamoDBClientBuilder.defaultClient();\r\n\t}\r\n\t\r\n\t@Produces\r\n\tpublic DynamoDBMapperConfig dynamoDBMapperConfig() {\r\n        return DynamoDBMapperConfig.builder().withTableNameOverride(TableNameOverride.withTableNameReplacement(tableName)).build();\r\n    }\r\n\t\r\n}`\r\n\r\n### Expected behavior\r\n\r\nExpecting to get a native image successful build.\r\n\r\nI have not installed GraalVM locally. Instead I am using Docker to build a linux executable.\r\n\r\n### Actual behavior\r\n\r\nGetting below error while building a native linux executable using docker:\r\n\r\n`Error: Unsupported features in 3 methods\r\nDetailed message:\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected.  To see how this object got instantiated use --trace-object-instantiation=java.util.Random. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$EqualJitterBackoffStrategy.random of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$EqualJitterBackoffStrategy@320bf4eb reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy.equalJitterBackoffStrategy of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy@10cda776 reached by\r\n        reading field com.amazonaws.retry.RetryPolicy.backoffStrategy of\r\n                constant com.amazonaws.retry.RetryPolicy@50cfb88 reached by\r\n        scanning method com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:155)\r\nCall path from entry point to com.amazonaws.ClientConfiguration.<init>(ClientConfiguration):\r\n        at com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:378)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.resolveClientConfiguration(AwsClientBuilder.java:169)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.access$000(AwsClientBuilder.java:54)\r\n        at com.amazonaws.client.builder.AwsClientBuilder$SyncBuilderParams.<init>(AwsClientBuilder.java:505)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.getSyncClientParams(AwsClientBuilder.java:441)\r\n        at com.amazonaws.client.builder.AwsSyncClientBuilder.build(AwsSyncClientBuilder.java:46)\r\n        at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder.defaultClient(AmazonDynamoDBClientBuilder.java:53)\r\n        at com.delta.pctm.config.DynamoDbConfiguration.dynamoDB(DynamoDbConfiguration.java:32)\r\n        at com.oracle.svm.reflect.DynamoDbConfiguration_dynamoDB_a433d4473fc52df3b208beaf815f0b120e008850_94.invoke(Unknown Source)\r\n        at java.lang.reflect.Method.invoke(Method.java:566)\r\n        at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)\r\n        at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:216)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:169)\r\n        at com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:290)\r\n        at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected.  To see how this object got instantiated use --trace-object-instantiation=java.util.Random. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$FullJitterBackoffStrategy.random of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$FullJitterBackoffStrategy@4abe322b reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy.fullJitterBackoffStrategy of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy@10cda776 reached by\r\n        reading field com.amazonaws.retry.RetryPolicy.backoffStrategy of\r\n                constant com.amazonaws.retry.RetryPolicy@50cfb88 reached by\r\n        scanning method com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:155)\r\nCall path from entry point to com.amazonaws.ClientConfiguration.<init>(ClientConfiguration):\r\n        at com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:378)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.resolveClientConfiguration(AwsClientBuilder.java:169)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.access$000(AwsClientBuilder.java:54)\r\n        at com.amazonaws.client.builder.AwsClientBuilder$SyncBuilderParams.<init>(AwsClientBuilder.java:505)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.getSyncClientParams(AwsClientBuilder.java:441)\r\n        at com.amazonaws.client.builder.AwsSyncClientBuilder.build(AwsSyncClientBuilder.java:46)\r\n        at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder.defaultClient(AmazonDynamoDBClientBuilder.java:53)\r\n        at com.delta.pctm.config.DynamoDbConfiguration.dynamoDB(DynamoDbConfiguration.java:32)\r\n        at com.oracle.svm.reflect.DynamoDbConfiguration_dynamoDB_a433d4473fc52df3b208beaf815f0b120e008850_94.invoke(Unknown Source)\r\n        at java.lang.reflect.Method.invoke(Method.java:566)\r\n        at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)\r\n        at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:216)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:169)\r\n        at com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:290)\r\n        at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\nError: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.joda.time.Interval.parseWithOffset(java.lang.String). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.\r\nTrace:\r\n        at parsing com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer._fromString(IntervalDeserializer.java:76)\r\nCall path from entry point to com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer._fromString(JsonParser, DeserializationContext, String):\r\n        at com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer._fromString(IntervalDeserializer.java:54)\r\n        at com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer.deserialize(IntervalDeserializer.java:38)\r\n        at com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer.deserialize(IntervalDeserializer.java:15)\r\n        at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:322)\r\n        at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2033)\r\n        at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1426)\r\n        at io.quarkus.amazon.lambda.runtime.JacksonInputReader.readValue(JacksonInputReader.java:17)\r\n        at io.quarkus.amazon.lambda.runtime.AbstractLambdaPollLoop$1.run(AbstractLambdaPollLoop.java:78)\r\n        at java.lang.Thread.run(Thread.java:829)\r\n        at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:567)\r\n        at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:192)\r\n        at com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\n\r\ncom.oracle.svm.core.util.UserError$UserException: Unsupported features in 3 methods\r\nDetailed message:\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected.  To see how this object got instantiated use --trace-object-instantiation=java.util.Random. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$EqualJitterBackoffStrategy.random of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$EqualJitterBackoffStrategy@320bf4eb reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy.equalJitterBackoffStrategy of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy@10cda776 reached by\r\n        reading field com.amazonaws.retry.RetryPolicy.backoffStrategy of\r\n                constant com.amazonaws.retry.RetryPolicy@50cfb88 reached by\r\n        scanning method com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:155)\r\nCall path from entry point to com.amazonaws.ClientConfiguration.<init>(ClientConfiguration):\r\n        at com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:378)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.resolveClientConfiguration(AwsClientBuilder.java:169)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.access$000(AwsClientBuilder.java:54)\r\n        at com.amazonaws.client.builder.AwsClientBuilder$SyncBuilderParams.<init>(AwsClientBuilder.java:505)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.getSyncClientParams(AwsClientBuilder.java:441)\r\n        at com.amazonaws.client.builder.AwsSyncClientBuilder.build(AwsSyncClientBuilder.java:46)\r\n        at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder.defaultClient(AmazonDynamoDBClientBuilder.java:53)\r\n        at com.delta.pctm.config.DynamoDbConfiguration.dynamoDB(DynamoDbConfiguration.java:32)\r\n        at com.oracle.svm.reflect.DynamoDbConfiguration_dynamoDB_a433d4473fc52df3b208beaf815f0b120e008850_94.invoke(Unknown Source)\r\n        at java.lang.reflect.Method.invoke(Method.java:566)\r\n        at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)\r\n        at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:216)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:169)\r\n        at com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:290)\r\n        at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected.  To see how this object got instantiated use --trace-object-instantiation=java.util.Random. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$FullJitterBackoffStrategy.random of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$FullJitterBackoffStrategy@4abe322b reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy.fullJitterBackoffStrategy of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy@10cda776 reached by\r\n        reading field com.amazonaws.retry.RetryPolicy.backoffStrategy of\r\n                constant com.amazonaws.retry.RetryPolicy@50cfb88 reached by\r\n        scanning method com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:155)\r\nCall path from entry point to com.amazonaws.ClientConfiguration.<init>(ClientConfiguration):\r\n        at com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:378)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.resolveClientConfiguration(AwsClientBuilder.java:169)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.access$000(AwsClientBuilder.java:54)\r\n        at com.amazonaws.client.builder.AwsClientBuilder$SyncBuilderParams.<init>(AwsClientBuilder.java:505)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.getSyncClientParams(AwsClientBuilder.java:441)\r\n        at com.amazonaws.client.builder.AwsSyncClientBuilder.build(AwsSyncClientBuilder.java:46)\r\n        at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder.defaultClient(AmazonDynamoDBClientBuilder.java:53)\r\n        at com.delta.pctm.config.DynamoDbConfiguration.dynamoDB(DynamoDbConfiguration.java:32)\r\n        at com.oracle.svm.reflect.DynamoDbConfiguration_dynamoDB_a433d4473fc52df3b208beaf815f0b120e008850_94.invoke(Unknown Source)\r\n        at java.lang.reflect.Method.invoke(Method.java:566)\r\n        at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)\r\n        at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:216)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:169)\r\n        at com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:290)\r\n        at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\nError: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.joda.time.Interval.parseWithOffset(java.lang.String). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.\r\nTrace:\r\n        at parsing com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer._fromString(IntervalDeserializer.java:76)\r\nCall path from entry point to com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer._fromString(JsonParser, DeserializationContext, String):\r\n        at com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer._fromString(IntervalDeserializer.java:54)\r\n        at com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer.deserialize(IntervalDeserializer.java:38)\r\n        at com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer.deserialize(IntervalDeserializer.java:15)\r\n        at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:322)\r\n        at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2033)\r\n        at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1426)\r\n        at io.quarkus.amazon.lambda.runtime.JacksonInputReader.readValue(JacksonInputReader.java:17)\r\n        at io.quarkus.amazon.lambda.runtime.AbstractLambdaPollLoop$1.run(AbstractLambdaPollLoop.java:78)\r\n        at java.lang.Thread.run(Thread.java:829)\r\n        at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:567)\r\n        at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:192)\r\n        at com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\n\r\n        at com.oracle.svm.core.util.UserError.abort(UserError.java:82)\r\n        at com.oracle.svm.hosted.FallbackFeature.reportAsFallback(FallbackFeature.java:233)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:764)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:532)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:491)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:380)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:543)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:119)\r\n        at com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus.main(NativeImageGeneratorRunner.java:573)\r\nCaused by: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Unsupported features in 3 methods\r\nDetailed message:\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected.  To see how this object got instantiated use --trace-object-instantiation=java.util.Random. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$EqualJitterBackoffStrategy.random of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$EqualJitterBackoffStrategy@320bf4eb reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy.equalJitterBackoffStrategy of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy@10cda776 reached by\r\n        reading field com.amazonaws.retry.RetryPolicy.backoffStrategy of\r\n                constant com.amazonaws.retry.RetryPolicy@50cfb88 reached by\r\n        scanning method com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:155)\r\nCall path from entry point to com.amazonaws.ClientConfiguration.<init>(ClientConfiguration):\r\n        at com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:378)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.resolveClientConfiguration(AwsClientBuilder.java:169)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.access$000(AwsClientBuilder.java:54)\r\n        at com.amazonaws.client.builder.AwsClientBuilder$SyncBuilderParams.<init>(AwsClientBuilder.java:505)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.getSyncClientParams(AwsClientBuilder.java:441)\r\n        at com.amazonaws.client.builder.AwsSyncClientBuilder.build(AwsSyncClientBuilder.java:46)\r\n        at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder.defaultClient(AmazonDynamoDBClientBuilder.java:53)\r\n        at com.delta.pctm.config.DynamoDbConfiguration.dynamoDB(DynamoDbConfiguration.java:32)\r\n        at com.oracle.svm.reflect.DynamoDbConfiguration_dynamoDB_a433d4473fc52df3b208beaf815f0b120e008850_94.invoke(Unknown Source)\r\n        at java.lang.reflect.Method.invoke(Method.java:566)\r\n        at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)\r\n        at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:216)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:169)\r\n        at com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:290)\r\n        at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected.  To see how this object got instantiated use --trace-object-instantiation=java.util.Random. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$FullJitterBackoffStrategy.random of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$FullJitterBackoffStrategy@4abe322b reached by\r\n        reading field com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy.fullJitterBackoffStrategy of\r\n                constant com.amazonaws.retry.PredefinedBackoffStrategies$SDKDefaultBackoffStrategy@10cda776 reached by\r\n        reading field com.amazonaws.retry.RetryPolicy.backoffStrategy of\r\n                constant com.amazonaws.retry.RetryPolicy@50cfb88 reached by\r\n        scanning method com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:155)\r\nCall path from entry point to com.amazonaws.ClientConfiguration.<init>(ClientConfiguration):\r\n        at com.amazonaws.ClientConfiguration.<init>(ClientConfiguration.java:378)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.resolveClientConfiguration(AwsClientBuilder.java:169)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.access$000(AwsClientBuilder.java:54)\r\n        at com.amazonaws.client.builder.AwsClientBuilder$SyncBuilderParams.<init>(AwsClientBuilder.java:505)\r\n        at com.amazonaws.client.builder.AwsClientBuilder.getSyncClientParams(AwsClientBuilder.java:441)\r\n        at com.amazonaws.client.builder.AwsSyncClientBuilder.build(AwsSyncClientBuilder.java:46)\r\n        at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder.defaultClient(AmazonDynamoDBClientBuilder.java:53)\r\n        at com.delta.pctm.config.DynamoDbConfiguration.dynamoDB(DynamoDbConfiguration.java:32)\r\n        at com.oracle.svm.reflect.DynamoDbConfiguration_dynamoDB_a433d4473fc52df3b208beaf815f0b120e008850_94.invoke(Unknown Source)\r\n        at java.lang.reflect.Method.invoke(Method.java:566)\r\n        at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)\r\n        at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:216)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:169)\r\n        at com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:290)\r\n        at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\nError: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.joda.time.Interval.parseWithOffset(java.lang.String). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.\r\nTrace:\r\n        at parsing com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer._fromString(IntervalDeserializer.java:76)\r\nCall path from entry point to com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer._fromString(JsonParser, DeserializationContext, String):\r\n        at com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer._fromString(IntervalDeserializer.java:54)\r\n        at com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer.deserialize(IntervalDeserializer.java:38)\r\n        at com.fasterxml.jackson.datatype.joda.deser.IntervalDeserializer.deserialize(IntervalDeserializer.java:15)\r\n        at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:322)\r\n        at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2033)\r\n        at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1426)\r\n        at io.quarkus.amazon.lambda.runtime.JacksonInputReader.readValue(JacksonInputReader.java:17)\r\n        at io.quarkus.amazon.lambda.runtime.AbstractLambdaPollLoop$1.run(AbstractLambdaPollLoop.java:78)\r\n        at java.lang.Thread.run(Thread.java:829)\r\n        at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:567)\r\n        at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:192)\r\n        at com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)\r\n\r\n        at com.oracle.graal.pointsto.constraints.UnsupportedFeatures.report(UnsupportedFeatures.java:129)\r\n        at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:761)\r\n        ... 6 more`\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\njava 11.0.8 2020-07-14 LTS, Java(TM) SE Runtime Environment 18.9 (build 11.0.8+10-LTS), Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.8+10-LTS, mixed mode)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\nquay.io/quarkus/ubi-quarkus-native-image:21.2-java11\r\n\r\n### Quarkus version or git rev\r\n\r\n2.2.2.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.2 (ea98e05a04480131370aa0c110b8c54cf726c06f)\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20009/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20009/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
