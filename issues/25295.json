{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25295",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25295/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25295/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25295/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25295",
  "id": 1222663167,
  "node_id": "I_kwDOCFbutM5I4Fv_",
  "number": 25295,
  "title": "RESTEasy adds wrong charset to response content type",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/187",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/187",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/187/labels",
    "id": 7973847,
    "node_id": "MI_kwDOCFbutM4AeavX",
    "number": 187,
    "title": "2.9.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 59,
    "state": "closed",
    "created_at": "2022-05-12T16:31:43Z",
    "updated_at": "2023-02-21T15:11:20Z",
    "due_on": null,
    "closed_at": "2022-05-17T14:00:39Z"
  },
  "comments": 7,
  "created_at": "2022-05-02T09:15:47Z",
  "updated_at": "2022-06-30T13:57:18Z",
  "closed_at": "2022-05-03T08:55:49Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nConsider the following code:\r\n\r\n```java\r\n@Path(\"/\")\r\npublic class CharsetDuplicated {\r\n\t@Provider\r\n\t@Produces(MediaType.APPLICATION_XML)\r\n\tpublic static class GenericXMLSerializer implements MessageBodyWriter<Object> {\r\n\t    @Override\r\n\t    public long getSize(final Object value, final Class<?> type, final Type genericType,\r\n\t        final Annotation [] annotations, final MediaType mediaType) {\r\n\t        return -1;\r\n\t    }\r\n\r\n\t    @Override\r\n\t    public boolean isWriteable(final Class<?> type, final Type genericType, final Annotation [] annotations,\r\n\t        final MediaType mediaType) {\r\n\t        return true;\r\n\t    }\r\n\r\n\t    @Override\r\n\t    public void writeTo(final Object value, final Class<?> type, final Type genericType,\r\n\t        final Annotation[] annotations, final MediaType mediaType,\r\n\t        final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)\r\n\t        throws IOException {\r\n\t        \r\n    \t\thttpHeaders.add(HttpHeaders.CONTENT_TYPE, mediaType + \";charset=ISO-8859-1\");\r\n\t\tentityStream.write(\"<?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\"?><foo>äöü</foo>\"\r\n\t\t\t\t\t.getBytes(StandardCharsets.ISO_8859_1));\r\n\t    }\r\n\t}\r\n\r\n    @POST\r\n    @Path(\"charset-duplicated\")\r\n    @Consumes(MediaType.APPLICATION_JSON)\r\n    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})\r\n\tpublic Response consumeJson() {\r\n    \tvar map = Map.of(\"key\", \"value\");\r\n\t    return Response.ok(map).build();\r\n\t}\r\n\r\n    @POST\r\n    @Path(\"charset-duplicated\")\r\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\r\n    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})\r\n\tpublic Response consumeMultipart() {\r\n    \tvar map = Map.of(\"key\", \"value\");\r\n\t    return Response.ok(map).build();\r\n\t}\r\n}\r\n```\r\n\r\nIn contrast to #25263 this time a media type is passed into the message body writer, but it contains `charset=UTF-8`. Which can be wrong if the message body writer creates output using a different charset. If the message body writer sets the charset explicitly the content type contains two conflicting charset specifications.\r\n\r\n### Expected behavior\r\n\r\nThe media type passed into the message body writer must not contain a charset because only the writer can tell what charset it produces.\r\n\r\n### Actual behavior\r\n\r\nA UTF-8 charset is incorrectly assumed for every response.\r\n\r\n### How to Reproduce?\r\n\r\nRun `quarkus.bugs.CharsetDuplicatedTest` from https://github.com/sithmein/bugs-in-quarkus.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n17\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.8.2.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25295/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25295/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
