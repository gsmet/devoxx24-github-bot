{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29953",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29953/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29953/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29953/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29953",
  "id": 1502801334,
  "node_id": "I_kwDOCFbutM5Zku22",
  "number": 29953,
  "title": "hibernate reactive report cast error when the column contains json field",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1273026509,
      "node_id": "MDU6TGFiZWwxMjczMDI2NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/persistence",
      "name": "area/persistence",
      "color": "FBCA04",
      "default": false,
      "description": "OBSOLETE, DO NOT USE"
    },
    {
      "id": 2122256208,
      "node_id": "MDU6TGFiZWwyMTIyMjU2MjA4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-reactive",
      "name": "area/hibernate-reactive",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 28,
  "created_at": "2022-12-19T11:43:33Z",
  "updated_at": "2022-12-20T10:35:33Z",
  "closed_at": "2022-12-20T10:23:25Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nthe code was rewrite from hibernate jpa to hibernate reactive, the jpa works, here is my table definition\r\n```java\r\n@Embeddable\r\npublic class DingCorpUserKey implements Serializable {\r\n    @Column(name = \"corp_id\")\r\n    private String corpId;\r\n    @Column(name = \"union_id\")\r\n    private String unionId;\r\n\r\n    public DingCorpUserKey() {\r\n    }\r\n\r\n    public DingCorpUserKey(String corpId, String unionId) {\r\n        this.corpId = corpId;\r\n        this.unionId = unionId;\r\n    }\r\n\r\n    public String getCorpId() {\r\n        return corpId;\r\n    }\r\n\r\n    public void setCorpId(String corpId) {\r\n        this.corpId = corpId;\r\n    }\r\n\r\n    public String getUnionId() {\r\n        return unionId;\r\n    }\r\n\r\n    public void setUnionId(String unionId) {\r\n        this.unionId = unionId;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (o == null) return false;\r\n        if (this == o) return true;\r\n        if (o instanceof DingCorpUserKey key) {\r\n            return Objects.equals(corpId, key.corpId) && Objects.equals(unionId, key.unionId);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(corpId, unionId);\r\n    }\r\n}\r\n\r\n\r\n@Entity\r\n@Table(name = \"ding_corp_user\")\r\npublic class DingCorpUser {\r\n    @EmbeddedId\r\n    private DingCorpUserKey dingCorpUserKey;\r\n    @Column(name = \"user_id\")\r\n    private String userId;\r\n    @Column(name = \"manager_userid\")\r\n    private String managerUserId;\r\n    @Column(name = \"hide_mobile\")\r\n    private boolean hideMobile;\r\n    @Column(name = \"job_number\")\r\n    private String jobNumber;\r\n    @Column(name = \"title\")\r\n    private String title;\r\n    @Column(name = \"exclusive_account\")\r\n    private boolean exclusiveAccount;\r\n    @Convert(converter = IntListConverter.class)\r\n    @Column(name = \"dept_id_list\")\r\n    private List<Integer> deptIdList;\r\n    @Convert(converter = DingDeptOrderListConverter.class)\r\n    @Column(name = \"dept_order\")\r\n    private List<DingDeptOrder> deptOrders;\r\n    @Column(name = \"active\")\r\n    private boolean active;\r\n    @Column(name = \"senior\")\r\n    private boolean senior;\r\n    @Column(name = \"admin\")\r\n    private boolean admin;\r\n    @Column(name = \"boss\")\r\n    private boolean boss;\r\n    @Column(name = \"type\")\r\n    private int type;\r\n    @Convert(converter = DingDeptLeaderListConverter.class)\r\n    @Column(name = \"dept_leader\")\r\n    private List<DingDeptLeader> deptLeaders;\r\n    @Convert(converter = DingUserRoleListConverter.class)\r\n    @Column(name = \"roles\")\r\n    private List<DingUserRole> roles;\r\n\r\n    public DingCorpUser() {\r\n    }\r\n\r\n    public DingCorpUser(DingCorpUserKey dingCorpUserKey, String userId, String managerUserId, boolean hideMobile, String jobNumber, String title, boolean exclusiveAccount, List<Integer> deptIdList, List<DingDeptOrder> deptOrders, boolean active, boolean senior, boolean admin, boolean boss, int type, List<DingDeptLeader> deptLeaders, List<DingUserRole> roles) {\r\n        this.dingCorpUserKey = dingCorpUserKey;\r\n        this.userId = userId;\r\n        this.managerUserId = managerUserId;\r\n        this.hideMobile = hideMobile;\r\n        this.jobNumber = jobNumber;\r\n        this.title = title;\r\n        this.exclusiveAccount = exclusiveAccount;\r\n        this.deptIdList = deptIdList;\r\n        this.deptOrders = deptOrders;\r\n        this.active = active;\r\n        this.senior = senior;\r\n        this.admin = admin;\r\n        this.boss = boss;\r\n        this.type = type;\r\n        this.deptLeaders = deptLeaders;\r\n        this.roles = roles;\r\n    }\r\n\r\n    public DingCorpUserKey getDingCorpUserKey() {\r\n        return dingCorpUserKey;\r\n    }\r\n\r\n    public void setDingCorpUserKey(DingCorpUserKey dingCorpUserKey) {\r\n        this.dingCorpUserKey = dingCorpUserKey;\r\n    }\r\n\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    public void setUserId(String userId) {\r\n        this.userId = userId;\r\n    }\r\n\r\n    public String getManagerUserId() {\r\n        return managerUserId;\r\n    }\r\n\r\n    public void setManagerUserId(String managerUserId) {\r\n        this.managerUserId = managerUserId;\r\n    }\r\n\r\n    public boolean isHideMobile() {\r\n        return hideMobile;\r\n    }\r\n\r\n    public void setHideMobile(boolean hideMobile) {\r\n        this.hideMobile = hideMobile;\r\n    }\r\n\r\n    public String getJobNumber() {\r\n        return jobNumber;\r\n    }\r\n\r\n    public void setJobNumber(String jobNumber) {\r\n        this.jobNumber = jobNumber;\r\n    }\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n\r\n    public boolean isExclusiveAccount() {\r\n        return exclusiveAccount;\r\n    }\r\n\r\n    public void setExclusiveAccount(boolean exclusiveAccount) {\r\n        this.exclusiveAccount = exclusiveAccount;\r\n    }\r\n\r\n    public List<Integer> getDeptIdList() {\r\n        return deptIdList;\r\n    }\r\n\r\n    public void setDeptIdList(List<Integer> deptIdList) {\r\n        this.deptIdList = deptIdList;\r\n    }\r\n\r\n    public List<DingDeptOrder> getDeptOrders() {\r\n        return deptOrders;\r\n    }\r\n\r\n    public void setDeptOrders(List<DingDeptOrder> deptOrders) {\r\n        this.deptOrders = deptOrders;\r\n    }\r\n\r\n    public boolean isActive() {\r\n        return active;\r\n    }\r\n\r\n    public void setActive(boolean active) {\r\n        this.active = active;\r\n    }\r\n\r\n    public boolean isSenior() {\r\n        return senior;\r\n    }\r\n\r\n    public void setSenior(boolean senior) {\r\n        this.senior = senior;\r\n    }\r\n\r\n    public boolean isAdmin() {\r\n        return admin;\r\n    }\r\n\r\n    public void setAdmin(boolean admin) {\r\n        this.admin = admin;\r\n    }\r\n\r\n    public boolean isBoss() {\r\n        return boss;\r\n    }\r\n\r\n    public void setBoss(boolean boss) {\r\n        this.boss = boss;\r\n    }\r\n\r\n    public int getType() {\r\n        return type;\r\n    }\r\n\r\n    public void setType(int type) {\r\n        this.type = type;\r\n    }\r\n\r\n    public List<DingDeptLeader> getDeptLeaders() {\r\n        return deptLeaders;\r\n    }\r\n\r\n    public void setDeptLeaders(List<DingDeptLeader> deptLeaders) {\r\n        this.deptLeaders = deptLeaders;\r\n    }\r\n\r\n    public List<DingUserRole> getRoles() {\r\n        return roles;\r\n    }\r\n\r\n    public void setRoles(List<DingUserRole> roles) {\r\n        this.roles = roles;\r\n    }\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nthe query execute success\r\n\r\n### Actual behavior\r\n\r\n```posh\r\n2022-12-19 17:17:03,366 ERROR (vert.x-eventloop-thread-0) HR000057: Failed to execute statement [select dingcorpus0_.corp_id as corp_id1_2_0_, dingcorpus0_.union_id as union_id2_2_0_, dingcorpus0_.active as active3_2_0_, dingcorpus0_.admin as admin4_2_0_, dingcorpus0_.boss as boss5_2_0_, dingcorpus0_.dept_id_list as dept_id_6_2_0_, dingcorpus0_.dept_leader as dept_lea7_2_0_, dingcorpus0_.dept_order as dept_ord8_2_0_, dingcorpus0_.exclusive_account as exclusiv9_2_0_, dingcorpus0_.hide_mobile as hide_mo10_2_0_, dingcorpus0_.job_number as job_num11_2_0_, dingcorpus0_.manager_userid as manager12_2_0_, dingcorpus0_.roles as roles13_2_0_, dingcorpus0_.senior as senior14_2_0_, dingcorpus0_.title as title15_2_0_, dingcorpus0_.type as type16_2_0_, dingcorpus0_.user_id as user_id17_2_0_ from ding_corp_user dingcorpus0_ where dingcorpus0_.corp_id=? and dingcorpus0_.union_id=?]: could not load an entity: [com.nxin.ding.domain.user.entity.DingCorpUser#component[corpId,unionId]{unionId=DnWxeNUxqKbiS9WOXwUjoTwiEiE, corpId=ding8d4a742ff92d6ef3acaaa37764f94726}]: java.util.concurrent.CompletionException: java.lang.ClassCastException: Invalid String value type class io.vertx.core.json.JsonArray\r\n        at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)\r\n        at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)\r\n        at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1159)\r\n        at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)\r\n        at java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)\r\n        at io.vertx.core.Future.lambda$toCompletionStage$3(Future.java:384)\r\n        at io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n        at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n        at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n        at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n        at io.vertx.sqlclient.impl.QueryResultBuilder.tryComplete(QueryResultBuilder.java:100)\r\n        at io.vertx.sqlclient.impl.QueryResultBuilder.tryComplete(QueryResultBuilder.java:34)\r\n        at io.vertx.core.Promise.complete(Promise.java:66)\r\n        at io.vertx.core.Promise.handle(Promise.java:51)\r\n        at io.vertx.core.Promise.handle(Promise.java:29)\r\n        at io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n        at io.vertx.core.impl.future.FutureBase.lambda$emitSuccess$0(FutureBase.java:54)\r\n        at io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:86)\r\n        at io.vertx.core.impl.DuplicatedContext.execute(DuplicatedContext.java:163)\r\n        at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:51)\r\n        at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n        at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n        at io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n        at io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:41)\r\n        at io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:23)\r\n        at io.vertx.sqlclient.impl.command.CommandResponse.fire(CommandResponse.java:46)\r\n        at io.vertx.sqlclient.impl.SocketConnectionBase.handleMessage(SocketConnectionBase.java:292)\r\n        at io.vertx.sqlclient.impl.SocketConnectionBase.lambda$init$0(SocketConnectionBase.java:105)\r\n        at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)\r\n        at io.vertx.core.impl.ContextBase.emit(ContextBase.java:239)\r\n        at io.vertx.core.net.impl.NetSocketImpl.handleMessage(NetSocketImpl.java:390)\r\n        at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:157)\r\n        at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n        at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n        at io.vertx.mysqlclient.impl.codec.MySQLEncoder.handleCommandResponse(MySQLEncoder.java:63)\r\n        at io.vertx.mysqlclient.impl.codec.QueryCommandBaseCodec.handleAllResultsetDecodingCompleted(QueryCommandBaseCodec.java:175)\r\n        at io.vertx.mysqlclient.impl.codec.ExtendedQueryCommandBaseCodec.handleAllResultsetDecodingCompleted(ExtendedQueryCommandBaseCodec.java:51)\r\n        at io.vertx.mysqlclient.impl.codec.QueryCommandBaseCodec.handleSingleResultsetDecodingCompleted(QueryCommandBaseCodec.java:136)\r\n        at io.vertx.mysqlclient.impl.codec.QueryCommandBaseCodec.handleRows(QueryCommandBaseCodec.java:124)\r\n        at io.vertx.mysqlclient.impl.codec.QueryCommandBaseCodec.decodePayload(QueryCommandBaseCodec.java:66)\r\n        at io.vertx.mysqlclient.impl.codec.ExtendedQueryCommandCodec.decodePayload(ExtendedQueryCommandCodec.java:108)\r\n        at io.vertx.mysqlclient.impl.codec.MySQLDecoder.decodePackets(MySQLDecoder.java:72)\r\n        at io.vertx.mysqlclient.impl.codec.MySQLDecoder.channelRead(MySQLDecoder.java:48)\r\n        at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\nCaused by: java.lang.ClassCastException: Invalid String value type class io.vertx.core.json.JsonArray\r\n        at io.vertx.sqlclient.Tuple.getString(Tuple.java:410)\r\n        at io.vertx.sqlclient.Row.getString(Row.java:188)\r\n        at org.hibernate.reactive.adaptor.impl.ResultSetAdaptor.getString(ResultSetAdaptor.java:183)\r\n        at org.hibernate.type.descriptor.sql.VarcharTypeDescriptor$2.doExtract(VarcharTypeDescriptor.java:62)\r\n        at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)\r\n        at org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter$2.extract(AttributeConverterSqlTypeDescriptorAdapter.java:121)\r\n        at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)\r\n        at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)\r\n        at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)\r\n        at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)\r\n        at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3214)\r\n        at org.hibernate.persister.entity.Loadable.hydrate(Loadable.java:94)\r\n        at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)\r\n        at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)\r\n        at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:80)\r\n        at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)\r\n        at org.hibernate.reactive.loader.entity.impl.ReactivePlanEntityLoader$ReactiveLoadPlanBasedResultSetProcessor.reactiveExtractResults(ReactivePlanEntityLoader.java:352)\r\n        at org.hibernate.reactive.loader.ReactiveLoader.reactiveProcessResultSet(ReactiveLoader.java:154)\r\n        at org.hibernate.reactive.loader.ReactiveLoader.lambda$doReactiveQueryAndInitializeNonLazyCollections$0(ReactiveLoader.java:81)\r\n        at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)\r\n        ... 65 more\r\n```\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nLinux ding-isv01 3.10.0-1160.31.1.el7.x86_64 #1 SMP Thu Jun 10 13:32:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n### Output of `java -version`\r\n\r\nOpenJDK Runtime Environment GraalVM CE 22.3.0 (build 17.0.5+8-jvmci-22.3-b08) OpenJDK 64-Bit Server VM GraalVM CE 22.3.0 (build 17.0.5+8-jvmci-22.3-b08, mixed mode, sharing)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n22.3.0\r\n\r\n### Quarkus version or git rev\r\n\r\n2.15.0\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\ngradle 7.6.0\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29953/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29953/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
