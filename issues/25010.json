{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25010",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25010/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25010/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25010/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25010",
  "id": 1208687115,
  "node_id": "I_kwDOCFbutM5ICxoL",
  "number": 25010,
  "title": "Document limitation of `@QuarkusIntegrationTest` using Docker image",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/187",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/187",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/187/labels",
    "id": 7973847,
    "node_id": "MI_kwDOCFbutM4AeavX",
    "number": 187,
    "title": "2.9.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 59,
    "state": "closed",
    "created_at": "2022-05-12T16:31:43Z",
    "updated_at": "2023-02-21T15:11:20Z",
    "due_on": null,
    "closed_at": "2022-05-17T14:00:39Z"
  },
  "comments": 4,
  "created_at": "2022-04-19T18:08:02Z",
  "updated_at": "2022-05-12T16:38:44Z",
  "closed_at": "2022-05-09T14:04:57Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\n`@QuarkusIntegrationTest` runs against \"any\" \"image type\" (fast-jar, uber-jar, native image, Docker container), which is really neat.\r\n\r\n`@QuarkusIntegrationTest` against Docker containers, when the tested application runs inside a Docker container, has an important limitation compared to the now deprecated-for-removal `@NativeImageTest` option, which is probably worth documenting.\r\n\r\nSince the tested application runs inside a Docker container, the tested application cannot access resources running on the Docker host. Integration tests that for example use testcontainers need to be updated to use the proper Docker-network hostname.\r\n\r\n`OidcWiremockTestResource` does *not* work with `@QuarkusIntegrationTest` against Docker containers, because the Wiremock server is running in the JVM running the test, which cannot be accessed from the Docker container running the Quarkus application.\r\n\r\nUnfortunately there's no system property which can be easily checked for the currently tested Quarkus image type (fast/uber jar, native, docker). Seems worth to have such a property - or better: a way to only limit/restrict tests, likely with a new `@DisabledOnNativeDockerImage` annotation similar to `@DisabledOnNativeImage` and `@DisabledOnIntegrationTest`? Or add a set of \"disabled image types\" to `@DisabledOnIntegrationTest`?\r\n\r\nTestcontainers `JdbcDatabaseContainer` example:\r\nOld way was to simply use `JdbcDatabaseContainer.getJdbcUrl()`, but now it requires:\r\n```java\r\npublic class MyTestResourceLifecycleManager implements QuarkusTestResourceLifecycleManager, DevServicesContext.ContextAware {\r\n  private Optional<String> containerNetworkId;\r\n\r\n  @Override\r\n  public void setIntegrationTestContext(DevServicesContext context) {\r\n    containerNetworkId = context.containerNetworkId();\r\n  }\r\n\r\n  @Override\r\n  public Map<String, String> start() {\r\n    JdbcDatabaseContainer container = new PostgreSQLContainer ...\r\n    \r\n    String jdbcUrl = container.getJdbcUrl();\r\n\r\n    // Replace hostname + port in the provided JDBC URL with the hostname of the Docker container\r\n    // running PostgreSQL and the listening port.\r\n    if (containerNetworkId.isPresent()) {\r\n      String hostPort = container.getHost() + ':' + container.getMappedPort(POSTGRESQL_PORT);\r\n      String networkHostPort =\r\n          container.getCurrentContainerInfo().getConfig().getHostName() + ':' + POSTGRESQL_PORT;\r\n      jdbcUrl = jdbcUrl.replace(hostPort, networkHostPort);\r\n    }\r\n\r\n    return ImmutableMap.of(\r\n        \"quarkus.datasource.username\", container.getUsername(),\r\n        \"quarkus.datasource.password\", container.getPassword(),\r\n        \"quarkus.datasource.jdbc.url\", jdbcUrl);\r\n  }\r\n}\r\n`` \r\n\r\n### Quarkus version or git rev\r\n\r\n2.8.0\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25010/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25010/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
