{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38949",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38949/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38949/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38949/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38949",
  "id": 2147999802,
  "node_id": "I_kwDOCFbutM6AB-A6",
  "number": 38949,
  "title": "Postgresql bump causing detection of instance Random/SplittableRandom",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/312",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/312",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/312/labels",
    "id": 10606558,
    "node_id": "MI_kwDOCFbutM4Aodfe",
    "number": 312,
    "title": "3.8.1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 44,
    "state": "closed",
    "created_at": "2024-02-26T16:57:35Z",
    "updated_at": "2024-02-28T11:29:26Z",
    "due_on": null,
    "closed_at": "2024-02-28T11:29:26Z"
  },
  "comments": 11,
  "created_at": "2024-02-22T01:34:07Z",
  "updated_at": "2024-02-26T17:02:13Z",
  "closed_at": "2024-02-22T13:55:11Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nQE testsuite start failing after the https://github.com/quarkusio/quarkus/pull/38909. The new version adding `PasswordUtil` class which have `SecureRandom` attribute, see PR https://github.com/pgjdbc/pgjdbc/pull/3082\r\n\r\nError log:\r\n```\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use \r\n\r\n    '--trace-object-instantiation=java.security.SecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with \r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nDetailed message:\r\nTrace: Object was reached by\r\n  trying to constant fold static field org.postgresql.util.PasswordUtil$SecureRandomHolder.INSTANCE\r\n    at org.postgresql.util.PasswordUtil.getSecureRandom(PasswordUtil.java:34)\r\n  parsing method org.postgresql.util.PasswordUtil.getSecureRandom(PasswordUtil.java:34) reachable via the parsing context\r\n    at static root method.(Unknown Source)\r\n\r\n\r\ncom.oracle.svm.core.util.UserError$UserException: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use \r\n\r\n    '--trace-object-instantiation=java.security.SecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with \r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nDetailed message:\r\nTrace: Object was reached by\r\n  trying to constant fold static field org.postgresql.util.PasswordUtil$SecureRandomHolder.INSTANCE\r\n    at org.postgresql.util.PasswordUtil.getSecureRandom(PasswordUtil.java:34)\r\n  parsing method org.postgresql.util.PasswordUtil.getSecureRandom(PasswordUtil.java:34) reachable via the parsing context\r\n    at static root method.(Unknown Source)\r\n\r\n\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.core.util.UserError.abort(UserError.java:85)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FallbackFeature.reportAsFallback(FallbackFeature.java:248)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:814)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:539)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:721)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:143)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:98)\r\nCaused by: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use \r\n\r\n    '--trace-object-instantiation=java.security.SecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with \r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nDetailed message:\r\nTrace: Object was reached by\r\n  trying to constant fold static field org.postgresql.util.PasswordUtil$SecureRandomHolder.INSTANCE\r\n    at org.postgresql.util.PasswordUtil.getSecureRandom(PasswordUtil.java:34)\r\n  parsing method org.postgresql.util.PasswordUtil.getSecureRandom(PasswordUtil.java:34) reachable via the parsing context\r\n    at static root method.(Unknown Source)\r\n\r\n\r\n        at org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.constraints.UnsupportedFeatures.report(UnsupportedFeatures.java:126)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:809)\r\n        ... 6 more\r\n```\n\n### Expected behavior\n\nCompile to native as it was possible with version 42.7.1\n\n### Actual behavior\n\nFail to compile to native.\n\n### How to Reproduce?\n\nNeed latest version of Quarkus main branch\r\n\r\n1. `git clone https://github.com/quarkus-qe/quarkus-test-suite.git`\r\n2. `cd quarkus-test-suite`\r\n3. `mvn clean verify -Psql-db-modules -pl sql-db/narayana-transactions -Dreruns=0 -Dit.test=\"PostgresqlTransactionGeneralUsageIT*\" -Dnative`\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### Mandrel or GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\nmain\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38949/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38949/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
