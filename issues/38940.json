{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38940",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38940/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38940/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38940/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38940",
  "id": 2147672731,
  "node_id": "I_kwDOCFbutM6AAuKb",
  "number": 38940,
  "title": "Offer a way to block inside custom `SecurityContext.isUserInRole` with resteasy-reactive",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/314",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/314",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/314/labels",
    "id": 10677603,
    "node_id": "MI_kwDOCFbutM4Aou1j",
    "number": 314,
    "title": "3.10.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 193,
    "state": "closed",
    "created_at": "2024-03-13T09:10:43Z",
    "updated_at": "2024-08-07T12:18:40Z",
    "due_on": null,
    "closed_at": "2024-04-16T15:31:05Z"
  },
  "comments": 28,
  "created_at": "2024-02-21T20:43:47Z",
  "updated_at": "2024-04-06T14:41:33Z",
  "closed_at": "2024-04-06T14:41:29Z",
  "active_lock_reason": null,
  "body": "### Description\n\nWhen using resteasy-reactive and creating a custom SecurityContext, attempting to block inside `isUserInRole` is forbidden, e.g. for looking up a specific role requested with `@RolesAllowed` in the database.\r\n\r\nUnfortunately, there is currently no (easy) way to overcome this situation, since, even if the resolved endpoint containing the `RolesAllowed` annotation is blocking, the check will happen on an IO thread.\r\n\r\nThe only workaround I have found so far, is to check inside `isUserInRole` if blocking is allowed, with `BlockingOperationControl.isBlockingAllowed()`. If not, then return true, so that the request is not rejected immediately and add a `@ServerRequestFilter` (allowed to block) that injects `ResourceInfo`, checks if there are `RolesAllowed` annotations present in the matched endpoint and _actually_ perform the role check.\r\n\r\nI have created an example project with this: https://github.com/JChrist/quarkus-blocking-roles\r\nWhile this example is trivial to resolve, by not needing to block to check the role, let's assume that in a real-world scenario that wouldn't be the case, e.g. in the case where the number of roles would be too many to pre-load.\r\n\r\nIdeally, I would like for a way to instruct quarkus that this check is performed after the request is offloaded to a worker thread. I understand that this means that all requests would need to become blocking, but as things stand, even if all requests are blocking, this check still happens on IO thread.\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38940/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38940/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
