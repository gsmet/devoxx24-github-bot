{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23338",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23338/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23338/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23338/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23338",
  "id": 1120536534,
  "node_id": "I_kwDOCFbutM5CygfW",
  "number": 23338,
  "title": "[Native] Locales bundles, ServiceLoader flow for JDK; e.g. Frankreich vs. France",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1416831855,
      "node_id": "MDU6TGFiZWwxNDE2ODMxODU1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/graalvm-java11",
      "name": "env/graalvm-java11",
      "color": "063b72",
      "default": false,
      "description": "Relating to using GraalVM native image generation on Java 11"
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3554570642,
      "node_id": "LA_kwDOCFbutM7T3nGS",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/graalvm-java17",
      "name": "env/graalvm-java17",
      "color": "228FE2",
      "default": false,
      "description": "Relating to using GraalVM native generation Java 11"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/175",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/175",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/175/labels",
    "id": 7698730,
    "node_id": "MI_kwDOCFbutM4AdXkq",
    "number": 175,
    "title": "2.7.2.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 159,
    "state": "closed",
    "created_at": "2022-02-21T12:59:08Z",
    "updated_at": "2022-05-12T16:40:04Z",
    "due_on": null,
    "closed_at": "2022-02-22T17:21:05Z"
  },
  "comments": 4,
  "created_at": "2022-02-01T11:16:19Z",
  "updated_at": "2022-02-21T17:19:30Z",
  "closed_at": "2022-02-21T17:13:37Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nThis is a followup on: :lady_beetle:  #22808 **Including resource bundles for different languages doesn't work**\r\n\r\n# The problem\r\nUnless `quarkus.native.auto-service-loader-registration=true` is used, i.e. `-H:+UseServiceLoaderFeature`, to trigger [ServiceLoaderFeature](https://github.com/oracle/graal/blob/release/graal-vm/22.0/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ServiceLoaderFeature.java#L98) in Graal, JDK Locale bundles, e.g. `sun.util.resources.cldr.ext.LocaleNames_de` are not loaded.\r\n\r\nThe code in [ServiceLoaderFeature](https://github.com/oracle/graal/blob/release/graal-vm/22.0/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ServiceLoaderFeature.java#L98) is missing finer grained include/exclude, so it bloats the image too much when used.\r\n\r\nThe result is that it silently falls back to `sun.util.resources.LocaleNames` English defaults. To illustrate:\r\n\r\n```\r\nSystem.out.printf(\"English: %s\\n\", Locale.FRANCE.getDisplayCountry(Locale.ENGLISH));\r\nSystem.out.printf(\"German: %s\\n\", Locale.FRANCE.getDisplayCountry(Locale.GERMAN));\r\nSystem.out.printf(\"Italian: %s\\n\", Locale.FRANCE.getDisplayCountry(Locale.ITALIAN));\r\n```\r\nShould print:\r\n```\r\nEnglish: France\r\nGerman: Frankreich\r\nItalian: Francia\r\n```\r\nand not\r\n```\r\nEnglish: France\r\nGerman: France\r\nItalian: France\r\n```\r\n\r\n# The solution (Quarkus) :grey_question: \r\nNaively deferring to `RuntimeInitializedClassBuildItem` or using `ReflectiveClassBuildItem` to init e.g. \r\n```\r\nsun.util.resources.LocaleData$SupplementaryResourceBundleProvider\r\nsun.util.resources.provider.SupplementaryLocaleDataProvider\r\nsun.util.resources.LocaleData$CommonResourceBundleProvider\r\nsun.util.resources.provider.LocaleDataProvider\r\n```\r\nis not enough as it doesn't help with the ServiceLoader architecture used to populate these implementations.\r\nLooking into `sun.util.resources.Bundles` and discovering Quarkus' `ServiceProviderBuildItem` lead to attempts at something like:\r\n```\r\nservices.produce(\r\n        new ServiceProviderBuildItem(\"sun.util.resources.LocaleDataProvider\",\r\n                \"sun.util.resources.LocaleData$CommonResourceBundleProvider\"));\r\n services.produce(\r\n        new ServiceProviderBuildItem(\"sun.util.resources.provider.SupplementaryLocaleDataProvider\",\r\n                \"sun.util.resources.LocaleData$SupplementaryResourceBundleProvider\"));\r\n\r\nor...?\r\n\r\nservices.produce(\r\n        new ServiceProviderBuildItem(\r\n                 \"sun.util.resources.LocaleData$CommonResourceBundleProvider\",\r\n                  \"sun.util.resources.LocaleDataProvider\"));\r\nservices.produce(\r\n         new ServiceProviderBuildItem(\r\n                 \"sun.util.resources.LocaleData$SupplementaryResourceBundleProvider\",\r\n                  \"sun.util.resources.provider.SupplementaryLocaleDataProvider\"));\r\n```\r\nIt does not help either.\r\n\r\nExamining some extensions such as `liquibase-mongodb` shows me that ServiceLoaders are successfully runtime-inited in Native image elsewhere, although none of these usages touch JDK's own code.\r\n\r\nWIP, I will keep digging around, building `core/deployment/src/main/java/io/quarkus/deployment/steps/LocaleProcessor.java` that would runtime init ServiceLaoders to produce desired locales. No luck so far.\r\n\r\nNote that having this is required:\r\n```\r\n        resources.produce(new NativeImageResourceBundleBuildItem(\"sun.util.resources.LocaleNames\"));\r\n```\r\nand yet doing anything like:\r\n```\r\n        resources.produce(new NativeImageResourceBundleBuildItem(\"sun.util.resources.ext.LocaleNames_de\"));\r\n        resources.produce(new NativeImageResourceBundleBuildItem(\"sun.util.resources.cldr.ext.LocaleNames_de\"));\r\n```\r\ndoes not help.\r\n\r\n# The solution (Graal) :grey_question: \r\nIt might be also addressable on the Graal's side and apparently, someone already put some thought to it:\r\nFrom  [ServiceLoaderFeature](https://github.com/oracle/graal/blob/release/graal-vm/22.0/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ServiceLoaderFeature.java#L98):\r\n\r\n>         // TODO write a more sophisticated include/exclude filter to handle cases like GR-27605 ?\r\n\r\nSo perhaps, instead of registering hundreds of services via all ServiceLoaders found all over the place with the hammer like `-H:+UseServiceLoaderFeature`, I could patch it do something akin to: `-H:+UseServiceLoaderFeature=include:sun.util.resources.LocaleData$CommonResourceBundleProvider,sun.util.resources.LocaleData$SupplementaryResourceBundleProvider` to enable just what is apparently needed in this particular case?\r\n\r\nNote that while we use countries' names to illustrate the issue here, it would be likely the same for the names of currencies etc.\r\n \r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23338/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23338/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
