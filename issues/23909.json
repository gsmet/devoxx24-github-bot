{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23909",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23909/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23909/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23909/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23909",
  "id": 1148007690,
  "node_id": "I_kwDOCFbutM5EbTUK",
  "number": 23909,
  "title": "Caught NoResultException silently causes Transaction to fail",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1425555736,
      "node_id": "MDU6TGFiZWwxNDI1NTU1NzM2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-orm",
      "name": "area/hibernate-orm",
      "color": "0366d6",
      "default": false,
      "description": "Hibernate ORM"
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 10,
  "created_at": "2022-02-23T12:05:35Z",
  "updated_at": "2023-05-30T10:36:58Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nA caught `NoResultException` within a transaction causes changes made during the transaction to not be persisted.\r\nInterestingly, no Exception is thrown, the transaction is not marked for rollback and even with hibernate logging set to TRACE there is no indication as to why this happens. \r\nThe step running the `insert` query is simply missing.\r\n\r\nEven weirder, inlining the function producing the `NoResultException` _within the same class_ resolves the issue. I attached a reproducer project below but for completion: \r\n\r\n```\r\n@Dependent\r\n@Transactional(Transactional.TxType.REQUIRED)\r\npublic class ConfigurationRepository {\r\n\r\n  @Inject protected EntityManager entityManager;\r\n  [...]\r\n  public String findValue(String key) {\r\n    return entityManager.createQuery([...]).getSingleResult().getValue();\r\n  }\r\n\r\n  public Optional<String> findOptionalValue(String key) {\r\n    try {\r\n      String value = findValue(key);\r\n      return Optional.of(value);\r\n    } catch (NoResultException e) {\r\n      return Optional.empty();\r\n    }\r\n  }\r\n}\r\n\r\n```\r\nproduces the behaviour, while\r\n\r\n```\r\n@Dependent\r\n@Transactional(Transactional.TxType.REQUIRED)\r\npublic class ConfigurationRepository {\r\n\r\n  @Inject protected EntityManager entityManager;\r\n  [...]\r\n  public Optional<String> findOptionalValue(String key) {\r\n    try {\r\n      String value = entityManager.createQuery([...]).getSingleResult().getValue();\r\n      return Optional.of(value);\r\n    } catch (NoResultException e) {\r\n      return Optional.empty();\r\n    }\r\n  }\r\n}\r\n```\r\ndoes not, when `findOptionalValue` is called from another method/class annotated `@Transactional`\r\n\r\nIf I need to take this bug up with hibernate instead, feel free to refer me with the necessary version information. \r\n\r\n### Expected behavior\r\n\r\nCatching a `NoResultException` does not change the outcome of a transaction in any way.\r\nA transaction ending in a unexpected way should produce an exception or a warning.\r\n\r\n### Actual behavior\r\n\r\nThe Entity created during the Transaction is not persisted, no error is thrown, no warning is produced.\r\n\r\n### How to Reproduce?\r\n\r\nReproducer: \r\n[quarkus-reproducible.zip](https://github.com/quarkusio/quarkus/files/8124085/quarkus-reproducible.zip)\r\n\r\n\r\nSteps to reproduce:\r\n1. Run `mvnw clean install -DskipTests quarkus:dev`\r\n2. Open `localhost:8080/q/swagger-ui`\r\n3. Execute `POST /some-entity`\r\n4. Verify that the Entity was not persisted with `GET /some-entity`\r\n\r\nOr:\r\n1. Run `mvnw clean install -DskipTests=true`\r\n2. Execute `SomeEndpointIT.testCreate()`\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"11.0.2\" 2019-01-15 \r\nOpenJDK Runtime Environment 18.9 (build 11.0.2+9) \r\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.6.2-Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.1 (05c21c65bdfed0f71a2f2ada8b84da59348c4c5d) \r\nMaven home: C:\\Users\\___\\.m2\\wrapper\\dists\\apache-maven-3.8.1-bin\\2l5mhf2pq2clrde7f7qp1rdt5m\\apache-maven-3.8.1 \r\nJava version: 11.0.2, vendor: Oracle Corporation, runtime: D:\\Build\\Java\\jdk-11.0.2 Default locale: de_DE, platform encoding: Cp1252 \r\nOS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"\r\n\r\n### Additional information\r\n\r\nHere are the relevant Serverlogs for calling the function as outlined above: \r\n```\r\nTRACE [org.hib.int.SessionFactoryImpl$SessionBuilderImpl] (executor-thread-0) Opening Hibernate Session.  tenant=null\r\nDEBUG [org.hib.res.jdb.int.LogicalConnectionManagedImpl] (executor-thread-0) `hibernate.connection.provider_disables_autocommit` was enabled.  This setting should only be enabled when you are certain that the Connections given to Hibernate by the ConnectionProvider have auto-commit disabled.  Enabling this setting when the Connections do not have auto-commit disabled will lead to Hibernate executing SQL operations outside of any JDBC/SQL transaction.\r\nDEBUG [org.hib.res.tra.bac.jta.int.JtaTransactionCoordinatorImpl] (executor-thread-0) Hibernate RegisteredSynchronization successfully registered with JTA platform\r\nTRACE [org.hib.int.SessionImpl] (executor-thread-0) Opened Session [9dd5d0f8-d5f6-492c-8260-d8db9a20da92] at timestamp: 1645542566040\r\nTRACE [org.hib.eng.que.spi.QueryPlanCache] (executor-thread-0) Located HQL query plan in cache (SELECT e from ConfigurationParameter e where e.key = :key)\r\nTRACE [org.hib.eng.que.spi.HQLQueryPlan] (executor-thread-0) Find: SELECT e from ConfigurationParameter e where e.key = :key\r\nTRACE [org.hib.eng.spi.QueryParameters] (executor-thread-0) Named parameters: {key=some.key.label}\r\nDEBUG [org.hib.SQL] (executor-thread-0) select configurat0_.id as id1_0_, configurat0_.key as key2_0_, configurat0_.value as value3_0_ from ConfigurationParameter configurat0_ where configurat0_.key=?\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Registering statement [wrapped[ prep13: select configurat0_.id as id1_0_, configurat0_.key as key2_0_, configurat0_.value as value3_0_ from ConfigurationParameter configurat0_ where configurat0_.key=? ]]\r\nTRACE [org.hib.eng.jdb.int.JdbcCoordinatorImpl] (executor-thread-0) Registering last query statement [wrapped[ prep13: select configurat0_.id as id1_0_, configurat0_.key as key2_0_, configurat0_.value as value3_0_ from ConfigurationParameter configurat0_ where configurat0_.key=? ]]\r\nTRACE [org.hib.typ.des.sql.BasicBinder] (executor-thread-0) binding parameter [1] as [VARCHAR] - [some.key.label]\r\nTRACE [org.hib.loa.Loader] (executor-thread-0) Bound [2] parameters total\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Registering result set [io.agroal.pool.wrapper.ResultSetWrapper@1e1214d4]\r\nTRACE [org.hib.loa.Loader] (executor-thread-0) Processing result set\r\nTRACE [org.hib.loa.Loader] (executor-thread-0) Done processing result set (0 rows)\r\nTRACE [org.hib.loa.Loader] (executor-thread-0) Total objects hydrated: 0\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Releasing statement [wrapped[ prep13: select configurat0_.id as id1_0_, configurat0_.key as key2_0_, configurat0_.value as value3_0_ from ConfigurationParameter configurat0_ where configurat0_.key=? {1: 'some.key.label'} ]]\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Closing result set [io.agroal.pool.wrapper.ResultSetWrapper@1e1214d4]\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Closing prepared statement [wrapped[ prep13: select configurat0_.id as id1_0_, configurat0_.key as key2_0_, configurat0_.value as value3_0_ from ConfigurationParameter configurat0_ where configurat0_.key=? {1: 'some.key.label'} ]]\r\nTRACE [org.hib.eng.jdb.int.JdbcCoordinatorImpl] (executor-thread-0) Starting after statement execution processing [BEFORE_TRANSACTION_COMPLETION]\r\nTRACE [org.hib.eng.int.StatefulPersistenceContext] (executor-thread-0) Initializing non-lazy collections\r\nTRACE [org.hib.eve.int.EntityState] (executor-thread-0) Transient instance of: reproducable.persistence.SomeEntity\r\nTRACE [org.hib.eve.int.DefaultPersistEventListener] (executor-thread-0) Saving transient instance\r\nDEBUG [org.hib.SQL] (executor-thread-0) call next value for some_entity_id_seq\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Registering statement [wrapped[ prep14: call next value for some_entity_id_seq ]]\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Registering result set [io.agroal.pool.wrapper.ResultSetWrapper@3763aeb]\r\nDEBUG [org.hib.id.enh.SequenceStructure] (executor-thread-0) Sequence value obtained: 2\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Releasing result set [io.agroal.pool.wrapper.ResultSetWrapper@3763aeb]\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Closing result set [io.agroal.pool.wrapper.ResultSetWrapper@3763aeb]\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Releasing statement [wrapped[ prep14: call next value for some_entity_id_seq ]]\r\nDEBUG [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) HHH000387: ResultSet's statement was not registered\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Closing prepared statement [wrapped[ prep14: call next value for some_entity_id_seq ]]\r\nTRACE [org.hib.eng.jdb.int.JdbcCoordinatorImpl] (executor-thread-0) Starting after statement execution processing [BEFORE_TRANSACTION_COMPLETION]\r\nDEBUG [org.hib.eve.int.AbstractSaveEventListener] (executor-thread-0) Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator\r\nTRACE [org.hib.eve.int.AbstractSaveEventListener] (executor-thread-0) Saving [reproducable.persistence.SomeEntity#2]\r\nTRACE [org.hib.eng.spi.ActionQueue] (executor-thread-0) Adding an EntityInsertAction for [reproducable.persistence.SomeEntity] object\r\nTRACE [org.hib.eng.spi.ActionQueue] (executor-thread-0) Adding insert with no non-nullable, transient entities: [EntityInsertAction[reproducable.persistence.SomeEntity#2]]\r\nTRACE [org.hib.eng.spi.ActionQueue] (executor-thread-0) Adding resolved non-early insert action.\r\nTRACE [org.hib.res.tra.bac.jta.int.syn.RegisteredSynchronization] (executor-thread-0) Registered JTA Synchronization : afterCompletion(4)\r\nTRACE [org.hib.res.tra.bac.jta.int.syn.SynchronizationCallbackCoordinatorTrackingImpl] (executor-thread-0) Synchronization coordinator: afterCompletion(status=4)\r\nTRACE [org.hib.res.tra.bac.jta.int.syn.SynchronizationCallbackCoordinatorNonTrackingImpl] (executor-thread-0) Synchronization coordinator: doAfterCompletion(successful=false, delayed=false)\r\nTRACE [org.hib.res.tra.int.SynchronizationRegistryStandardImpl] (executor-thread-0) SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)\r\nTRACE [org.hib.res.jdb.int.AbstractLogicalConnectionImplementor] (executor-thread-0) LogicalConnection#afterTransaction\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Releasing JDBC resources\r\nDEBUG [org.hib.res.jdb.int.LogicalConnectionManagedImpl] (executor-thread-0) Initiating JDBC connection release from afterTransaction\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Releasing JDBC resources\r\nTRACE [org.hib.int.SessionImpl] (executor-thread-0) SessionImpl#afterTransactionCompletion(successful=false, delayed=false)\r\nDEBUG [org.hib.eng.tra.int.TransactionImpl] (executor-thread-0) On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false\r\nTRACE [org.hib.int.SessionImpl] (executor-thread-0) Automatically closing session\r\nTRACE [org.hib.int.SessionImpl] (executor-thread-0) Closing session [9dd5d0f8-d5f6-492c-8260-d8db9a20da92]\r\nTRACE [org.hib.eng.jdb.int.JdbcCoordinatorImpl] (executor-thread-0) Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@dcc2ae5]\r\nTRACE [org.hib.res.jdb.int.ResourceRegistryStandardImpl] (executor-thread-0) Releasing JDBC resources\r\nTRACE [org.hib.res.jdb.int.LogicalConnectionManagedImpl] (executor-thread-0) Closing logical connection\r\nTRACE [org.hib.res.jdb.int.LogicalConnectionManagedImpl] (executor-thread-0) Logical connection closed\r\n\r\n```",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23909/reactions",
    "total_count": 4,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23909/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
