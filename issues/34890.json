{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34890",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34890/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34890/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34890/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34890",
  "id": 1814184532,
  "node_id": "I_kwDOCFbutM5sIkJU",
  "number": 34890,
  "title": "Introduce new configuration to disable oidc discovery at startup",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 5,
  "created_at": "2023-07-20T14:50:56Z",
  "updated_at": "2024-06-24T12:34:46Z",
  "closed_at": "2023-08-21T09:51:16Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nI am using `quarkus-oidc` with Keycloak as OIDC provider, and I am creating a new realm (`myrealm`) at application startup (for non-production environments only):\r\n\r\n```\r\nvoid onStartUp(@Observes StartupEvent event) {\r\n    if(LaunchMode.current().isDevOrTest()) {\r\n        // generate realm configuration at runtime then use Keycloak Admin API to create the new realm\r\n        RealmRepresentation realm = generateNewRealm();\r\n        realm.setRealm(\"myrealm\");\r\n        keycloak.realms().create(realm);\r\n    }\r\n}\r\n```\r\n\r\nGiven these configs:\r\n\r\n```\r\nquarkus.oidc.discovery-enabled=true\r\nquarkus.keycloak.devservices.realm-name=myrealm\r\nquarkus.keycloak.devservices.create-realm=false\r\n```\r\n\r\nI got this exception:\r\n\r\n```\r\n2023-07-20 17:12:22,909 [] WARN  [io.qua.oid.com.run.OidcCommonUtils] (vert.x-eventloop-thread-1) OIDC Server is not available:: io.quarkus.oidc.common.runtime.OidcEndpointAccessException\r\n\tat io.quarkus.oidc.common.runtime.OidcCommonUtils.lambda$discoverMetadata$2(OidcCommonUtils.java:425)\r\n\tat io.smallrye.context.impl.wrappers.SlowContextualFunction.apply(SlowContextualFunction.java:21)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransform$UniOnItemTransformProcessor.onItem(UniOnItemTransform.java:36)\r\n\tat io.smallrye.mutiny.vertx.AsyncResultUni.lambda$subscribe$1(AsyncResultUni.java:35)\r\n\tat io.smallrye.mutiny.vertx.DelegatingHandler.handle(DelegatingHandler.java:25)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.handleDispatchResponse(HttpContext.java:397)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.execute(HttpContext.java:384)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.next(HttpContext.java:362)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.fire(HttpContext.java:329)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.dispatchResponse(HttpContext.java:291)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.lambda$null$7(HttpContext.java:507)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:264)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:246)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1623)\r\n2023-07-20 17:12:22,910 [] WARN  [io.qua.oid.run.OidcRecorder] (vert.x-eventloop-thread-1) OIDC server is not available at the 'http://localhost:9090/realms/myrealm' URL. Please make sure it is correct. Note it has to end with a realm value if you work with Keycloak, for example: 'https://localhost:8180/auth/realms/quarkus'\r\n2023-07-20 17:12:22,910 [] WARN  [io.qua.oid.run.OidcRecorder] (vert.x-eventloop-thread-1) Tenant 'Default': 'OIDC Server is not available'. OIDC server is not available yet, an attempt to connect will be made during the first request. Access to resources protected by this tenant may fail if OIDC server will not become available\r\n```\r\n\r\nThis happens because `myrealm` is not available yet, as `OidcRecorder` is executed before `onStartUp()`.\r\n\r\nAlthough the application continues to run normally, but It's nice to not have this exception on every application startup :)\r\n\r\n### Implementation ideas\r\n\r\nIntroduce new configuration `quarkus.oidc.discovery-at-startup` which can be `true` by default. If set to `false`, the discovery will be made during the first request anyway.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34890/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34890/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
