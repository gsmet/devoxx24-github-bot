{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20857",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20857/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20857/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20857/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20857",
  "id": 1029637663,
  "node_id": "I_kwDOCFbutM49XwYf",
  "number": 20857,
  "title": "Continuous Testing IntelliJ integration",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2955098535,
      "node_id": "MDU6TGFiZWwyOTU1MDk4NTM1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/continuous-testing",
      "name": "area/continuous-testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 5,
  "created_at": "2021-10-18T21:57:47Z",
  "updated_at": "2021-12-22T07:33:56Z",
  "closed_at": "2021-10-19T03:56:51Z",
  "active_lock_reason": null,
  "body": "### Description\n\nContinuous testing is a beautiful addition, and I'm sure it's made many people very happy. I think it would be absolutely phenomenal if we could have a Continuous Testing integration with IntelliJ. \r\n\r\nI'm thinking: \r\n\r\n1. Integration with the Test Results Tree View and console, so we can easily see what tests failed, and click on the tree to see the details.\r\n2. Run/Debug configurations so we can click on the run icon in the gutter to choose what tests to run in the continuous testing environment.\r\n\r\nWhat I understand of IntelliJ side of things:\r\n\r\n1. IntelliJ is usually set up to use gradle to run tests if the project is gradle, but this can be changed. If running tests via gradle, `GradleTestTasksProvider` extension point can be used to help add new tasks to be used to run tests.\r\n2. When running tests via Gradle, the tree can be controlled by sending <ijLog/> messages in the output. They also have what they call Service Messages, which is their own simple text serializer. I've noticed some issues reading very long output with the XML.\r\n3. Some IntelliJ plugins set up a socket server or other server to listen for messages.\r\n4. There is a way to clear the console and tree on each re-run via a plugin\r\n\r\nI'm willing to put in a bit of time into this every so often, but probably can't set aside a large chunk of time at once, and am certainly no expert in Quarkus internals or IntelliJ plugin development. I know there's already a Quarkus plugin bundled with IntelliJ, and I wouldn't be surprised if this was already being worked on, or on someone's list.\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20857/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20857/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
