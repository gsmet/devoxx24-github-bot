{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41705",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41705/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41705/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41705/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/41705",
  "id": 2392145072,
  "node_id": "I_kwDOCFbutM6OlTyw",
  "number": 41705,
  "title": "Support cancelling Kotlin coroutine handlers on connection closing",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/335",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/335",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/335/labels",
    "id": 11174659,
    "node_id": "MI_kwDOCFbutM4AqoMD",
    "number": 335,
    "title": "3.13.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 241,
    "state": "closed",
    "created_at": "2024-06-12T08:02:47Z",
    "updated_at": "2024-07-19T11:47:06Z",
    "due_on": null,
    "closed_at": "2024-07-17T11:55:13Z"
  },
  "comments": 8,
  "created_at": "2024-07-05T08:42:05Z",
  "updated_at": "2024-07-18T10:04:02Z",
  "closed_at": "2024-07-06T05:07:07Z",
  "active_lock_reason": null,
  "body": "I just started testing out Quarkus with Kotlin suspend handlers and it seems to work well. However, I noticed that these handlers don't support cancellation on request connection closing. I found a workaround, but it seems very cumbersome to add this to every request and would like to find out if there's a better way.\r\n\r\nIn the sample code below, endpoint `/long/a` cancels the delay by throwing the `CancellationException` when the connection is closed, but `/long/b` does not.\r\n\r\n```kotlin\r\n@Path(\"/long\")\r\nclass SampleResource(private val log: Logger) {\r\n    @GET\r\n    @Path(\"a\")\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    suspend fun longRunning(rc: RoutingContext): String = coroutineScope {\r\n        val requestJob = Job(coroutineContext[Job])\r\n        // Listen for the connection close event\r\n        rc.request().connection().closeHandler {\r\n            requestJob.cancel(CancellationException(\"Client connection closed\"))\r\n        }\r\n        // Launch a coroutine within this job\r\n        async(requestJob) {\r\n            delay(10000)\r\n            log.info(\"/long/a responding\")\r\n            \"Completed request\"\r\n        }.await()\r\n    }\r\n\r\n    @GET\r\n    @Path(\"b\")\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    suspend fun hello(): String = coroutineScope {\r\n        delay(10000)\r\n        log.info(\"/long/b responding\")\r\n        \"Completed request\"\r\n    }\r\n}\r\n```\r\n\r\n```log\r\n2024-07-04 17:30:07,579 ERROR [io.qua.ver.htt.run.QuarkusErrorHandler] (vert.x-eventloop-thread-1) HTTP Request to /long/a failed, error id: 1e9c93da-0f36-484d-8557-240fba83db7f-3: java.util.concurrent.CancellationException: Client connection closed\r\n\tat ...\r\n\r\n2024-07-04 17:30:22,693 INFO  [org.acm.SampleResource] (vert.x-eventloop-thread-0) /long/b responding\r\n```\r\n\r\n_Originally posted by @calebkiage in https://github.com/quarkusio/quarkus/discussions/41696_\r\n\r\n[Sample project](https://github.com/calebkiage/quarkus-kotlin-cancellation-test)",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41705/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41705/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
