{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40622",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40622/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40622/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40622/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/40622",
  "id": 2295276328,
  "node_id": "I_kwDOCFbutM6IzyMo",
  "number": 40622,
  "title": "WebSockets Next: Support for secure upgrade with security annotations only",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2748318141,
      "node_id": "MDU6TGFiZWwyNzQ4MzE4MTQx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/websockets",
      "name": "area/websockets",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/329",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/329",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/329/labels",
    "id": 11056804,
    "node_id": "MI_kwDOCFbutM4AqLak",
    "number": 329,
    "title": "3.12.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 195,
    "state": "closed",
    "created_at": "2024-05-15T09:27:54Z",
    "updated_at": "2024-07-04T18:19:16Z",
    "due_on": null,
    "closed_at": "2024-06-12T11:16:44Z"
  },
  "comments": 17,
  "created_at": "2024-05-14T12:18:39Z",
  "updated_at": "2024-06-11T18:29:21Z",
  "closed_at": "2024-06-11T18:29:21Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nIt is a follow up to #40534.\r\n\r\nWith #40534 users will be able to secure WS callbacks with security annotations like `@Authenticated` or `@RolesAllowed` but an actual HTTP upgrade will only be secured if either HTTP authentication or RBAC policy securing the HTTP upgrade path is also added - this is a good initial solution but it should not be required for a secure upgrade, having either\r\n\r\n```\r\n@OnOpen\r\n@Authenticated\r\nvoid onOpen() {}\r\n``` \r\nor\r\n\r\n```\r\n@OnOpen\r\n@RolesAllowed(\"admin\")\r\nvoid onOpen() {}\r\n``` \r\n\r\nshould be enough for users be able to work with the annotations only\r\n\r\n### Implementation ideas\r\n\r\nSome initial thoughts from Martin:\r\n\r\n```\r\nfor this kind of stuff we would need an SPI that would allow us to perform a security check for a class/set of annotation instances - the current SPI seems to be very method-oriented. Actually, we could use the security checks like io.quarkus.security.runtime.interceptor.check.RolesAllowedCheck directly, or even mimic the logic used there - it's pretty straightforward. But ideally, the SecurityCheckStorage would declare something like getSecurityCheck(Class<?>)\r\n```\r\n\r\nIt would be nice to be able to redirect a user to a configure HTTP page if the security control fails at the handshake time",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40622/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40622/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
