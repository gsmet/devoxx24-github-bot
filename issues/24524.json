{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24524",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24524/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24524/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24524/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24524",
  "id": 1179282064,
  "node_id": "I_kwDOCFbutM5GSmqQ",
  "number": 24524,
  "title": "quarkus-junit5: Running non-Quarkus unit-tests in parallel fails",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/184",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/184",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/184/labels",
    "id": 7922797,
    "node_id": "MI_kwDOCFbutM4AeORt",
    "number": 184,
    "title": "2.7.6.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 171,
    "state": "closed",
    "created_at": "2022-04-28T08:08:41Z",
    "updated_at": "2022-05-30T11:25:22Z",
    "due_on": null,
    "closed_at": "2022-05-30T11:25:22Z"
  },
  "comments": 3,
  "created_at": "2022-03-24T10:04:53Z",
  "updated_at": "2022-05-05T08:26:10Z",
  "closed_at": "2022-03-25T11:49:46Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nAs I understood it, the fix for #7696 should have made it possible to properly configure unit-test log output also for plain unit tests without `@QuarkusTest`.\r\n\r\nI have a Maven module with a `quarkus-core` dependency and plain, Quarkus-independent unit tests.\r\nI've added the `quarkus-junit5` dependency and configured logging via an `application.yaml` in the test resources folder.\r\nAll is running as expected when running the tests one after the other.\r\n\r\nBut, when running the tests in parallel, via a maven surefire config with\r\n```\r\njunit.jupiter.execution.parallel.enabled = true\r\njunit.jupiter.execution.parallel.mode.default = same_thread\r\njunit.jupiter.execution.parallel.mode.classes.default = concurrent\r\n```\r\n, the test execution fails with\r\n```\r\njava.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\n\tat io.smallrye.config.SmallRyeConfigProviderResolver.registerConfig(SmallRyeConfigProviderResolver.java:118)\r\n\tat io.quarkus.test.junit.BasicLoggingEnabler.beforeAll(BasicLoggingEnabler.java:102)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllCallbacks$10(ClassBasedTestDescriptor.java:381)\r\n```\r\n.\r\n\r\n\r\n<details>\r\n<summary>See the complete, verbose log output</summary>\r\n\r\n~~~\r\n[INFO] Running org.eclipse.hono.service.management.tenant.TrustedCertificateAuthorityTest\r\n[INFO] Running org.eclipse.hono.deviceregistry.service.credentials.AbstractCredentialsServiceTest\r\n[INFO] Running org.eclipse.hono.deviceregistry.service.device.AbstractDeviceManagementServiceTest\r\n[INFO] Running org.eclipse.hono.deviceregistry.service.credentials.AbstractCredentialsManagementServiceTest\r\nBasicLoggingEnabler took 137 ms from static init to start of beforeAll()\r\nBasicLoggingEnabler took 138 ms from static init to start of beforeAll()\r\nBasicLoggingEnabler took 138 ms from static init to start of beforeAll()\r\nBasicLoggingEnabler took 138 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.deviceregistry.service.device.AbstractRegistrationServiceTest\r\nBasicLoggingEnabler took 209 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.deviceregistry.service.device.EdgeDeviceAutoProvisionerTest\r\nBasicLoggingEnabler took 210 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.deviceregistry.service.tenant.AbstractTenantManagementServiceTest\r\nBasicLoggingEnabler took 220 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.deviceregistry.service.tenant.DefaultTenantInformationServiceTest\r\nBasicLoggingEnabler took 263 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.deviceregistry.util.DeviceRegistryUtilsTest\r\nBasicLoggingEnabler took 298 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.FilterTest\r\n[INFO] Running org.eclipse.hono.service.management.SortTest\r\nBasicLoggingEnabler took 343 ms from static init to start of beforeAll()\r\nBasicLoggingEnabler took 346 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.credentials.CommonSecretTest\r\nBasicLoggingEnabler took 359 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.credentials.CredentialsDtoTest\r\nBasicLoggingEnabler took 374 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.credentials.CredentialsTest\r\nBasicLoggingEnabler took 398 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.credentials.GenericSecretTest\r\nBasicLoggingEnabler took 437 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.credentials.PasswordSecretTest\r\nBasicLoggingEnabler took 448 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.credentials.PskSecretTest\r\nBasicLoggingEnabler took 470 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.credentials.X509CertificateSecretTest\r\nBasicLoggingEnabler took 476 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.device.DelegatingDeviceManagementHttpEndpointTest\r\nBasicLoggingEnabler took 497 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.device.DeviceAndGatewayAutoProvisionerTest\r\nBasicLoggingEnabler took 502 ms from static init to start of beforeAll()\r\n[INFO] Running org.eclipse.hono.service.management.device.DeviceTest\r\nBasicLoggingEnabler took 541 ms from static init to start of beforeAll()\r\nBasicLoggingEnabler took 554 ms to load config\r\n[INFO] Running org.eclipse.hono.service.management.tenant.TenantTest\r\nBasicLoggingEnabler took 566 ms from static init to start of beforeAll()\r\nBasicLoggingEnabler ConfigSource: SysPropConfigSource\r\nBasicLoggingEnabler ConfigSource: EnvConfigSource\r\nBasicLoggingEnabler ConfigSource: PropertiesConfigSource[source=jar:file:///home/cal/.m2/repository/org/eclipse/hono/hono-service-base/2.0.0-SNAPSHOT/hono-service-base-2.0.0-SNAPSHOT.jar!/application.properties]\r\nBasicLoggingEnabler ConfigSource: io.quarkus.test.common.http.TestHTTPConfigSourceProvider$TestURLConfigSource@2397d752\r\nBasicLoggingEnabler ConfigSource: PropertiesConfigSource[source=Runtime Defaults]\r\nBasicLoggingEnabler ConfigSource: DefaultValuesConfigSource\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\nBasicLoggingEnabler is swapping config after java.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.132 s <<< FAILURE! - in org.eclipse.hono.deviceregistry.service.credentials.AbstractCredentialsServiceTest\r\n[ERROR] org.eclipse.hono.deviceregistry.service.credentials.AbstractCredentialsServiceTest  Time elapsed: 0.13 s  <<< ERROR!\r\njava.lang.IllegalStateException: SRCFG00017: Configuration already registered for the given class loader\r\n\tat io.smallrye.config.SmallRyeConfigProviderResolver.registerConfig(SmallRyeConfigProviderResolver.java:118)\r\n\tat io.quarkus.test.junit.BasicLoggingEnabler.beforeAll(BasicLoggingEnabler.java:102)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllCallbacks$10(ClassBasedTestDescriptor.java:381)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllCallbacks(ClassBasedTestDescriptor.java:381)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:205)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:80)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:148)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\r\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\r\n\r\nBasicLoggingEnabler took 443 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 315 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 744 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 522 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 433 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 671 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 406 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 342 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 537 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 410 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 383 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 660 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 742 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 482 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 742 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 506 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 554 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 621 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 675 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 583 ms from start of beforeAll() to end\r\nBasicLoggingEnabler took 379 ms from start of beforeAll() to end\r\n~~~\r\n\r\n</details>\r\n \r\n\r\n\r\n### Expected behavior\r\n\r\nUnit tests can be run in parallel - at least the non `@QuarkusTest` ones.\r\n\r\n### Actual behavior\r\n\r\nTests fail with an `SRCFG00017: Configuration already registered for the given class loader` exception.\r\n\r\n### How to Reproduce?\r\n\r\nTake a Quarkus-independent Maven module containing at least 10 unit test classes, configured to be run in parallel (e.g. with\r\n```\r\n  <build>\r\n    <plugins>\r\n      <plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-surefire-plugin</artifactId>\r\n        <configuration>\r\n          <properties>\r\n            <!-- execute top-level classes in parallel but methods in same thread -->\r\n            <configurationParameters>\r\n              junit.jupiter.execution.parallel.enabled = true\r\n              junit.jupiter.execution.parallel.mode.default = same_thread\r\n              junit.jupiter.execution.parallel.mode.classes.default = concurrent\r\n            </configurationParameters>\r\n          </properties>\r\n          <systemProperties>\r\n            <io.quarkus.test.junit.BasicLoggingEnabler.verbose>true</io.quarkus.test.junit.BasicLoggingEnabler.verbose>\r\n          </systemProperties>\r\n        </configuration>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n```\r\n) and add the \r\n```\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-junit5</artifactId>\r\n      <scope>test</scope>\r\n    </dependency>\r\n```\r\ndependency.\r\nRun the tests via maven.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n`Linux 5.4.0-105-generic #119-Ubuntu SMP Mon Mar 7 18:49:24 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\n### Output of `java -version`\r\n\r\n```\r\nopenjdk version \"17.0.2\" 2022-01-18 \r\nOpenJDK Runtime Environment Temurin-17.0.2+8 (build 17.0.2+8) \r\nOpenJDK 64-Bit Server VM Temurin-17.0.2+8 (build 17.0.2+8, mixed mode, sharing)\r\n```\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.7.3\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.5\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24524/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24524/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
