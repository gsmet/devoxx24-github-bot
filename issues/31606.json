{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31606",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31606/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31606/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31606/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/31606",
  "id": 1609879738,
  "node_id": "I_kwDOCFbutM5f9NC6",
  "number": 31606,
  "title": "Resteasy Reactive/Panache requests reactive Hibernate session from executor thread if request is large",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/235",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/235",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/235/labels",
    "id": 9025446,
    "node_id": "MI_kwDOCFbutM4Aibem",
    "number": 235,
    "title": "3.0.0.Alpha5",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 253,
    "state": "closed",
    "created_at": "2023-02-09T14:26:03Z",
    "updated_at": "2023-11-12T17:44:08Z",
    "due_on": null,
    "closed_at": "2023-03-08T15:10:59Z"
  },
  "comments": 8,
  "created_at": "2023-03-04T18:08:00Z",
  "updated_at": "2023-03-07T14:24:40Z",
  "closed_at": "2023-03-07T14:24:34Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI have a simple project which accepts some data via JSON through RESTEasy Reactive and saves it to the database using Hibernate Reactive with Panache. This works fine as long as the request object is small. However, if the request object is large (in my case, a few megabytes), then the request fails with `HR000068: This method should exclusively be invoked from a Vert.x EventLoop thread; currently running on thread 'executor-thread-0'` (see below for the full stack trace).\r\n\n\n### Expected behavior\n\nThe request should always finish successfully, regardless of the size of the request object.\n\n### Actual behavior\n\nThe request fails and returns a 500 status code. The following logging output is generated:\r\n```\r\n2023-03-04 16:57:10,768 ERROR [org.jbo.res.rea.ser.cor.RuntimeExceptionMapper] (executor-thread-0) An operation that needed be run on a Vert.x EventLoop thread was run on a worker pool thread. This likely means you need to annotate de.markushimmel.Resource#create(class de.markushimmel.RequestObject) with @io.smallrye.common.annotation.NonBlocking. Alternatively you can annotate the class de.markushimmel.Resource to make every method on the class run on a Vert.x EventLoop thread, or annotate your sub class of the jakarta.ws.rs.core.Application class to affect the entire application\r\n2023-03-04 16:57:10,774 ERROR [io.qua.ver.htt.run.QuarkusErrorHandler] (executor-thread-0) HTTP Request to /resource/create failed, error id: bf8e7471-cb50-4817-aeaf-eb549c080252-1: java.lang.IllegalStateException: HR000068: This method should exclusively be invoked from a Vert.x EventLoop thread; currently running on thread 'executor-thread-0'\r\n        at org.hibernate.reactive.common.InternalStateAssertions.assertUseOnEventLoop(InternalStateAssertions.java:40)\r\n        at org.hibernate.reactive.mutiny.impl.MutinySessionFactoryImpl.connection(MutinySessionFactoryImpl.java:177)\r\n        at org.hibernate.reactive.mutiny.impl.MutinySessionFactoryImpl.lambda$openSession$0(MutinySessionFactoryImpl.java:111)\r\n        at io.smallrye.context.impl.wrappers.SlowContextualSupplier.get(SlowContextualSupplier.java:21)\r\n        at io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage.subscribe(UniCreateFromCompletionStage.java:24)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniRunSubscribeOn.lambda$subscribe$0(UniRunSubscribeOn.java:27)\r\n        at org.hibernate.reactive.context.impl.VertxContext.execute(VertxContext.java:90)\r\n        at io.smallrye.mutiny.operators.uni.UniRunSubscribeOn.subscribe(UniRunSubscribeOn.java:25)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni.subscribe(UniOnItemTransformToUni.java:25)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransform.subscribe(UniOnItemTransform.java:22)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemConsume.subscribe(UniOnItemConsume.java:30)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni.subscribe(UniOnItemTransformToUni.java:25)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemOrFailureFlatMap.subscribe(UniOnItemOrFailureFlatMap.java:27)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransform.subscribe(UniOnItemTransform.java:22)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemOrFailureFlatMap.subscribe(UniOnItemOrFailureFlatMap.java:27)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.groups.UniSubscribe.withSubscriber(UniSubscribe.java:51)\r\n        at io.smallrye.mutiny.groups.UniSubscribe.with(UniSubscribe.java:110)\r\n        at io.smallrye.mutiny.groups.UniSubscribe.with(UniSubscribe.java:88)\r\n        at org.jboss.resteasy.reactive.server.handlers.UniResponseHandler.handle(UniResponseHandler.java:19)\r\n        at io.quarkus.resteasy.reactive.server.runtime.QuarkusResteasyReactiveRequestContext.invokeHandler(QuarkusResteasyReactiveRequestContext.java:123)\r\n        at org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:145)\r\n        at io.quarkus.vertx.core.runtime.VertxCoreRecorder$14.runWith(VertxCoreRecorder.java:576)\r\n        at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2449)\r\n        at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1478)\r\n        at org.jboss.threads.DelegatingRunnable.run(DelegatingRunnable.java:29)\r\n        at org.jboss.threads.ThreadLocalResettingRunnable.run(ThreadLocalResettingRunnable.java:29)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:1589)\r\n\r\n2023-03-04 16:57:10,777 ERROR [org.jbo.res.rea.com.cor.AbstractResteasyReactiveContext] (executor-thread-0) Request failed: java.lang.IllegalStateException: HR000068: This method should exclusively be invoked from a Vert.x EventLoop thread; currently running on thread 'executor-thread-0'\r\n        at org.hibernate.reactive.common.InternalStateAssertions.assertUseOnEventLoop(InternalStateAssertions.java:40)\r\n        at org.hibernate.reactive.mutiny.impl.MutinySessionFactoryImpl.connection(MutinySessionFactoryImpl.java:177)\r\n        at org.hibernate.reactive.mutiny.impl.MutinySessionFactoryImpl.lambda$openSession$0(MutinySessionFactoryImpl.java:111)\r\n        at io.smallrye.context.impl.wrappers.SlowContextualSupplier.get(SlowContextualSupplier.java:21)\r\n        at io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage.subscribe(UniCreateFromCompletionStage.java:24)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniRunSubscribeOn.lambda$subscribe$0(UniRunSubscribeOn.java:27)\r\n        at org.hibernate.reactive.context.impl.VertxContext.execute(VertxContext.java:90)\r\n        at io.smallrye.mutiny.operators.uni.UniRunSubscribeOn.subscribe(UniRunSubscribeOn.java:25)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni.subscribe(UniOnItemTransformToUni.java:25)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransform.subscribe(UniOnItemTransform.java:22)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemConsume.subscribe(UniOnItemConsume.java:30)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni.subscribe(UniOnItemTransformToUni.java:25)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemOrFailureFlatMap.subscribe(UniOnItemOrFailureFlatMap.java:27)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransform.subscribe(UniOnItemTransform.java:22)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemOrFailureFlatMap.subscribe(UniOnItemOrFailureFlatMap.java:27)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.groups.UniSubscribe.withSubscriber(UniSubscribe.java:51)\r\n        at io.smallrye.mutiny.groups.UniSubscribe.with(UniSubscribe.java:110)\r\n        at io.smallrye.mutiny.groups.UniSubscribe.with(UniSubscribe.java:88)\r\n        at org.jboss.resteasy.reactive.server.handlers.UniResponseHandler.handle(UniResponseHandler.java:19)\r\n        at io.quarkus.resteasy.reactive.server.runtime.QuarkusResteasyReactiveRequestContext.invokeHandler(QuarkusResteasyReactiveRequestContext.java:123)\r\n        at org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:145)\r\n        at io.quarkus.vertx.core.runtime.VertxCoreRecorder$14.runWith(VertxCoreRecorder.java:576)\r\n        at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2449)\r\n        at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1478)\r\n        at org.jboss.threads.DelegatingRunnable.run(DelegatingRunnable.java:29)\r\n        at org.jboss.threads.ThreadLocalResettingRunnable.run(ThreadLocalResettingRunnable.java:29)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:1589)\r\n```\n\n### How to Reproduce?\n\nReproducer: https://github.com/TwoFX/resteasy-reactive-large-request-bug\r\n\r\nSteps to reproduce:\r\nRun `./mvnw verify`. There are two tests, one for a request body of around 5000 bytes and one for a request body of around 5000000 bytes. The first test succeeds, and the second test fails.\n\n### Output of `uname -a` or `ver`\n\nLinux markus-laptop 6.2.1-arch1-1 #1 SMP PREEMPT_DYNAMIC Sun, 26 Feb 2023 03:39:23 +0000 x86_64 GNU/Linux\n\n### Output of `java -version`\n\n```\r\nopenjdk version \"19.0.2\" 2023-01-17\r\nOpenJDK Runtime Environment (build 19.0.2+7)\r\nOpenJDK 64-Bit Server VM (build 19.0.2+7, mixed mode)\r\n```\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n3.0.0.Alpha4\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n```\r\nApache Maven 3.8.6 (84538c9988a25aec085021c365c560670ad80f63)\r\nMaven home: /home/markus/.m2/wrapper/dists/apache-maven-3.8.6-bin/67568434/apache-maven-3.8.6\r\nJava version: 19.0.2, vendor: N/A, runtime: /usr/lib/jvm/java-19-openjdk\r\nDefault locale: en_US, platform encoding: UTF-8\r\nOS name: \"linux\", version: \"6.2.1-arch1-1\", arch: \"amd64\", family: \"unix\"\r\n```\n\n### Additional information\n\nI have verified that the problem is NOT present in Quarkus 2.16.4.Final.\r\n\r\nI tried to test the current main, but unfortunately after changing the group id and the version the reproducer fails to build. Maven gives the following error:\r\n```\r\n[WARNING] The POM for io.quarkus:quarkus-hibernate-reactive-panache:jar:999-20230217.022801-642 is invalid, transitive dependencies (if any) will not be available: 1 problem was encountered while building the effective model for io.quarkus:quarkus-hibernate-reactive-panache:999-SNAPSHOT\r\n[ERROR] 'dependencies.dependency.version' for org.hibernate:hibernate-jpamodelgen-jakarta:jar is missing. @ \r\n```\r\nI'm not sure what I'm doing wrong here. It would be very nice if someone could assist me with this, as this is currently preventing me from testing potential fixes.\r\n\r\nI have digged into the bug a bit. The reason why we're on an executor thread in the first place is that the `InputHandler` does this if the request object is too large. Thus, for small request objects, we enter the `UniResultHandler` on a Vertx event loop thread, while for large request objects, we enter it on an executor thread.\r\n\r\nNow, (but, as noted above, I haven't tested any of this), my guess is that the first commit with this problem is 47b10aed49150aa5e71d7eae9e79b69e6787a0f9. Since then, the Uni subscription created by [`Panache.withTransaction`](https://github.com/quarkusio/quarkus/commit/47b10aed49150aa5e71d7eae9e79b69e6787a0f9#diff-66b7f197f4be0aa040828ae4fc8e1f05b72272ed4322661c657267203ad96101) uses a different `Executor`. In Quarkus 2, it is `AbstractJpaOperations::executeInVertxEventLoop` (see [here](https://github.com/quarkusio/quarkus/blob/2.16/extensions/panache/hibernate-reactive-panache-common/runtime/src/main/java/io/quarkus/hibernate/reactive/panache/common/runtime/AbstractJpaOperations.java#L138)). In Quarkus 3, it is the `org.hibernate.reactive.context.impl.VertxContext` (see [here](https://github.com/hibernate/hibernate-reactive/blob/7a7565bd81f3ba2b87af5022054fc358434c4457/hibernate-reactive-core/src/main/java/org/hibernate/reactive/mutiny/impl/MutinySessionFactoryImpl.java#L71)).\r\n\r\nNow, it turns out that [`VertxContext::execute`](https://github.com/hibernate/hibernate-reactive/blob/7a7565bd81f3ba2b87af5022054fc358434c4457/hibernate-reactive-core/src/main/java/org/hibernate/reactive/context/impl/VertxContext.java#L76) doesn't actually always execute the runnable on a Vertx event loop thread, as you can see in the `else` branch. I don't understand any of this well enough to know whether this is intentional or not -- perhaps, the line `runnable.run()` (line 90) should actually be `currentContext.executeInContext( x -> runnable.run() )`. So it is actually possible that this isn't a problem with Quarkus, but with Hibernate Reactive. Again, as I mentioned, I haven't tried this potential fix because I can't get Quarkus to build properly locally.\r\n\r\nI would very much like to contribute a fix for this myself if possible, I only need some feedback if my analysis is correct and some assistance with the \"POM is invalid\" problem described above.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31606/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31606/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
