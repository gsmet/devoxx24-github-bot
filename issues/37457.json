{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37457",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37457/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37457/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37457/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/37457",
  "id": 2021030143,
  "node_id": "I_kwDOCFbutM54dnj_",
  "number": 37457,
  "title": "currentVertxRequest.getCurrent in a SecurityIdentityAugmentor became null since 3.2.9 with GraphQL",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1320737519,
      "node_id": "MDU6TGFiZWwxMzIwNzM3NTE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/vertx",
      "name": "area/vertx",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1676631606,
      "node_id": "MDU6TGFiZWwxNjc2NjMxNjA2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/windows",
      "name": "env/windows",
      "color": "edea47",
      "default": false,
      "description": "Impacts Windows machines"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/302",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/302",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/302/labels",
    "id": 10458697,
    "node_id": "MI_kwDOCFbutM4An5ZJ",
    "number": 302,
    "title": "3.7.0",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 51,
    "state": "closed",
    "created_at": "2024-01-23T17:04:43Z",
    "updated_at": "2024-01-24T18:38:28Z",
    "due_on": null,
    "closed_at": "2024-01-24T12:34:43Z"
  },
  "comments": 17,
  "created_at": "2023-12-01T14:46:30Z",
  "updated_at": "2024-01-23T17:07:23Z",
  "closed_at": "2024-01-18T15:10:39Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nFrom 3.1.X to 3.2.8, the following SecurityIdentityAugmentor implementation:\r\n\r\n```java\r\n@ApplicationScoped\r\npublic class SecurityAugmentor implements SecurityIdentityAugmentor {\r\n\r\n    @Inject\r\n    private OidcClient oidcClient;\r\n\r\n    @Inject\r\n    private OidcIdentityProvider oidcProvider;\r\n\r\n    @Inject\r\n    private CurrentVertxRequest currentVertxRequest;\r\n\r\n    @Override\r\n    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\r\n        if (identity.isAnonymous()) {\r\n            // Not authenticated calls come here, grant \"Guest\" account from configured Service Account\r\n            return buildGuestIdentity(identity, context);\r\n        }\r\n        return context.runBlocking(QuarkusSecurityIdentity.builder(identity)::build);\r\n    }\r\n\r\n    @ActivateRequestContext\r\n    public Uni<SecurityIdentity> buildGuestIdentity(SecurityIdentity identity, AuthenticationRequestContext context) {\r\n        return oidcClient.getTokens(Map.of()).chain(tokens -> {\r\n\r\n            RefreshToken rt = new RefreshToken(tokens.getRefreshToken());\r\n            AccessTokenCredential atc = new AccessTokenCredential(tokens.getAccessToken(), rt);\r\n\r\n            // Prepare an authentication request to call the OIDC identity provider, or else the current\r\n            // request will be seen has not authenticated\r\n            var tar = new TokenAuthenticationRequest(atc);\r\n            // Save the RountingContext (URL ...) of the current request in the authentication request\r\n            if (currentVertxRequest != null && currentVertxRequest.getCurrent() != null) {\r\n                HttpSecurityUtils.setRoutingContextAttribute(tar, currentVertxRequest.getCurrent());\r\n                return oidcProvider.authenticate(tar, context);\r\n            } else {\r\n                // A query is received on a not functional path\r\n                // Either health check or flood, keep the incoming identity (will result in a 401)\r\n                return Uni.createFrom().item(identity);\r\n            }\r\n            // Let call again Keycloak to get proper authenticated context\r\n        }).onItem().transform(s -> build(s).get());\r\n    }\r\n```\r\n\r\nwas able to retrieve a `currentVertxRequest.getCurrent()` value upon unauthenticated requests on any path of my application.\r\nThen the class was granting a limited right service account authentication to simulate kind of a not authenticated Guest access to all endpoints.\r\n   \r\nFrom 3.2.9, the returned current Vertx context is *null*.  \r\nTrying to workaround with RoutingContext injection leads to the following exception (in both POST GraphQL or GET rest http requests):\r\n```\r\n2023-12-01 15:31:29 [vert.x-eventloop-thread-3] ERROR io.quarkus.vertx.http.runtime.QuarkusErrorHandler - HTTP Request to /graphql failed, error id: da5cd711-ea78-46de-8a53-34b1c1a95605-1\r\njakarta.enterprise.inject.IllegalProductException: Normal scoped producer method may not return null: io.quarkus.vertx.http.runtime.CurrentVertxRequest.getCurrent()\r\n        at io.quarkus.vertx.http.runtime.CurrentVertxRequest_ProducerMethod_getCurrent_6dc23d16d53ba5c34e1e7b6f54290fd7b9aebd76_Bean.doCreate(Unknown Source)\r\n        at io.quarkus.vertx.http.runtime.CurrentVertxRequest_ProducerMethod_getCurrent_6dc23d16d53ba5c34e1e7b6f54290fd7b9aebd76_Bean.create(Unknown Source)\r\n        at io.quarkus.vertx.http.runtime.CurrentVertxRequest_ProducerMethod_getCurrent_6dc23d16d53ba5c34e1e7b6f54290fd7b9aebd76_Bean.create(Unknown Source)\r\n        at io.quarkus.arc.impl.RequestContext.getIfActive(RequestContext.java:74)\r\n        at io.quarkus.arc.impl.ClientProxies.getDelegate(ClientProxies.java:30)\r\n        at io.vertx.ext.web.CurrentVertxRequest_ProducerMethod_getCurrent_6dc23d16d53ba5c34e1e7b6f54290fd7b9aebd76_ClientProxy.arc$delegate(Unknown Source)\r\n        at io.vertx.ext.web.CurrentVertxRequest_ProducerMethod_getCurrent_6dc23d16d53ba5c34e1e7b6f54290fd7b9aebd76_ClientProxy.put(Unknown Source)\r\n        at io.quarkus.oidc.runtime.OidcIdentityProvider.authenticate(OidcIdentityProvider.java:70)\r\n        at io.quarkus.oidc.runtime.OidcIdentityProvider_ClientProxy.authenticate(Unknown Source)\r\n        at <<<< The security Augmentor on line oidcProvider.authenticate >>>>\r\n        at io.smallrye.context.impl.wrappers.SlowContextualFunction.apply(SlowContextualFunction.java:21)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.performInnerSubscription(UniOnItemTransformToUni.java:68)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.onItem(UniOnItemTransformToUni.java:57)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransform$UniOnItemTransformProcessor.onItem(UniOnItemTransform.java:43)\r\n        at io.smallrye.mutiny.operators.uni.UniOperatorProcessor.onItem(UniOperatorProcessor.java:47)\r\n        at io.smallrye.mutiny.operators.uni.UniOperatorProcessor.onItem(UniOperatorProcessor.java:47)\r\n        at io.smallrye.mutiny.vertx.AsyncResultUni.lambda$subscribe$1(AsyncResultUni.java:35)\r\n        at io.smallrye.mutiny.vertx.DelegatingHandler.handle(DelegatingHandler.java:25)\r\n        at io.vertx.ext.web.client.impl.HttpContext.handleDispatchResponse(HttpContext.java:397)\r\n        at io.vertx.ext.web.client.impl.HttpContext.execute(HttpContext.java:384)\r\n        at io.vertx.ext.web.client.impl.HttpContext.next(HttpContext.java:362)\r\n        at io.vertx.ext.web.client.impl.HttpContext.fire(HttpContext.java:329)\r\n        at io.vertx.ext.web.client.impl.HttpContext.dispatchResponse(HttpContext.java:291)\r\n        at io.vertx.ext.web.client.impl.HttpContext.lambda$null$7(HttpContext.java:507)\r\n        at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)\r\n        at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)\r\n        at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\n```\n\n### Expected behavior\n\n`currentVertxRequest.getCurrent()` still returns something when an Http query (REST or GraphQL) has been received and routed to the SecurityAugmentor.\n\n### Actual behavior\n\n`currentVertxRequest.getCurrent()` returns null.\r\nInjection of `RutingContext` leads to an exception.\n\n### How to Reproduce?\n\nSteps to reproduce:\r\n1. Add the proposed security Augmentor to any Quarkus application that handle OIDC authentication\r\n2. Launch a query to an authenticated path of the application without token\n\n### Output of `uname -a` or `ver`\n\nWindows\n\n### Output of `java -version`\n\njava version \"17\" 2021-09-14 LTS Java(TM) SE Runtime Environment (build 17+35-LTS-2724) Java HotSpot(TM) 64-Bit Server VM (build 17+35-LTS-2724, mixed mode, sharing)\n\n### Quarkus version or git rev\n\n3.2.9.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.2\n\n### Additional information\n\nThe 3.2.9 release note includes some backports (from 3.7) related to RoutingContext, GraphQL (and Vertx), mainly for WebSocket, but I didn't see any direct correlation from those commits that could have lead to this current change of behavior.\r\nNeither did I found any other way to retrieve the RoutingContext in the Tests that were added.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37457/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37457/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
