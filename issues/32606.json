{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32606",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32606/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32606/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32606/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/32606",
  "id": 1665870884,
  "node_id": "I_kwDOCFbutM5jSywk",
  "number": 32606,
  "title": "Quarkus Caching - Allow per item expiry time.",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1808747697,
      "node_id": "MDU6TGFiZWwxODA4NzQ3Njk3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/cache",
      "name": "area/cache",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 6,
  "created_at": "2023-04-13T07:25:00Z",
  "updated_at": "2023-04-18T02:15:54Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\n\nCurrently, quarkus caching only invalidates entries based on a fixed time since they were added, or accessed.   Provide an additional API that can specify when an entry is to be expired.  This would be useful, for example, for when caching a resource fetched using the JaxRS client,  based on the Cache-control header.\n\n### Implementation ideas\n\nIf the cache is accessed directly, there is the method:\r\n\r\n```\r\nCache.get(\"{key}\" , (key)->{\r\n   // code to get value;\r\n   return value;\r\n});\r\n```\r\n\r\nThis could be enhanced by returning a wrapped value, where needed:\r\n```\r\nCache.get(\"{key}\" , ()->{\r\n      // code to get value,  \r\n      // (if via a remote server, could parse the max-age from the cache-control header, into expiryTime)\r\n \r\n      \r\n      return Cache.result(value, expiryTime);\r\n});\r\n```\r\n\r\n\r\n\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32606/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32606/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
