{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31497",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31497/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31497/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31497/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/31497",
  "id": 1604531840,
  "node_id": "I_kwDOCFbutM5fozaA",
  "number": 31497,
  "title": "Enabled micrometer.binder.http-server should also capture parameterized sub-resources",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2236031886,
      "node_id": "MDU6TGFiZWwyMjM2MDMxODg2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/metrics",
      "name": "area/metrics",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/316",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/316",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/316/labels",
    "id": 10687661,
    "node_id": "MI_kwDOCFbutM4AoxSt",
    "number": 316,
    "title": "3.8.3",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 46,
    "state": "closed",
    "created_at": "2024-03-15T08:52:39Z",
    "updated_at": "2024-04-11T14:28:38Z",
    "due_on": null,
    "closed_at": "2024-03-15T17:50:56Z"
  },
  "comments": 24,
  "created_at": "2023-03-01T08:49:22Z",
  "updated_at": "2024-03-20T12:08:51Z",
  "closed_at": "2024-03-06T12:29:28Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nIf `quarkus.micrometer.binder.http-server.enabled=true` is enabled, then quarkus generates metrics for resource invocations. That works fine for \"primary resources\" but not for sub-resources, as shown in the example below.\r\n\r\nA gist with an example can be found here: https://gist.github.com/thomasdarimont/cd8c10ed57ba8dc2e1bd888e1bc99e4f\r\n\r\nGiven resources like:\r\n```java\r\npackage org.acme;\r\n\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.PathParam;\r\nimport javax.ws.rs.container.ResourceContext;\r\nimport javax.ws.rs.core.Context;\r\n\r\n@Path(\"/resource\")\r\npublic class DemoResource {\r\n\r\n    @Context\r\n    ResourceContext resourceContext;\r\n\r\n    @GET\r\n    @Path(\"{param1}\")\r\n    public String resource(@PathParam(\"param1\") String param1) {\r\n        return \"resource1:\" + param1;\r\n    }\r\n\r\n    @Path(\"{param1}/subresource\")\r\n    public DemoSubResource subResource(@PathParam(\"param1\") String param1) {\r\n        return resourceContext.initResource(new DemoSubResource(param1));\r\n    }\r\n\r\n}\r\n```\r\n\r\n```java\r\npackage org.acme;\r\n\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.PathParam;\r\n\r\npublic class DemoSubResource {\r\n\r\n    private final String param1;\r\n\r\n    public DemoSubResource(String param1) {\r\n        this.param1 = param1;\r\n    }\r\n\r\n    @GET\r\n    @Path(\"{param2}\")\r\n    public String subresource(@PathParam(\"param2\") String param2) {\r\n        return \"resource:\" + param1 + \":subresource:\" + param2;\r\n    }\r\n}\r\n```\r\n\r\nRequests to the primary-resource `http://localhost:8080/resource/1` produce the following metric in http://localhost:8080/q/metrics:\r\n```\r\nhttp_server_requests_seconds_count{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/resource/{param1}\",} 7.0\r\nhttp_server_requests_seconds_sum{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/resource/{param1}\",} 4.500558364\r\n```\r\nWe can see that the `param1` is correctly templated to avoid capturing individual parameter instances.\r\n\r\nHowever, requests for the sub-resource `http://localhost:8080/resource/1/subresource/3` only produces:\r\n```\r\nhttp_server_requests_seconds_count{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/resource/{param1}/subresource\",} 14.0\r\nhttp_server_requests_seconds_sum{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/resource/{param1}/subresource\",} 46.928154483\r\n```\r\nAs we see, the ` param2` is missing in the recorded URI template.\r\n\r\nIt would be great if parameterized sub-resources would also be considered for template URI generation to properly collect metrics.\r\n\r\n\r\n\r\n### Implementation ideas\r\n\r\nIt seems that `io.quarkus.resteasy.runtime.QuarkusRestPathTemplateInterceptor` populates the `UrlPathTemplate` which is then used by `io.quarkus.micrometer.runtime.binder.vertx.HttpRequestMetric#applyTemplateMatching (via getUrlTemplatePath())` to replace concrete parameters with the templated path.\r\n\r\nThe `QuarkusRestPathTemplateInterceptor` is emitted via the `RestPathAnnotationProcessor`.\r\n\r\nThe logic in `RestPathAnnotationProcessor` or `QuarkusRestPathTemplateInterceptor` could be extended to support generating correctly templated URIs for sub-resources. ",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31497/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31497/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
