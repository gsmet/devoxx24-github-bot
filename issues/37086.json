{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37086",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37086/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37086/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37086/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/37086",
  "id": 1993341960,
  "node_id": "I_kwDOCFbutM52z_wI",
  "number": 37086,
  "title": "Quarkus 3.2.x: native compilation with Mandrel 23.1 fails with bouncycastle",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2023-11-14T18:44:38Z",
  "updated_at": "2023-11-14T20:35:40Z",
  "closed_at": "2023-11-14T20:35:40Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWhen a project that:\r\n- uses `bouncycastle` and \r\n- is configured to compile to language-level 17 \r\n\r\nis compiled with Mandrel 23.1 (JDK 21), the compilation fails. \r\n\r\n### Expected behavior\r\n\r\nThe project compiles, and the integration tests succeed.\r\n\r\n### Actual behavior\r\n\r\nCompilation fails with the following error(s):\r\n```\r\n...\r\n[1/8] Initializing...                                                                                    (5.0s @ 0.20GB)\r\n Java version: 21.0.1+12-LTS, vendor version: Mandrel-23.1.1.0-Final\r\n Graal compiler: optimization level: 2, target machine: x86-64-v3\r\n C compiler: gcc (redhat, x86_64, 8.5.0)\r\n Garbage collector: Serial GC (max heap size: 80% of RAM)\r\n 4 user-specific feature(s):\r\n - com.oracle.svm.thirdparty.gson.GsonFeature\r\n - io.quarkus.runner.Feature: Auto-generated class by Quarkus from the existing extensions\r\n - io.quarkus.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase\r\n - io.quarkus.security.BouncyCastleFeature\r\n------------------------------------------------------------------------------------------------------------------------\r\n 4 experimental option(s) unlocked:\r\n - '-H:+AllowFoldMethods' (origin(s): command line)\r\n - '-H:BuildOutputJSONFile' (origin(s): command line)\r\n - '-H:-UseServiceLoaderFeature' (origin(s): command line)\r\n - '-H:ReflectionConfigurationResources' (origin(s): 'META-INF/native-image/io.netty/netty-transport/native-image.properties' in 'file:///project/lib/io.netty.netty-transport-4.1.100.Final.jar')\r\n------------------------------------------------------------------------------------------------------------------------\r\nBuild resources:\r\n - 23.47GB of memory (75.6% of 31.06GB system memory, determined at start)\r\n - 8 thread(s) (100.0% of 8 available processor(s), determined at start)\r\njava.lang.IllegalAccessError: class io.quarkus.runner.Feature (in unnamed module @0x4f8d86e4) cannot access class org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport (in module org.graalvm.nativeimage) because module org.graalvm.nativeimage does not export org.graalvm.nativeimage.impl to unnamed module @0x4f8d86e4\r\n\tat io.quarkus.runner.Feature.runtimeReinitializedClasses(Unknown Source)\r\n\tat io.quarkus.runner.Feature.beforeAnalysis(Unknown Source)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$9(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:90)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:538)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:720)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:142)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:97)\r\njava.lang.IllegalAccessError: class io.quarkus.runner.Feature (in unnamed module @0x4f8d86e4) cannot access class org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport (in module org.graalvm.nativeimage) because module org.graalvm.nativeimage does not export org.graalvm.nativeimage.impl to unnamed module @0x4f8d86e4\r\n\tat io.quarkus.runner.Feature.runtimeReinitializedClasses(Unknown Source)\r\n\tat io.quarkus.runner.Feature.beforeAnalysis(Unknown Source)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$9(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:90)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:538)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:720)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:142)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:97)\r\njava.lang.IllegalAccessError: class io.quarkus.runner.Feature (in unnamed module @0x4f8d86e4) cannot access class org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport (in module org.graalvm.nativeimage) because module org.graalvm.nativeimage does not export org.graalvm.nativeimage.impl to unnamed module @0x4f8d86e4\r\n\tat io.quarkus.runner.Feature.runtimeReinitializedClasses(Unknown Source)\r\n\tat io.quarkus.runner.Feature.beforeAnalysis(Unknown Source)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$9(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:90)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:538)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:720)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:142)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:97)\r\njava.lang.IllegalAccessError: class io.quarkus.runner.Feature (in unnamed module @0x4f8d86e4) cannot access class org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport (in module org.graalvm.nativeimage) because module org.graalvm.nativeimage does not export org.graalvm.nativeimage.impl to unnamed module @0x4f8d86e4\r\n\tat io.quarkus.runner.Feature.runtimeReinitializedClasses(Unknown Source)\r\n\tat io.quarkus.runner.Feature.beforeAnalysis(Unknown Source)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$9(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:90)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:538)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:720)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:142)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:97)\r\njava.lang.IllegalAccessError: class io.quarkus.runner.Feature (in unnamed module @0x4f8d86e4) cannot access class org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport (in module org.graalvm.nativeimage) because module org.graalvm.nativeimage does not export org.graalvm.nativeimage.impl to unnamed module @0x4f8d86e4\r\n\tat io.quarkus.runner.Feature.runtimeReinitializedClasses(Unknown Source)\r\n\tat io.quarkus.runner.Feature.beforeAnalysis(Unknown Source)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$9(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:90)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:538)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:720)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:142)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:97)\r\njava.lang.IllegalAccessError: class io.quarkus.runner.Feature (in unnamed module @0x4f8d86e4) cannot access class org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport (in module org.graalvm.nativeimage) because module org.graalvm.nativeimage does not export org.graalvm.nativeimage.impl to unnamed module @0x4f8d86e4\r\n\tat io.quarkus.runner.Feature.runtimeReinitializedClasses(Unknown Source)\r\n\tat io.quarkus.runner.Feature.beforeAnalysis(Unknown Source)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$9(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:90)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:538)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:720)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:142)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:97)\r\njava.lang.IllegalAccessError: class io.quarkus.runner.Feature (in unnamed module @0x4f8d86e4) cannot access class org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport (in module org.graalvm.nativeimage) because module org.graalvm.nativeimage does not export org.graalvm.nativeimage.impl to unnamed module @0x4f8d86e4\r\n\tat io.quarkus.runner.Feature.runtimeReinitializedClasses(Unknown Source)\r\n\tat io.quarkus.runner.Feature.beforeAnalysis(Unknown Source)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$9(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:90)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:538)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:720)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:142)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:97)\r\njava.lang.IllegalAccessError: class io.quarkus.runner.Feature (in unnamed module @0x4f8d86e4) cannot access class org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport (in module org.graalvm.nativeimage) because module org.graalvm.nativeimage does not export org.graalvm.nativeimage.impl to unnamed module @0x4f8d86e4\r\n\tat io.quarkus.runner.Feature.runtimeReinitializedClasses(Unknown Source)\r\n\tat io.quarkus.runner.Feature.beforeAnalysis(Unknown Source)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$9(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:90)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:773)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:538)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:720)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:142)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:97)\r\n[2/8] Performing analysis...  [*****]                                                                   (37.4s @ 1.12GB)\r\n   13,545 reachable types   (88.0% of   15,391 total)\r\n   18,685 reachable fields  (59.8% of   31,254 total)\r\n   67,152 reachable methods (59.5% of  112,869 total)\r\n    4,790 types,   159 fields, and 3,929 methods registered for reflection\r\n       61 types,    59 fields, and    55 methods registered for JNI access\r\n        4 native libraries: dl, pthread, rt, z\r\n\r\n------------------------------------------------------------------------------------------------------------------------\r\n------------------------------------------------------------------------------------------------------------------------\r\n                        5.0s (11.6% of total time) in 78 GCs | Peak RSS: 2.33GB | CPU load: 5.84\r\n------------------------------------------------------------------------------------------------------------------------\r\nProduced artifacts:\r\n /project/quarkus-bouncycastle-999-SNAPSHOT-runner-build-output-stats.json (build_info)\r\n========================================================================================================================\r\nFinished generating 'quarkus-bouncycastle-999-SNAPSHOT-runner' in 42.7s.\r\nError: Unsupported features in 2 methods\r\nDetailed message:\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use\r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.prng.SP800SecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with\r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n  reading static field org.bouncycastle.jcajce.provider.drbg.DRBG$Default.random\r\n    at <unknown-location>\r\n  registered as read because: null\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use\r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.prng.SP800SecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with\r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n  trying to constant fold static field org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV.random\r\n    at org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV.engineSetSeed(Unknown Source)\r\n  parsing method org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV.engineSetSeed(Unknown Source) reachable via the parsing context\r\n    at java.security.SecureRandom.setSeed(SecureRandom.java:721)\r\n    at java.security.SecureRandom.setSeed(SecureRandom.java:754)\r\n    at java.util.Random.<init>(Random.java:359)\r\n    at java.security.SecureRandom.<init>(SecureRandom.java:224)\r\n    at org.bouncycastle.crypto.CryptoServicesRegistrar$ThreadLocalSecureRandomProvider.get(CryptoServicesRegistrar.java:535)\r\n    at org.bouncycastle.crypto.CryptoServicesRegistrar.getSecureRandom(CryptoServicesRegistrar.java:132)\r\n    at org.bouncycastle.crypto.CryptoServicesRegistrar.getSecureRandom(CryptoServicesRegistrar.java:143)\r\n    at org.bouncycastle.crypto.KeyGenerationParameters.<init>(KeyGenerationParameters.java:24)\r\n    at org.bouncycastle.crypto.params.ECKeyGenerationParameters.<init>(Unknown Source)\r\n    at org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.createKeyGenParamsJCE(Unknown Source)\r\n    at root method.(Unknown Source)\r\n\r\n\r\ncom.oracle.svm.core.util.UserError$UserException: Unsupported features in 2 methods\r\nDetailed message:\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use\r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.prng.SP800SecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with\r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n  reading static field org.bouncycastle.jcajce.provider.drbg.DRBG$Default.random\r\n    at <unknown-location>\r\n  registered as read because: null\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use\r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.prng.SP800SecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with\r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n  trying to constant fold static field org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV.random\r\n    at org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV.engineSetSeed(Unknown Source)\r\n  parsing method org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV.engineSetSeed(Unknown Source) reachable via the parsing context\r\n    at java.security.SecureRandom.setSeed(SecureRandom.java:721)\r\n    at java.security.SecureRandom.setSeed(SecureRandom.java:754)\r\n    at java.util.Random.<init>(Random.java:359)\r\n    at java.security.SecureRandom.<init>(SecureRandom.java:224)\r\n    at org.bouncycastle.crypto.CryptoServicesRegistrar$ThreadLocalSecureRandomProvider.get(CryptoServicesRegistrar.java:535)\r\n    at org.bouncycastle.crypto.CryptoServicesRegistrar.getSecureRandom(CryptoServicesRegistrar.java:132)\r\n    at org.bouncycastle.crypto.CryptoServicesRegistrar.getSecureRandom(CryptoServicesRegistrar.java:143)\r\n    at org.bouncycastle.crypto.KeyGenerationParameters.<init>(KeyGenerationParameters.java:24)\r\n    at org.bouncycastle.crypto.params.ECKeyGenerationParameters.<init>(Unknown Source)\r\n    at org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.createKeyGenParamsJCE(Unknown Source)\r\n    at root method.(Unknown Source)\r\n\r\n\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.core.util.UserError.abort(UserError.java:85)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.FallbackFeature.reportAsFallback(FallbackFeature.java:248)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:814)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:592)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:550)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:538)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:720)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.start(NativeImageGeneratorRunner.java:142)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:97)\r\nCaused by: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Unsupported features in 2 methods\r\nDetailed message:\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use\r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.prng.SP800SecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with\r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n  reading static field org.bouncycastle.jcajce.provider.drbg.DRBG$Default.random\r\n    at <unknown-location>\r\n  registered as read because: null\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use\r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.prng.SP800SecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with\r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n  trying to constant fold static field org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV.random\r\n    at org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV.engineSetSeed(Unknown Source)\r\n  parsing method org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV.engineSetSeed(Unknown Source) reachable via the parsing context\r\n    at java.security.SecureRandom.setSeed(SecureRandom.java:721)\r\n    at java.security.SecureRandom.setSeed(SecureRandom.java:754)\r\n    at java.util.Random.<init>(Random.java:359)\r\n    at java.security.SecureRandom.<init>(SecureRandom.java:224)\r\n    at org.bouncycastle.crypto.CryptoServicesRegistrar$ThreadLocalSecureRandomProvider.get(CryptoServicesRegistrar.java:535)\r\n    at org.bouncycastle.crypto.CryptoServicesRegistrar.getSecureRandom(CryptoServicesRegistrar.java:132)\r\n    at org.bouncycastle.crypto.CryptoServicesRegistrar.getSecureRandom(CryptoServicesRegistrar.java:143)\r\n    at org.bouncycastle.crypto.KeyGenerationParameters.<init>(KeyGenerationParameters.java:24)\r\n    at org.bouncycastle.crypto.params.ECKeyGenerationParameters.<init>(Unknown Source)\r\n    at org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.createKeyGenParamsJCE(Unknown Source)\r\n    at root method.(Unknown Source)\r\n\r\n\r\n\tat org.graalvm.nativeimage.pointsto/com.oracle.graal.pointsto.constraints.UnsupportedFeatures.report(UnsupportedFeatures.java:129)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:809)\r\n\t... 6 more\r\n...\r\n```\r\n\r\n### How to Reproduce?\r\n\r\nReproducer:\r\n- clone https://github.com/turing85/quarkus-bouncycastle:\r\n  ```bash\r\n  git clone https://github.com/turing85/quarkus-bouncycastle.git\r\n  cd quarkus-bouncycastle\r\n  ```\r\n- build the project in JVM mode:\r\n  ```bash\r\n  ./mvnw clean verify\r\n  ```\r\n- Notice that the test succeed\r\n- build the project natively, with mandrel `23.0` (JDK 17):\r\n  ```bash\r\n  ./mvnw --define native clean verify\r\n  ```\r\n- Notice that the test succeed\r\n- build the project natively, with mandrel `23.1` (JDK 21):\r\n  ```bash\r\n  ./mvnw --define native --define mandrel-java21 clean verify\r\n  ``` \r\n- observe the aforementioned error\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n`Linux xxx 5.15.0-52-generic #58-Ubuntu SMP Thu Oct 13 08:03:55 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\n### Output of `java -version`\r\n\r\n```\r\nopenjdk version \"21\" 2023-09-19 LTS\r\nOpenJDK Runtime Environment Temurin-21+35 (build 21+35-LTS)\r\nOpenJDK 64-Bit Server VM Temurin-21+35 (build 21+35-LTS, mixed mode, sharing)\r\n```\r\n\r\n### Mandrel or GraalVM version (if different from Java)\r\n\r\nJDK 17: `quay.io/quarkus/ubi-quarkus-mandrel-builder-image:23.0-jdk17@sha256:6f96bcaa18b4359cd8f60545d091ccca3717283746bcbb7342912c1a3a961fa0`\r\nJDK 21: `quay.io/quarkus/ubi-quarkus-mandrel-builder-image:23.1-jdk21@sha256:08bee34cb8718c34f2190e3abda7dce300d3eff4fd3fd31cb0f449d1be0b1ab7`\r\n\r\n### Quarkus version or git rev\r\n\r\n`3.2.8.Final`\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n```\r\nApache Maven 3.9.4 (dfbb324ad4a7c8fb0bf182e6d91b0ae20e3d2dd9)\r\nMaven home: /home/marco/.m2/wrapper/dists/apache-maven-3.9.4-bin/32a55694/apache-maven-3.9.4\r\nJava version: 21, vendor: Eclipse Adoptium, runtime: /opt/java/mandrel/23.1.0.0-java21\r\nDefault locale: en_US, platform encoding: UTF-8\r\nOS name: \"linux\", version: \"5.15.0-52-generic\", arch: \"amd64\", family: \"unix\"\r\n```\r\n\r\n### Additional information\r\n\r\nThe reproducer requires a docker- or podman-installation to execute since the native build is done in a container.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37086/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37086/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
