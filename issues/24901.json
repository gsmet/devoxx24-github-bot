{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24901",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24901/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24901/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24901/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24901",
  "id": 1202337595,
  "node_id": "I_kwDOCFbutM5Hqjc7",
  "number": 24901,
  "title": "Streamlined config test profiles",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1273030910,
      "node_id": "MDU6TGFiZWwxMjczMDMwOTEw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/config",
      "name": "area/config",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 15,
  "created_at": "2022-04-12T20:10:50Z",
  "updated_at": "2024-08-21T18:10:55Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\n\nMany uses of `@TestProfile` I have encountered (including many of the uses in Quarkus core) use this mechanism to override a few config properties. I.e. the referenced class overrides `QuarkusTestProfile#getConfigOverrides()` and / or also `QuarkusTestProfile#getConfigProfile()`. This is a very useful mechanism but it has the downside of being rather verbose.\r\n\r\nI would like to see a streamlined alternative, which doesn't require declaring a full-blown `QuarkusTestProfile` subclass, but only list the config overrides and / or config profile to be used using string literals.\n\n### Implementation ideas\n\nWhat I had in mind would be something like this:\r\n\r\n```java\r\n@QuarkusTest\r\n@TestProfile(configOverrides = \"\"\"\r\n        quarkus.log.console.level=DEBUG\r\n        quarkus.log.min-level=DEBUG\r\n        quarkus.log.category.\"io.quarkus\".level=DEBUG\r\n        \"\"\", configProfile = \"someotherprofile\")\r\nclass MyTest {\r\n}\r\n```\r\n\r\nHere both `configOverrides` and `configProfile` should be optional and probably mutually exclusive to the currently existing `value`.\r\n\r\nAs can be seen `configOverrides` here is a plain String rather than a `Map<String, String>` as returned by `QuarkusTestProfile#getConfigOverrides()`. Since I even in my `getConfigOverrides()` like to parse the overrides from a properties String literal like in this example, I consider this to be a very nice feature. The reason I like this, is because it allows me to copy and paste from / to `application.properties` files without having to manually \"translate\" this into arguments for `Map.of()` or similar.\r\n\r\nSee also discussion on Zulip: https://quarkusio.zulipchat.com/#narrow/stream/187030-users/topic/Profile-specific.20properties.20in.20test.20folder",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24901/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24901/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
