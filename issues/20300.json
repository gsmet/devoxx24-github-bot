{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20300",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20300/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20300/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20300/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20300",
  "id": 1002287802,
  "node_id": "I_kwDOCFbutM47vbK6",
  "number": 20300,
  "title": "Provide a separate annotation for registering classes for serialization",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2021-09-21T11:33:59Z",
  "updated_at": "2021-09-22T14:02:34Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nAs discussed in https://github.com/quarkusio/quarkus/pull/20167#issuecomment-920629104 the use of `@RegisterForReflection(targets = String.class, serialization = true)` is a bit confusing since it doesn't make clear whether the corresponding class should also be registered for reflection in general (right now it does not). \r\n\r\nAt the moment it's also not clear how to register a class for both reflection and serialization. Would\r\n```java\r\n@RegisterForReflection(targets = String.class)\r\npublic class ReflectionConfig { }\r\n\r\n@RegisterForReflection(targets = String.class, serialization = true)\r\npublic class SerializationConfig { }\r\n```\r\ndo the trick in such cases?\r\n\r\nAs a result this feature request is about providing a cleaner interface (through a new annotation) to the end users for registering classes for reflection, serialization, or both.\r\n\r\n### Implementation ideas\r\n\r\nAs [proposed by](https://github.com/quarkusio/quarkus/pull/20167#issuecomment-920710942) @vsevel it looks like a better approach would be to use a new annotation (instead of parameterizing `RegisterForReflection`).\r\n\r\nThen to register a class for both reflection and serialization one should do the following:\r\n```java\r\n@RegisterForReflection\r\n@RegisterForSerialization\r\npublic class MyClass {\r\n}\r\n```\r\nor\r\n```java\r\n@RegisterForReflection(targets = String.class)\r\n@RegisterForSerialization(targets = String.class)\r\npublic class ReflectionConfig { }\r\n```\r\n\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20300/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20300/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
