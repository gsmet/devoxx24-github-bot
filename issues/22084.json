{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22084",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22084/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22084/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22084/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/22084",
  "id": 1075855883,
  "node_id": "I_kwDOCFbutM5AIEIL",
  "number": 22084,
  "title": "Custom credentials provider broken in the latest 2.5.1.Final and since from 2.0.0.Final release. It was working till 1.13.7.Final release",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346625,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjU=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/invalid",
      "name": "triage/invalid",
      "color": "e4e669",
      "default": false,
      "description": "This doesn't seem right"
    },
    {
      "id": 1676631606,
      "node_id": "MDU6TGFiZWwxNjc2NjMxNjA2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/windows",
      "name": "env/windows",
      "color": "edea47",
      "default": false,
      "description": "Impacts Windows machines"
    },
    {
      "id": 2955097332,
      "node_id": "MDU6TGFiZWwyOTU1MDk3MzMy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/agroal",
      "name": "area/agroal",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 10,
  "created_at": "2021-12-09T18:05:34Z",
  "updated_at": "2021-12-15T07:54:36Z",
  "closed_at": "2021-12-13T15:47:36Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\n### Quarkus Custom credential provider not working in case of multiple providers one per datasource.\r\n\r\nQuarkus Custom credentials provider is broken since version _2.0.0.Final_ release till latest _2.5.1.Final_ and not referring to the correct credential provider in case of multiple credentials provider for different databases. This was working till 1.13.7.Final Quarkus version. \r\n\r\nThe project uses Agrol DataSource to create connection pool with the database. Multiple datasources are used in the project. In this case, we have to databases, one is MSSQL and other is Redshift.\r\n\r\nWe need to read password from external source before making connection with the database for provided database user. The problem is, at run time, wrong customer credential provider implementation is getting referred or called. Is it injecting default datasource credentials provider everywhere?\r\n \r\nSo for example, if I have below properties in the properties file:\r\n\r\nThe first section of properties are for MSSQL database. Let's consider MS SQL Server database which has Quarkus support.\r\n\r\n**MSSQL:**\r\n\r\n```\r\nquarkus.datasource.db-kind=mssql\r\nquarkus.datasource.jdbc.max-size=50\r\nquarkus.datasource.jdbc.min-size=10\r\nquarkus.datasource.username=test\r\nuarkus.datasource.password=test123\r\nquarkus.datasource.credentials-provider = mssqlcredentialsprovider\r\nquarkus.datasource.credentials-provider-name = mssql-credentials-provider\r\n```\r\n\r\nThe second section of properties refer to other redshift database.\r\n\r\n**Redshift:**\r\n\r\n```\r\nquarkus.datasource.redshift.db-kind=other\r\nquarkus.datasource.redshift.jdbc.driver=com.amazon.redshift.jdbc42.Driver\r\nquarkus.datasource.redshift.jdbc.url=jdbc:redshift://testinstance:5439/test_db\r\nquarkus.datasource.redshift.username=testuser\r\nquarkus.datasource.redshift.password=testpassword\r\nquarkus.datasource.redshift.credentials-provider = redshiftcredentialsprovider\r\nquarkus.datasource.redshift.credentials-provider-name = redshift-credentials-provider\r\n```\r\n\r\nThe code has correct implementation of Custom credential providers. I have changed below code just for description. My requirement is that I need to read password for the user from other source such as Amazon SSM parameters which is supported from Quarkus release version 2.0.0.Final.\r\n\r\nHere is example of two credentials provider implementations:\r\n\r\n**MSSQL:**\r\n\r\n```\r\n@ApplicationScoped\r\n@Unremovable\r\n@Named(\"mssql-credentials-provider\")\r\npublic class MSSQLCredentialsProvider implements CredentialsProvider {\r\n\r\n\t@ConfigProperty(name = \"quarkus.datasource.username\")\r\n\tprivate String databaseUserName;\t\r\n\r\n\t@Override\r\n\tpublic Map<String, String> getCredentials(String credentialsProviderName) {\t\t\r\n\t\tMap<String, String> properties = new HashMap<>();\t\t\r\n\t\ttry {\r\n\t\t\tproperties.put(USER_PROPERTY_NAME, databaseUserName);\r\n\t\t\tproperties.put(PASSWORD_PROPERTY_NAME, methoToReadPassWordFromOtherSource());\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\t\t\t\r\n\t\t}\r\n\t\treturn properties;\r\n\t}\r\n}\r\n```\r\n\r\n\r\n**Redshift:**\r\n\r\n```\r\n@ApplicationScoped\r\n@Unremovable\r\n@Named(\"redshift-credentials-provider\")\r\npublic class RedshiftCredentialsProvider implements CredentialsProvider {\t\r\n\r\n\t@ConfigProperty(name = \"quarkus.datasource.redshift.username\")\r\n\tprivate String redshiftDatabaseUserName;\t\r\n\r\n\t@Override\r\n\tpublic Map<String, String> getCredentials(String credentialsProviderName) {\t\t\t\t\t\t\r\n\t\tMap<String, String> properties = new HashMap<>();\t\t\r\n\t\ttry {\r\n\t\t\tproperties.put(USER_PROPERTY_NAME, redshiftDatabaseUserName);\r\n\t\t\tproperties.put(PASSWORD_PROPERTY_NAME, methoToReadPassWordFromOtherSource());\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\t\t\t\r\n\t\t}\r\n\t\treturn properties;\r\n\t}\r\n}\r\n```\r\n\r\nThe property **_quarkus.datasource.credentials-provider-name_** for both credential provider refer to the correct bean implementation. however at run time, MSSQL credentials provider implementation is getting called for redshift credentials provider. So It looks like it is injecting or invoking default datasource credentials provider every time?\r\n\r\n**Pom file:**\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<project\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"\r\n\txmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<groupId>com.testcomp.tstproj</groupId>\r\n\t<artifactId>tst-prj-api</artifactId>\r\n\t<version>1.0.0-SNAPSHOT</version>\r\n\t<properties>\r\n\t\t<compiler-plugin.version>3.8.1</compiler-plugin.version>\r\n\t\t<maven.compiler.parameters>true</maven.compiler.parameters>\r\n\t\t<maven.compiler.source>11</maven.compiler.source>\r\n\t\t<maven.compiler.target>11</maven.compiler.target>\r\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n\t\t<quarkus-plugin.version>1.12.0.Final</quarkus-plugin.version>\r\n\t\t<quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>\r\n\t\t<quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>\r\n\t\t<quarkus.platform.version>1.12.0.Final</quarkus.platform.version>\r\n\t\t<surefire-plugin.version>2.22.1</surefire-plugin.version>\t\r\n\t</properties>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>${quarkus.platform.group-id}</groupId>\r\n\t\t\t\t<artifactId>${quarkus.platform.artifact-id}</artifactId>\r\n\t\t\t\t<version>${quarkus.platform.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-resteasy-jackson</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-arc</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-resteasy</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-junit5</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.rest-assured</groupId>\r\n\t\t\t<artifactId>rest-assured</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-junit5-mockito</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-smallrye-openapi</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<version>1.18.16</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.commons</groupId>\r\n\t\t\t<artifactId>commons-lang3</artifactId>\r\n\t\t\t<version>3.12.0</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-jdbc-mssql</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t<artifactId>quarkus-agroal</artifactId>\r\n\t\t</dependency>\t\t\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.amazon.redshift</groupId>\r\n\t\t\t<artifactId>redshift-jdbc42-no-awssdk</artifactId>\r\n\t\t\t<version>1.2.45.1069</version>\r\n\t\t\t<exclusions>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>com.sun.activation</groupId>\r\n\t\t\t\t\t<artifactId>jakarta.activation</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>com.github.java-json-tools</groupId>\r\n\t\t\t\t\t<artifactId>msg-simple</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>com.github.java-json-tools</groupId>\r\n\t\t\t\t\t<artifactId>jackson-coreutils</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>com.github.java-json-tools</groupId>\r\n\t\t\t\t\t<artifactId>json-patch</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>com.fasterxml.jackson.module</groupId>\r\n\t\t\t\t\t<artifactId>jackson-modules-base</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>com.fasterxml.jackson.module</groupId>\r\n\t\t\t\t\t<artifactId>jackson-module-jaxb-annotations</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>com.fasterxml.jackson</groupId>\r\n\t\t\t\t\t<artifactId>jackson-base</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>com.fasterxml.jackson.jaxrs</groupId>\r\n\t\t\t\t\t<artifactId>jackson-jaxrs-base</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>com.fasterxml.jackson.jaxrs</groupId>\r\n\t\t\t\t\t<artifactId>jackson-jaxrs-json-provider</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t</exclusions>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.antlr</groupId>\r\n\t\t\t<artifactId>antlr4</artifactId>\r\n\t\t\t<version>4.5.3</version>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>false</optional>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>io.quarkus</groupId>\r\n\t\t\t\t<artifactId>quarkus-maven-plugin</artifactId>\r\n\t\t\t\t<version>${quarkus-plugin.version}</version>\r\n\t\t\t\t<extensions>true</extensions>\r\n\t\t\t\t<executions>\r\n\t\t\t\t\t<execution>\r\n\t\t\t\t\t\t<goals>\r\n\t\t\t\t\t\t\t<goal>build</goal>\r\n\t\t\t\t\t\t\t<goal>generate-code</goal>\r\n\t\t\t\t\t\t\t<goal>generate-code-tests</goal>\r\n\t\t\t\t\t\t</goals>\r\n\t\t\t\t\t</execution>\r\n\t\t\t\t</executions>\r\n\t\t\t</plugin>\r\n\t\t\t<plugin>\r\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n\t\t\t\t<version>${compiler-plugin.version}</version>\r\n\t\t\t</plugin>\r\n\t\t\t<plugin>\r\n\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\r\n\t\t\t\t<version>${surefire-plugin.version}</version>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<systemPropertyVariables>\r\n\t\t\t\t\t\t<java.util.logging.manager>org.jboss.logmanager.LogManager\r\n\t\t\t\t\t\t</java.util.logging.manager>\r\n\t\t\t\t\t\t<maven.home>${maven.home}</maven.home>\r\n\t\t\t\t\t</systemPropertyVariables>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\t<profiles>\r\n\t\t<profile>\r\n\t\t\t<id>native</id>\r\n\t\t\t<activation>\r\n\t\t\t\t<property>\r\n\t\t\t\t\t<name>native</name>\r\n\t\t\t\t</property>\r\n\t\t\t</activation>\r\n\t\t\t<build>\r\n\t\t\t\t<plugins>\r\n\t\t\t\t\t<plugin>\r\n\t\t\t\t\t\t<artifactId>maven-failsafe-plugin</artifactId>\r\n\t\t\t\t\t\t<version>${surefire-plugin.version}</version>\r\n\t\t\t\t\t\t<executions>\r\n\t\t\t\t\t\t\t<execution>\r\n\t\t\t\t\t\t\t\t<goals>\r\n\t\t\t\t\t\t\t\t\t<goal>integration-test</goal>\r\n\t\t\t\t\t\t\t\t\t<goal>verify</goal>\r\n\t\t\t\t\t\t\t\t</goals>\r\n\t\t\t\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t\t\t\t<systemPropertyVariables>\r\n\t\t\t\t\t\t\t\t\t\t<native.image.path>${project.build.directory}/${project.build.finalName}-runner\r\n\t\t\t\t\t\t\t\t\t\t</native.image.path>\r\n\t\t\t\t\t\t\t\t\t\t<java.util.logging.manager>org.jboss.logmanager.LogManager\r\n\t\t\t\t\t\t\t\t\t\t</java.util.logging.manager>\r\n\t\t\t\t\t\t\t\t\t\t<maven.home>${maven.home}</maven.home>\r\n\t\t\t\t\t\t\t\t\t</systemPropertyVariables>\r\n\t\t\t\t\t\t\t\t</configuration>\r\n\t\t\t\t\t\t\t</execution>\r\n\t\t\t\t\t\t</executions>\r\n\t\t\t\t\t</plugin>\r\n\t\t\t\t</plugins>\r\n\t\t\t</build>\r\n\t\t\t<properties>\r\n\t\t\t\t<quarkus.package.type>native</quarkus.package.type>\r\n\t\t\t</properties>\r\n\t\t</profile>\r\n\t</profiles>\r\n</project>\r\n\r\n\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nThe correct implementation of Credentials provider should be called as per declaration in properties file while creating connection to database.\r\n\r\n### Actual behavior\r\n\r\nIt is always calling the MSSQL custom credentials provider for redshift as in my case above. In my case, I have to first call the MSSQL database which creates MSSQL connection first and then I will call Redshift database. But I don't think that is issue here. Regardless of sequence of operation, it is loading MSSQL credentials provider class for even for redshift \r\n\r\n### How to Reproduce?\r\n\r\nDeclare the two section of properties like in my example above for custom credentials provider implementation for different databases using Agrol Datasource.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nMicrosoft Windows [Version 10.0.18363.1916]\r\n\r\n### Output of `java -version`\r\n\r\n11.0.2\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.5.1.Final or all versions from 2.0.0.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\r\n\r\n### Additional information\r\n\r\nCan we please get this fixed with high priority? This is related with Agrol DataSource\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22084/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22084/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
