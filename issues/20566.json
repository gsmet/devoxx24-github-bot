{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20566",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20566/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20566/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20566/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20566",
  "id": 1018428717,
  "node_id": "I_kwDOCFbutM48s_0t",
  "number": 20566,
  "title": "Generic Syntetic Bean cause ambigious type resolution when none exists",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/150",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/150",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/150/labels",
    "id": 7178092,
    "node_id": "MI_kwDOCFbutM4AbYds",
    "number": 150,
    "title": "2.4.0.CR1",
    "description": "",
    "creator": {
      "login": "geoand",
      "id": 4374975,
      "node_id": "MDQ6VXNlcjQzNzQ5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4374975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geoand",
      "html_url": "https://github.com/geoand",
      "followers_url": "https://api.github.com/users/geoand/followers",
      "following_url": "https://api.github.com/users/geoand/following{/other_user}",
      "gists_url": "https://api.github.com/users/geoand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geoand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geoand/subscriptions",
      "organizations_url": "https://api.github.com/users/geoand/orgs",
      "repos_url": "https://api.github.com/users/geoand/repos",
      "events_url": "https://api.github.com/users/geoand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geoand/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 126,
    "state": "closed",
    "created_at": "2021-09-22T10:44:58Z",
    "updated_at": "2021-12-27T12:49:40Z",
    "due_on": "2021-10-11T07:00:00Z",
    "closed_at": "2021-10-15T08:11:06Z"
  },
  "comments": 2,
  "created_at": "2021-10-06T14:20:01Z",
  "updated_at": "2021-10-08T04:10:58Z",
  "closed_at": "2021-10-08T04:10:56Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen a Synthetic bean for a generic type is created like this:\r\n```\r\n    SyntheticBeanBuildItem addMyGenericInterface() {\r\n        DotName interfaceName = DotName.createSimple(MyGenericInterface.class.getName());\r\n        DotName numberTypeName = DotName.createSimple(AtomicInteger.class.getName());\r\n        DotName stringTypeName = DotName.createSimple(String.class.getName());\r\n        return SyntheticBeanBuildItem.configure(interfaceName)\r\n                .creator(methodCreator -> {\r\n                    FunctionCreator functionCreator = methodCreator.createFunction(MyGenericInterface.class);\r\n                    BytecodeCreator functionBytecode = functionCreator.getBytecode();\r\n                    functionBytecode.returnValue(functionBytecode.loadNull());\r\n                    methodCreator.returnValue(functionCreator.getInstance());\r\n                })\r\n                .types(ParameterizedType.create(interfaceName,\r\n                                                new Type[]{\r\n                                                        Type.create(numberTypeName, Type.Kind.CLASS),\r\n                                                        Type.create(stringTypeName, Type.Kind.CLASS)\r\n                                                }, null))\r\n                .done();\r\n    }\r\n```\r\nan \"ambigious type resolution\" occurs within ArC, with the same synthetic bean showing up twice.\r\n\r\nThus, it is impossible to inject generic Syntetic beans, since with the types argument, it cause ambiguity, and without it, it cannot find an instance.\n\n### Expected behavior\n\n```\r\n@Inject\r\nMyGenericInterface<AtomicInteger, String> myGenericInterface;\r\n```\r\n\r\ncauses `myGenericInterface` to be injected with the synthetic bean\n\n### Actual behavior\n\n```\r\njava.lang.RuntimeException: \r\njava.lang.RuntimeException: io.quarkus.builder.BuildException: Build failure: Build failed due to errors\r\n\t[error]: Build step io.quarkus.arc.deployment.ArcProcessor#validate threw an exception: javax.enterprise.inject.spi.DeploymentException: javax.enterprise.inject.AmbiguousResolutionException: Ambiguous dependencies for type org.acme.my.ext.MyGenericInterface<java.util.concurrent.atomic.AtomicInteger, java.lang.String> and qualifiers [@Default]\r\n\t- java member: org.acme.my.ext.test.MyExtTest#myGenericInterface\r\n\t- declared on CLASS bean [types=[org.acme.my.ext.test.MyExtTest, java.lang.Object], qualifiers=[@Default, @Any], target=org.acme.my.ext.test.MyExtTest]\r\n\t- available beans:\r\n\t\t- SYNTHETIC bean [types=[org.acme.my.ext.MyGenericInterface, org.acme.my.ext.MyGenericInterface<java.util.concurrent.atomic.AtomicInteger, java.lang.String>], qualifiers=[@Default, @Any], target=n/a]\r\n\t\t- SYNTHETIC bean [types=[org.acme.my.ext.MyGenericInterface, org.acme.my.ext.MyGenericInterface<java.util.concurrent.atomic.AtomicInteger, java.lang.String>], qualifiers=[@Default, @Any], target=n/a]\r\n\tat io.quarkus.arc.processor.BeanDeployment.processErrors(BeanDeployment.java:1190)\r\n\tat io.quarkus.arc.processor.BeanDeployment.init(BeanDeployment.java:268)\r\n\tat io.quarkus.arc.processor.BeanProcessor.initialize(BeanProcessor.java:129)\r\n\tat io.quarkus.arc.deployment.ArcProcessor.validate(ArcProcessor.java:418)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.quarkus.deployment.ExtensionLoader$2.execute(ExtensionLoader.java:820)\r\n\tat io.quarkus.builder.BuildContext.run(BuildContext.java:277)\r\n\tat org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)\r\n\tat org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2449)\r\n\tat org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1478)\r\n\tat java.base/java.lang.Thread.run(Thread.java:829)\r\n\tat org.jboss.threads.JBossThread.run(JBossThread.java:501)\r\nCaused by: javax.enterprise.inject.AmbiguousResolutionException: Ambiguous dependencies for type org.acme.my.ext.MyGenericInterface<java.util.concurrent.atomic.AtomicInteger, java.lang.String> and qualifiers [@Default]\r\n\t- java member: org.acme.my.ext.test.MyExtTest#myGenericInterface\r\n\t- declared on CLASS bean [types=[org.acme.my.ext.test.MyExtTest, java.lang.Object], qualifiers=[@Default, @Any], target=org.acme.my.ext.test.MyExtTest]\r\n\t- available beans:\r\n\t\t- SYNTHETIC bean [types=[org.acme.my.ext.MyGenericInterface, org.acme.my.ext.MyGenericInterface<java.util.concurrent.atomic.AtomicInteger, java.lang.String>], qualifiers=[@Default, @Any], target=n/a]\r\n\t\t- SYNTHETIC bean [types=[org.acme.my.ext.MyGenericInterface, org.acme.my.ext.MyGenericInterface<java.util.concurrent.atomic.AtomicInteger, java.lang.String>], qualifiers=[@Default, @Any], target=n/a]\r\n\tat io.quarkus.arc.processor.Beans.resolveInjectionPoint(Beans.java:576)\r\n\tat io.quarkus.arc.processor.BeanInfo.init(BeanInfo.java:470)\r\n\tat io.quarkus.arc.processor.BeanDeployment.init(BeanDeployment.java:256)\r\n\t... 13 more\r\n\r\n```\n\n### How to Reproduce?\n\nReproducer: https://github.com/Christopher-Chianelli/issue-reproducer/tree/quarkus-extension-syntetic-bean\r\n\r\nSteps to reproduce:\r\n\r\n1. cd `my-ext`\r\n2. `mvn clean install`\r\n3. Notice `MyExtTest` writeYourOwnUnitTest fails because myGenericInterface cannot be injected because ambiguous resolution (despite  `addMyGenericInterface` only returing 1 instance of it)\n\n### Output of `uname -a` or `ver`\n\nLinux 5.14.9-200.fc34.x86_64\n\n### Output of `java -version`\n\nopenjdk 11.0.12 2021-07-20\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\nfffe31b91b05774bbaa4456f0a57d40132b2fd2a\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20566/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20566/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
