{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33746",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33746/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33746/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33746/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33746",
  "id": 1734570559,
  "node_id": "I_kwDOCFbutM5nY3I_",
  "number": 33746,
  "title": "Quarkus 3.1 still throws an error if @Produces is not defined on a stream response",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/253",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/253",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/253/labels",
    "id": 9468628,
    "node_id": "MI_kwDOCFbutM4AkHrU",
    "number": 253,
    "title": "3.1.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 83,
    "state": "closed",
    "created_at": "2023-05-31T16:27:01Z",
    "updated_at": "2023-06-28T14:05:39Z",
    "due_on": null,
    "closed_at": "2023-06-07T11:17:31Z"
  },
  "comments": 5,
  "created_at": "2023-05-31T16:15:58Z",
  "updated_at": "2023-06-06T15:54:43Z",
  "closed_at": "2023-06-01T14:02:53Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWith the new addiction of `RestMulti` we should be able to do something like this :\r\n\r\n```java\r\npublic Multi<String>streamedResponse {\r\n\treturn RestMulti.fromMultiData()\r\n\t\t\t\t.header(\"Content-Type\", \"application/json\")\r\n\t\t\t\t.build();\r\n}\r\n```\r\nIt returns the following error when calling the endpoint :  \r\n\r\n```posh\r\nerror id: 8a43ae6f-691a-445f-aca6-a8171f0f9332-1: java.lang.IllegalStateException: Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\r\n        at org.jboss.resteasy.reactive.server.handlers.PublisherResponseHandler.handle(PublisherResponseHandler.java:304)\r\n        at io.quarkus.resteasy.reactive.server.runtime.QuarkusResteasyReactiveRequestContext.invokeHandler(QuarkusResteasyReactiveRequestContext.java:150)\r\n        at org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:145)\r\n        at io.quarkus.vertx.core.runtime.VertxCoreRecorder$14.runWith(VertxCoreRecorder.java:576)\r\n        at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)\r\n        at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)\r\n        at org.jboss.threads.DelegatingRunnable.run(DelegatingRunnable.java:29)\r\n        at org.jboss.threads.ThreadLocalResettingRunnable.run(ThreadLocalResettingRunnable.java:29)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:829)\r\n```\r\n\r\n⚠️ ⚠️ ⚠️ Note that if you add a random `@Produces` bean like `@Produces(MediaType.APPLICATION_XML)` no error is thrown and the function behaves normally, returning the correct Content-Type defined in the `RestMulti` object.\r\n\r\n### Expected behavior\r\n\r\nThe error should not appear if you don't specify `@Produces`, since it has no impact with the new `RestMulti` object.\r\n\r\n### Actual behavior\r\n\r\n_No response_\r\n\r\n### How to Reproduce?\r\n\r\n```java\r\npackage org.acme;\r\n\r\nimport io.smallrye.mutiny.Multi;\r\nimport jakarta.ws.rs.GET;\r\nimport jakarta.ws.rs.Path;\r\nimport jakarta.ws.rs.Produces;\r\nimport jakarta.ws.rs.core.MediaType;\r\nimport org.jboss.resteasy.reactive.RestMulti;\r\n\r\n@Path(\"/\")\r\npublic class GreetingResource {\r\n    @GET\r\n    @Path(\"/notworking\")\r\n    public Multi<byte[]> notWorking() {\r\n        Multi<byte[]> multi = Multi.createFrom().item(\"Hello from RESTEasy Reactive\".getBytes());\r\n        return RestMulti.fromMultiData(multi).header(\"Content-Type\", MediaType.TEXT_PLAIN).build();\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/working\")\r\n    @Produces(MediaType.APPLICATION_ATOM_XML)\r\n    public Multi<byte[]> working() {\r\n        Multi<byte[]> multi = Multi.createFrom().item(\"Hello from RESTEasy Reactive\".getBytes());\r\n        return RestMulti.fromMultiData(multi).header(\"Content-Type\", MediaType.TEXT_PLAIN).build();\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/workingString\")\r\n    public Multi<String> workingWithString() {\r\n        Multi<String> multi = Multi.createFrom().item(\"Hello from RESTEasy Reactive\");\r\n        return RestMulti.fromMultiData(multi).header(\"Content-Type\", MediaType.TEXT_PLAIN).build();\r\n    }\r\n}\r\n```\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n3.1\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33746/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33746/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
