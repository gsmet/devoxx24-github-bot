{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21174",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21174/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21174/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21174/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21174",
  "id": 1043695051,
  "node_id": "I_kwDOCFbutM4-NYXL",
  "number": 21174,
  "title": "Multiple cache invalidation not working with a native build",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1808747697,
      "node_id": "MDU6TGFiZWwxODA4NzQ3Njk3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/cache",
      "name": "area/cache",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/157",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/157",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/157/labels",
    "id": 7320620,
    "node_id": "MI_kwDOCFbutM4Ab7Qs",
    "number": 157,
    "title": "2.4.2.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 40,
    "state": "closed",
    "created_at": "2021-11-03T11:17:28Z",
    "updated_at": "2021-11-25T07:41:47Z",
    "due_on": null,
    "closed_at": "2021-11-12T08:45:43Z"
  },
  "comments": 14,
  "created_at": "2021-11-03T14:46:33Z",
  "updated_at": "2021-11-11T13:43:08Z",
  "closed_at": "2021-11-08T14:01:05Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nHello, \r\nI have a REST endpoint to invalidate all my caches like so:\r\n\r\n```\r\n    @DELETE\r\n    @CacheInvalidateAll(cacheName = Caches.MY_CACHE_A)\r\n    @CacheInvalidateAll(cacheName = Caches.MY_CACHE_B)\r\n    @CacheInvalidateAll(cacheName = Caches.MY_CACHE_C)\r\n    public void invalidateCaches() {\r\n        logger.info(\"Invalidating declared caches\");\r\n    }\r\n```\r\n\r\nWhen running in dev mode, everything is fine. The DEBUG logs shows that all caches are properly invalidated :\r\n\r\n```\r\n2021-11-03 15:06:12,757 DEBUG [io.qua.cac.run.CacheInvalidateAllInterceptor] (executor-thread-0) Invalidating all entries from cache [\"cacheA\"]\r\n2021-11-03 15:06:12,759 DEBUG [io.qua.cac.run.CacheInvalidateAllInterceptor] (executor-thread-0) Invalidating all entries from cache [\"cacheB\"]\r\n2021-11-03 15:06:12,759 DEBUG [io.qua.cac.run.CacheInvalidateAllInterceptor] (executor-thread-0) Invalidating all entries from cache [\"cacheC\"]\r\n```\r\n\r\nWhen running in native mode, a bug investigation revealed that only one cache is invalidated. This was reproduced on locahost. Calls to other resources use data from the cache instead of calling the backends.\r\n`2021-11-03 15:06:12,759 DEBUG [io.qua.cac.run.CacheInvalidateAllInterceptor] (executor-thread-0) Invalidating all entries from cache [\"cacheB\"]`\r\n\r\n(i have changed the cache names above but even after changing the order of the 3 annotations, it was always the same cache that was invalidated)\r\n\r\n\r\nA temporary workaround is to have my multi-annotated method to delegate the invalidation to as many sub methods as necessary, each one with its own invalidation. Obviously that is the opposite of the interest to have multiple annotations. \r\n\r\n(And as a side note, i know this is somewhere on the roadmap: being able to programmatically invalidate all caches from my enum instead of adding/forgetting to add an annotation would even be better)\r\n\r\nThanks for your help !\r\nPascal.\r\n\n\n### Expected behavior\n\nAll caches mentionned in each annotation are flushed.\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\nLinux Sunnyvale 5.4.0-89-generic #100-Ubuntu SMP Fri Sep 24 14:50:10 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"11.0.12\" 2021-07-20\n\n### GraalVM version (if different from Java)\n\nOpenJDK Runtime Environment GraalVM CE 21.2.0 (build 11.0.12+6-jvmci-21.2-b08)\n\n### Quarkus version or git rev\n\n2.1.4.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nGradle 6.8.3\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21174/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21174/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
