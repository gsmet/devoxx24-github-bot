{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22474",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22474/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22474/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22474/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/22474",
  "id": 1086873883,
  "node_id": "I_kwDOCFbutM5AyGEb",
  "number": 22474,
  "title": "Config generated classes are not registered for reflection",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1273030910,
      "node_id": "MDU6TGFiZWwxMjczMDMwOTEw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/config",
      "name": "area/config",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/166",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/166",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/166/labels",
    "id": 7496866,
    "node_id": "MI_kwDOCFbutM4AcmSi",
    "number": 166,
    "title": "2.6.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 57,
    "state": "closed",
    "created_at": "2021-12-17T08:19:15Z",
    "updated_at": "2021-12-24T11:46:31Z",
    "due_on": null,
    "closed_at": "2021-12-24T11:46:31Z"
  },
  "comments": 5,
  "created_at": "2021-12-22T14:27:17Z",
  "updated_at": "2021-12-23T20:26:41Z",
  "closed_at": "2021-12-23T18:14:32Z",
  "active_lock_reason": null,
  "body": "### Description\n\nIn `ConfigMapping` we define interfaces such as `com.acme.config.MyConfig`. At build time this generates implementation classes such as `com.acme.config.MyConfig-<hash>Impl`\r\n\r\nIf you intend to use those classes through reflection, you end up having to figure out the hash that has been generated, and add `@RegisterForReflection(classNames= {`com.acme.config.MyConfig-1234Impl`})` into your application.\r\n\r\nIn our project, we are adding the config objects into freemarker template models, and access some of the config properties from within the templates, hence the need for reflection.\r\n\r\nIdeally those config implementation classes should be enabled for reflection, or at least (if we believe the need is rare, and/or if we fear the impact on the native exec) the application should be offered an easy way to enable those classes for reflection.\r\n\r\nsee [zulip conversation](https://quarkusio.zulipchat.com/#narrow/stream/187030-users/topic/RegisterForReflection.20on.20ConfigMapping.20classes)\r\n\r\n/cc @radcortez \n\n### Implementation ideas\n\nOne option would be to allow adding `@RegisterForReflection` on the config interfaces, which would be interpreted as: a registration on the config impl classes need to be done.\r\n\r\nAnother option would be to add a build time parameter `register-config-classes-for-reflection/serialization`.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22474/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22474/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
