{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38326",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38326/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38326/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38326/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38326",
  "id": 2093491652,
  "node_id": "I_kwDOCFbutM58yCXE",
  "number": 38326,
  "title": "Cross-Site Request Forgery (CSRF) prevents JSON-Bodies to be deserialized",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/303",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/303",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/303/labels",
    "id": 10462999,
    "node_id": "MI_kwDOCFbutM4An6cX",
    "number": 303,
    "title": "3.7.1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 33,
    "state": "closed",
    "created_at": "2024-01-24T13:51:37Z",
    "updated_at": "2024-01-31T17:01:26Z",
    "due_on": null,
    "closed_at": "2024-01-31T11:23:05Z"
  },
  "comments": 10,
  "created_at": "2024-01-22T09:38:39Z",
  "updated_at": "2024-01-26T12:35:31Z",
  "closed_at": "2024-01-26T11:00:32Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI want to add CSRF-protection as described in https://quarkus.io/guides/security-csrf-prevention. But my application has some Ajax-endpoints, e.g:\r\n```\r\n@POST\r\n  @Path(\"/csrfTokenPostBody\")\r\n  @Consumes(MediaType.APPLICATION_JSON)\r\n  @Produces(MediaType.TEXT_PLAIN)\r\n  public Uni<String> postJson(User user) {\r\n    return Uni.createFrom().item(user.name);\r\n  }\r\n```\n\n### Expected behavior\n\nThe token is read from the header and verified. If the token is correct, the method can access the body normally.\n\n### Actual behavior\n\nIf I send a correct token in the header, I get this exception \r\n```\r\norg.jboss.resteasy.reactive.common.core.BlockingNotAllowedException: Attempting a blocking read on io thread\r\n                at org.jboss.resteasy.reactive.server.vertx.VertxInputStream$VertxBlockingInput.readBlocking(VertxInputStream.java:245)\r\n                at org.jboss.resteasy.reactive.server.vertx.VertxInputStream.readIntoBuffer(VertxInputStream.java:123)\r\n                at org.jboss.resteasy.reactive.server.vertx.VertxInputStream.read(VertxInputStream.java:85)\r\n                at com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(ByteSourceJsonBootstrapper.java:539)\r\n                at com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding(ByteSourceJsonBootstrapper.java:133)\r\n                at com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(ByteSourceJsonBootstrapper.java:256)\r\n                at com.fasterxml.jackson.core.JsonFactory._createParser(JsonFactory.java:1744)\r\n                at com.fasterxml.jackson.core.JsonFactory.createParser(JsonFactory.java:1143)\r\n                at com.fasterxml.jackson.databind.ObjectReader.createParser(ObjectReader.java:1103)\r\n                at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481)\r\n                at io.quarkus.resteasy.reactive.jackson.runtime.serialisers.ServerJacksonMessageBodyReader.doReadFrom(ServerJacksonMessageBodyReader.java:87)\r\n                at io.quarkus.resteasy.reactive.jackson.runtime.serialisers.ServerJacksonMessageBodyReader.readFrom(ServerJacksonMessageBodyReader.java:38)\r\n                at io.quarkus.resteasy.reactive.jackson.runtime.serialisers.ServerJacksonMessageBodyReader.readFrom(ServerJacksonMessageBodyReader.java:77)\r\n                at org.jboss.resteasy.reactive.server.handlers.RequestDeserializeHandler.readFrom(RequestDeserializeHandler.java:126)\r\n                at org.jboss.resteasy.reactive.server.handlers.RequestDeserializeHandler.handle(RequestDeserializeHandler.java:84)\r\n                at io.quarkus.resteasy.reactive.server.runtime.QuarkusResteasyReactiveRequestContext.invokeHandler(QuarkusResteasyReactiveRequestContext.java:135)\r\n                at org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:147)\r\n                at org.jboss.resteasy.reactive.server.handlers.RestInitialHandler.beginProcessing(RestInitialHandler.java:48)\r\n                at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveVertxHandler.handle(ResteasyReactiveVertxHandler.java:23)\r\n                at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveVertxHandler.handle(ResteasyReactiveVertxHandler.java:10)\r\n                at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)\r\n                at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)\r\n                at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)\r\n                at io.quarkus.vertx.http.runtime.options.HttpServerCommonHandlers$1.handle(HttpServerCommonHandlers.java:59)\r\n                at io.quarkus.vertx.http.runtime.options.HttpServerCommonHandlers$1.handle(HttpServerCommonHandlers.java:37)\r\n                at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)\r\n                at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)\r\n                at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)\r\n                at io.quarkus.resteasy.reactive.server.runtime.ResteasyReactiveRecorder$13.handle(ResteasyReactiveRecorder.java:339)\r\n                at io.quarkus.resteasy.reactive.server.runtime.ResteasyReactiveRecorder$13.handle(ResteasyReactiveRecorder.java:332)\r\n                at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)\r\n                at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)\r\n                at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)\r\n                at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)\r\n                at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)\r\n                at io.quarkus.vertx.http.runtime.options.HttpServerCommonHandlers$2.handle(HttpServerCommonHandlers.java:83)\r\n                at io.quarkus.vertx.http.runtime.options.HttpServerCommonHandlers$2.handle(HttpServerCommonHandlers.java:66)\r\n                at io.quarkus.vertx.http.runtime.VertxHttpRecorder$1.handle(VertxHttpRecorder.java:162)\r\n                at io.quarkus.vertx.http.runtime.VertxHttpRecorder$1.handle(VertxHttpRecorder.java:138)\r\n                at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)\r\n                at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)\r\n                at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)\r\n                at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)\r\n                at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n                at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n                at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)\r\n                at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n                at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)\r\n                at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n                at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n                at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannet.java:420)tex\r\n                at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n                at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n                at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n                at java.base/java.lang.Thread.run(Thread.java:1583)\r\n\r\n```\n\n### How to Reproduce?\n\nI created an example at https://github.com/lizzyTheLizard/quarkus-csrf-reactive-json-body, including a failing test that shows the behaviour\n\n### Output of `uname -a` or `ver`\n\nLinux XXXXX #101-Ubuntu SMP Tue Nov 14 13:30:08 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk 17.0.9 2023-10-17\n\n### Quarkus version or git rev\n\n3.6.5\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.9.6 \n\n### Additional information\n\nIt might be linked to https://github.com/quarkusio/quarkus/issues/22444 The WithFormRead annotation tries to read the form parameter. This will already consume the input stream preventing Jackson to read it again (just a guess). Also quarkus.csrf-reactive.require-form-url-encoded=false does not help as the body is still parsed and cannot be read any more.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38326/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38326/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
