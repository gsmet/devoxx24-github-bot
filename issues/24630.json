{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24630",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24630/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24630/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24630/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24630",
  "id": 1186197197,
  "node_id": "I_kwDOCFbutM5Gs-7N",
  "number": 24630,
  "title": "Exception in the java compiler (17.0.2) during deserialization in quarkus-rest-client",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1676631606,
      "node_id": "MDU6TGFiZWwxNjc2NjMxNjA2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/windows",
      "name": "env/windows",
      "color": "edea47",
      "default": false,
      "description": "Impacts Windows machines"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 11,
  "created_at": "2022-03-30T09:58:28Z",
  "updated_at": "2022-04-01T08:54:22Z",
  "closed_at": "2022-03-30T20:21:26Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWhen I am trying to extract the body of a `javax.ws.rs.core.Response` generated by the quarkus-rest-client, to a `ArrayList<Object>` using quarkus-rest-client-jackson, the java compiler throws an exception.\r\n\r\nScenario:\r\n- Given a restclient with a method getResponse, which returns a Response (content does not matter, this is a compile error):\r\n```\r\n@RegisterRestClient(baseUri = \"https://stage.code.quarkus.io/api\")\r\npublic interface MyRestClient\r\n{\r\n    @GET\r\n    @Path(\"/extensions\")\r\n    Response getResponse();\r\n}\r\n```\r\n\r\n- When trying to extract part of the response directly to a `List<Object>`:\r\n```return new ArrayList<>(restClient.getResponse().readEntity(new GenericType<>() {}));```\r\n\r\n- When trying to compile using `mvn clean compile`\r\n- Then the java compiler throws an exception.\r\n\r\nCoincidentally, workarounds which look similar that do not cause a java compiler error:\r\n```\r\n    List<Object> list = restClient.getResponse().readEntity(new GenericType<>() {});\r\n    return new ArrayList<>(list);\r\n```\r\n```\r\n    return restClient.getResponse().readEntity(new GenericType<List<Extension>>() {});\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect the code to compile.\r\n\r\n### Actual behavior\r\n\r\n```\r\nAn exception has occurred in the compiler (17.0.2). Please file a bug against the Java compiler via the Java bug reporting page (http://bugreport.java.com) after checking the Bug Database (http://bugs.java.com) for duplicates. Include your program, the following diagnostic, and the parameters passed to the Java compiler in your report. Thank you.\r\njava.lang.NullPointerException: Cannot invoke \"com.sun.tools.javac.code.Type.getThrownTypes()\" because \"tree.meth.type\" is null\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$FlowAnalyzer.visitApply(Flow.java:1439)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1797)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$BaseAnalyzer.scan(Flow.java:444)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:57)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$FlowAnalyzer.visitNewClass(Flow.java:1445)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1852)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$BaseAnalyzer.scan(Flow.java:444)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$FlowAnalyzer.visitReturn(Flow.java:1415)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1709)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$BaseAnalyzer.scan(Flow.java:444)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:57)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$FlowAnalyzer.visitBlock(Flow.java:1188)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:1091)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$BaseAnalyzer.scan(Flow.java:444)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$FlowAnalyzer.visitMethodDef(Flow.java:1154)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:921)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$BaseAnalyzer.scan(Flow.java:444)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$FlowAnalyzer.visitClassDef(Flow.java:1117)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:819)\r\n\tat jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$BaseAnalyzer.scan(Flow.java:444)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$FlowAnalyzer.analyzeTree(Flow.java:1532)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow$FlowAnalyzer.analyzeTree(Flow.java:1522)\r\n\tat jdk.compiler/com.sun.tools.javac.comp.Flow.analyzeTree(Flow.java:222)\r\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1377)\r\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1351)\r\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:946)\r\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.lambda$doCall$0(JavacTaskImpl.java:104)\r\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.invocationHelper(JavacTaskImpl.java:152)\r\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.doCall(JavacTaskImpl.java:100)\r\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:94)\r\n\tat org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess(JavaxToolsCompiler.java:126)\r\n\tat org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile(JavacCompiler.java:174)\r\n\tat org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute(AbstractCompilerMojo.java:1134)\r\n\tat org.apache.maven.plugin.compiler.CompilerMojo.execute(CompilerMojo.java:187)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)\r\n\tat org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:193)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)\r\n\tat org.codehaus.classworlds.Launcher.main(Launcher.java:47)\r\n\r\n```\r\n\r\n### How to Reproduce?\r\n\r\n[java-compiler-crash.zip](https://github.com/quarkusio/quarkus/files/8379428/java-compiler-crash.zip)\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nMicrosoft Windows [Version 10.0.19041.1415]\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"17.0.2\" 2022-01-18 OpenJDK Runtime Environment Temurin-17.0.2+8 (build 17.0.2+8) OpenJDK 64-Bit Server VM Temurin-17.0.2+8 (build 17.0.2+8, mixed mode, sharing)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.7.5.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.4 (9b656c72d54e5bacbed989b64718c159fe39b537) Maven home: C:\\Users\\tim\\.m2\\wrapper\\dists\\apache-maven-3.8.4-bin\\52ccbt68d252mdldqsfsn03jlf\\apache-maven-3.8.4 Java version: 17.0.2, vendor: Oracle Corporation, runtime: C:\\dev\\tools\\jdk\\openjdk\\jdk-17.0.2 Default locale: en_US, platform encoding: Cp1252 OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"\r\n\r\n### Additional information\r\n\r\nI have been trying to reproduce this with a minimal standalone jackson-databind project. Jackson has a similar deserialization feature with `objectMapper.readEntity(new TypeReference<List<Object>>() {})`, but I could not reproduce the java compiler error there. Somehow quarkus-http-client is doing something that trigger this.\r\n\r\nUsing a custom entity (e.g. MyObject) does not make a difference.\r\n\r\nIt is also broken in openjdk-17.0.2. However, **openjdk-18 seems to be working**, but that is not supported by Quarkus.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24630/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24630/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
