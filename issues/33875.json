{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33875",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33875/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33875/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33875/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33875",
  "id": 1745784293,
  "node_id": "I_kwDOCFbutM5oDo3l",
  "number": 33875,
  "title": "quarkus-rest-client-reactive-jaxb does not support direct marshalling of JAXBElement<T>",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1683744663,
      "node_id": "MDU6TGFiZWwxNjgzNzQ0NjYz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/jaxb",
      "name": "area/jaxb",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/250",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/250",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/250/labels",
    "id": 9407630,
    "node_id": "MI_kwDOCFbutM4Aj4yO",
    "number": 250,
    "title": "3.2.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 244,
    "state": "closed",
    "created_at": "2023-05-17T07:29:12Z",
    "updated_at": "2023-11-15T13:59:38Z",
    "due_on": null,
    "closed_at": "2023-06-21T13:08:09Z"
  },
  "comments": 4,
  "created_at": "2023-06-07T12:24:57Z",
  "updated_at": "2023-06-09T10:33:54Z",
  "closed_at": "2023-06-09T09:54:18Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nAfter writing the below explanation, I'm unsure if this should have been filed as a _Feature request_ or I'm just pointing out an implicit inconsistency in the support of JAXB. But anyway:\r\n\r\nI'm doing a port of an old SB/camel service and I'm defining a REST client interface and need XML serialisation support. My \"Xml\" classes are generated with `xsdtojava` from a couple of xsd-files. I'm providing my own `JAXBContext` like described in this [guide](https://quarkus.io/guides/resteasy-reactive#customize-the-jaxb-configuration).\r\n\r\nBecause I'm just using the supplied xsd-files, my request model object is is in the form of `JAXBElement<eu.request.SomeType>`. I would have assumed that defining a method like this\r\n\r\n```java\r\n    @POST\r\n    @Produces(MediaType.APPLICATION_XML)\r\n    @Consumes(MediaType.APPLICATION_XML)\r\n    eu.response.Response getVehicleByRegno(JAXBElement<eu.request.SomeType> request)\r\n```\r\n\r\nthat the http-client would correctly serialize this xml element: \r\n```\r\nJAXBElement<eu.request.SomeType> req = objectFactory.createKehys(messageType);\r\n```\r\n\r\nas\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<kehys>\r\n...\r\n</kehys>\r\n```\r\n\r\nHowever the element is marshalled as\r\n \r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<JAXBElement>\r\n<kehys>\r\n...\r\n</kehys>\r\n</JAXBElement>\r\n```\r\n\r\nAfter looking into the [implementation](https://github.com/quarkusio/quarkus/blob/main/extensions/resteasy-reactive/rest-client-reactive-jaxb/runtime/src/main/java/io/quarkus/rest/client/reactive/jaxb/runtime/ClientMessageBodyWriter.java)  of JAXB/Xml `MessageBodyWriter` I can see that only classes annotated with `XmlRootElement` are supported (the [server](https://github.com/quarkusio/quarkus/blob/main/extensions/resteasy-reactive/quarkus-resteasy-reactive-jaxb/runtime/src/main/java/io/quarkus/resteasy/reactive/jaxb/runtime/serialisers/ServerJaxbMessageBodyWriter.java) version has the same limitation). If not annotated, the object in question is wrapped in a JAXBElement ([client implementation](https://github.com/quarkusio/quarkus/blob/main/extensions/resteasy-reactive/rest-client-reactive-jaxb/runtime/src/main/java/io/quarkus/rest/client/reactive/jaxb/runtime/ClientMessageBodyWriter.java#L49-L54)):\r\n\r\n```java\r\n            Object jaxbObject = o;\r\n            Class<?> clazz = o.getClass();\r\n            XmlRootElement jaxbElement = clazz.getAnnotation(XmlRootElement.class);\r\n            if (jaxbElement == null) {\r\n                jaxbObject = new JAXBElement(new QName(Introspector.decapitalize(clazz.getSimpleName())), clazz, o);\r\n            }\r\n```\r\n\r\nThis explains the extra `<JAXBElement>` in my generated xml above.\r\n\r\nSo my question or issue: \r\n\r\nNow that I can define my own JAXBContext that may include classes not annotated with `XmlRootElement`, shouldn't I be able to serialise them as well? ðŸ˜ƒ \r\n\r\n(As I'm porting a Camel service I checked how Camel checks if a Object is serialisable: [Camel](https://github.com/apache/camel/blob/main/components/camel-jaxb/src/main/java/org/apache/camel/converter/jaxb/JaxbDataFormat.java#L204) uses `JAXBIntrospector.isElement(element)`)\r\n\n\n### Expected behavior\n\nBeing able to generate XML based on classes in a provided JAXBContext.\n\n### Actual behavior\n\nOnly classes annotated with `XmlRootElement` are probably supported. This is could be seen as \"inconsistent\" with the ability to provide your own JAXBContext.\n\n### How to Reproduce?\n\nIf needed, I will provide a project that demonstrate the issue, but until then I think the explanation above sufficiently explains the issue.\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\nopenjdk version \"17.0.5\" 2022-10-18 OpenJDK Runtime Environment Temurin-17.0.5+8 (build 17.0.5+8) OpenJDK 64-Bit Server VM Temurin-17.0.5+8 (build 17.0.5+8, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.16.2.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33875/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33875/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
