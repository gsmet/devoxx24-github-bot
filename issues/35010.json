{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35010",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35010/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35010/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35010/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35010",
  "id": 1820787027,
  "node_id": "I_kwDOCFbutM5shwFT",
  "number": 35010,
  "title": "Get DevServices ports via Quarkus CLI",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2313298528,
      "node_id": "MDU6TGFiZWwyMzEzMjk4NTI4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/cli",
      "name": "area/cli",
      "color": "0366d6",
      "default": false,
      "description": "Related to quarkus cli (not maven/gradle/etc.)"
    },
    {
      "id": 2955097667,
      "node_id": "MDU6TGFiZWwyOTU1MDk3NjY3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/devservices",
      "name": "area/devservices",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 5,
  "created_at": "2023-07-25T17:21:12Z",
  "updated_at": "2023-07-31T18:56:30Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\n\n## Problem\r\nWe have lots of DevServices containers running during `quarkusDev` (and during tests). Additionally I usually have a couple other similar containers constantly running already (e.g. PostgreSQL & Vault). All this makes interacting with the correct DevServices container from a shell cumbersome and requires creating shell scripts if you want to repeatedly do this during development sessions.\r\n\r\n## Current Solutions:\r\n\r\n### DevUI\r\n\r\nThe DevUI shows some information for some containers but not all; I assume this will be remedied in the future. I'm guessing this container information is available on the management interface for it to be available in the DevUI so maybe something like `cURL http://localhost/q/dev/some/thing | jq '.some.path'` will be a viable solution. Which would provide a fairly consistent easy to use solution.\r\n\r\n### Docker PS\r\n\r\nFiltering by label in Docker CLI is fairly easy but you have to know the label and value which, as far as I know, isn't really published anywhere.\r\n\r\nFor example to lookup the currently running Vault DevServices container you execute:\r\n\r\n    docker ps --filter \"label=quarkus-dev-service-vault=vault\"\r\n\r\nWhich means you need to know the label is `docker ps --filter `quarkus-dev-service-vault` and the value `vault`; additionally the value can be set via configuration. Obviously this is different for every container started via DevServices.\r\n\r\nFinally, if some people are using Docker and others alternative runtimes, the commands are different.\r\n\r\n## Feature\r\n\r\nCurrently I've created scripts to nose through `docker ps` and setup my shell for Vault and others but this would be a great addition to the Quarkus CLI!\r\n\r\nA simple command to list container ports or grab a specific container port that can be used interactively, or via a shell script, providing connection information about the currently running DevService container for an extension.\r\n\r\nSome example...\r\n\r\nList port mappings:\r\n\r\n    $ quarkus ds-port rabbitmq\r\n    RabbitMQ container host address: 0.0.0.0\r\n    Port: 5672 -> 55555\r\n    Port: 1567 -> 55556\r\n\r\nList specific port mapping:\r\n\r\n    $ quarkus ds-port rabbitmq 5672\r\n    0.0.0.0:55555\r\n\r\nList specific port mapping (port only):\r\n\r\n    $ quarkus ds-port rabbitmq 5672 --port-only\r\n    55555\r\n\n\n### Implementation ideas\n\nQuarkus DevServices implementations provide a container locator for each service. Providing an endpoint (on the management interface) during `dev` sessions that uses the locators should be easy. The only \"complex\" bit might be mapping a canonical name (e.g. `vault`) to an extension (`Quarkus-vault`).\r\n\r\nAs I eluded too previously, it seems the DevUI has _some_ information on running DevService containers and something like this might be available but the information is currently incomplete when running `3.2.2.Final`.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35010/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35010/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
