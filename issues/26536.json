{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26536",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26536/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26536/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26536/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26536",
  "id": 1292824333,
  "node_id": "I_kwDOCFbutM5NDu8N",
  "number": 26536,
  "title": "RestEasy Reactive performs authorization checks twice",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/201",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/201",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/201/labels",
    "id": 8316083,
    "node_id": "MI_kwDOCFbutM4AfuSz",
    "number": 201,
    "title": "2.13.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 257,
    "state": "closed",
    "created_at": "2022-08-17T08:31:42Z",
    "updated_at": "2024-07-09T02:26:14Z",
    "due_on": null,
    "closed_at": "2022-09-14T20:11:06Z"
  },
  "comments": 24,
  "created_at": "2022-07-04T08:35:10Z",
  "updated_at": "2022-08-19T10:50:51Z",
  "closed_at": "2022-08-19T10:50:46Z",
  "active_lock_reason": null,
  "body": "### Description\n\n(I am filing this issue as an enhancement, because it isn't really a bug, but I suspect that performing the authorization twice isn't the desired behavior either.)\r\n\r\nWhen using RestEasy Reactive the authorization checks will be performed twice: Once using RestEasy Reactive's own `EagerSecurityHandler` (registered as a `ServerRestHandler`) and once by the curresponding CDI interceptor (e.g. `RolesAllowedInterceptor`) provided by `quarkus-security`. It would seem like it would make sense to only perform the check once, as with RestEasy Classic.\r\n\r\nI stumbled across this while migrating to RestEasy Reactive, since we also use the CDI interceptor approach for some custom security logging. With RestEasy Reactive this mechanism no longer works in the \"negative\" case (when the authorization check fails), since the check performed by RestEasy Reactive will short-circuit the handling. As an alternative for the negative case I can however use an `ExceptionMapper` instead.\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26536/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26536/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
