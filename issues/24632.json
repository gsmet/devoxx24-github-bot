{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24632",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24632/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24632/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24632/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24632",
  "id": 1186277008,
  "node_id": "I_kwDOCFbutM5GtSaQ",
  "number": 24632,
  "title": "Support json patch in RESTEasy Reactive as in RESTEasy Classic",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 9,
  "created_at": "2022-03-30T10:53:14Z",
  "updated_at": "2023-05-16T09:32:59Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI want to make use of partial updates via HTTP Patch. The mechanism is working fine in imperative RESTEasy implementation but not if I switch to reactive.\r\n\r\nMy resource has a standard getById method:\r\n\r\n`\r\n@GET\r\n@Path(\"/{id}\")\r\npublic Uni<MyEntity> getById(@PathParam(\"id\") Long id)`\r\n\r\nand a patch method:\r\n`\r\n@PATCH\r\n@Path(\"/{id}\")\r\n@Consumes(\"application/merge-patch+json\")\r\npublic Uni<MyEntity> merge(@PathParam(\"id\") Long id, MyEntity myEntity)`\r\n\r\nWhen using imperative way, everything works as expected: the getById method gets called first, the instance of myEntity is loaded, json merge happens under the hood, and the patch method is called where I persist the updated entity.\r\nIf I switch to reactive libraries, only the patch method is called.\r\nI also tried to use `@Consumes(MediaType.APPLICATION_JSON_PATCH_JSON)` but without success.\r\n\r\nI followed the documentation here: https://docs.jboss.org/resteasy/docs/4.6.0.Final/userguide/html/JAX-RS_2.1_additions.html#d4e1781\r\n\n\n### Expected behavior\n\nThe getById method is called to return the entity to be patched, then the json patch happens and the method annotated with @PATCH is called with the merged entity.\n\n### Actual behavior\n\ngetById method is not called.\n\n### How to Reproduce?\n\nCreate a basic resource with a plain getById method and the patch method as described above.\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n17.0.2\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.7.4.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n3.8.4\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24632/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24632/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
