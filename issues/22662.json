{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22662",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22662/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22662/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22662/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/22662",
  "id": 1094557555,
  "node_id": "I_kwDOCFbutM5BPZ9z",
  "number": 22662,
  "title": "Gauges annotation are not showing up his value, on a resteasy endpoint",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/161",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161/labels",
    "id": 7468359,
    "node_id": "MI_kwDOCFbutM4AcfVH",
    "number": 161,
    "title": "2.7.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 334,
    "state": "closed",
    "created_at": "2021-12-08T07:48:18Z",
    "updated_at": "2022-02-03T19:52:11Z",
    "due_on": null,
    "closed_at": "2022-01-19T12:42:36Z"
  },
  "comments": 4,
  "created_at": "2022-01-05T16:59:09Z",
  "updated_at": "2022-01-06T13:29:11Z",
  "closed_at": "2022-01-06T13:29:08Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nIf a gauge is declared in a Resteasy endpoint through an annotation, the gauge value is not pushed to `/metrics`\r\n\r\nExample: \r\n```\r\n@Path(\"/using-microprofile-pingpong\")\r\npublic class UsingMicroProfilePingPongResource {\r\n\r\n    private static final String PING_PONG = \"ping pong\";\r\n    private static final long DEFAULT_GAUGE_VALUE = 100L;\r\n\r\n    // counters works as expected\r\n    @GET\r\n    @Counted(name = \"simple_counter_mp\", absolute = true)\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    @Path(\"/counter\")\r\n    public String simpleScenario() {\r\n        return PING_PONG;\r\n    }\r\n\r\n    //TODO gauges are not promoting their values to /metrics\r\n    @GET\r\n    @Gauge(name = \"simple_gauge_mp\", unit = MetricUnits.NONE)\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    @Path(\"/gauge\")\r\n    public long highestPrimeNumberSoFar() {\r\n        return DEFAULT_GAUGE_VALUE;\r\n    }\r\n}\r\n```\r\n\r\nBut If I move on the gauge to a separate public method, then works as expected: \r\n\r\n```\r\n@Path(\"/using-microprofile-pingpong\")\r\npublic class UsingMicroProfilePingPongResource {\r\n\r\n    private static final String PING_PONG = \"ping pong\";\r\n    private static final long DEFAULT_GAUGE_VALUE = 100L;\r\n\r\n    @GET\r\n    @Counted(name = \"simple_counter_mp\", absolute = true)\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    @Path(\"/counter\")\r\n    public String simpleScenario() {\r\n        return PING_PONG;\r\n    }\r\n\r\n    @GET\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    @Path(\"/gauge\")\r\n    public long highestPrimeNumberSoFar() {\r\n        return getDefaultGauge();\r\n    }\r\n\r\n    @Gauge(name = \"simple_gauge_mp\", unit = MetricUnits.NONE)\r\n    public long getDefaultGauge() {\r\n        return DEFAULT_GAUGE_VALUE;\r\n    }\r\n}\r\n```\r\n\r\nAdditional when the gauge is not promoted I am getting the following warning message:\r\n```\r\n2022-01-05 16:48:04,996 WARN  [io.mic.cor.ins.int.DefaultGauge] (vert.x-worker-thread-0) Failed to apply the value function for the gauge 'io.quarkus.ts.micrometer.prometheus.UsingMicroProfilePingPongResource.simple_gauge_mp'. Note that subsequent logs will be logged at debug level.: javax.enterprise.context.ContextNotActiveException\r\n\tat io.quarkus.arc.impl.ClientProxies.getDelegate(ClientProxies.java:46)\r\n\tat io.quarkus.vertx.http.runtime.CurrentVertxRequest_ClientProxy.arc$delegate(Unknown Source)\r\n```\r\n\r\nFrom a developer experience point of view, would be great to have the same behavior in all metrics data structures. So, if counter annotations is available in an endpoint declaration then gauges should be also valid. \r\n\r\n\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\nopenjdk 11.0.11 2021-04-20 OpenJDK Runtime Environment AdoptOpenJDK-11.0.11+9 (build 11.0.11+9) OpenJDK 64-Bit Server VM AdoptOpenJDK-11.0.11+9 (build 11.0.11+9, mixed mode)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22662/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22662/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
