{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29253",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29253/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29253/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29253/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29253",
  "id": 1448205052,
  "node_id": "I_kwDOCFbutM5WUdr8",
  "number": 29253,
  "title": "Resteasy + Hibernate Validator : @Produces on super interface is not taken into account, JSON is default",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1305687763,
      "node_id": "MDU6TGFiZWwxMzA1Njg3NzYz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-validator",
      "name": "area/hibernate-validator",
      "color": "0366d6",
      "default": false,
      "description": "Hibernate Validator"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/228",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/228",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/228/labels",
    "id": 8842745,
    "node_id": "MI_kwDOCFbutM4Ahu35",
    "number": 228,
    "title": "3.0.0.Alpha4",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 323,
    "state": "closed",
    "created_at": "2023-01-11T08:43:57Z",
    "updated_at": "2023-07-20T16:42:38Z",
    "due_on": null,
    "closed_at": "2023-02-09T15:24:11Z"
  },
  "comments": 4,
  "created_at": "2022-11-14T14:48:43Z",
  "updated_at": "2023-01-24T11:35:31Z",
  "closed_at": "2023-01-24T11:35:17Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI have a `ResourceInterface` and a `ResourceImplementation`.\r\n\r\nThe `ResourceInterface` defines everything related to JAX-RS and OpenAPI.x\r\n\r\nIt looks like this\r\n\r\n```\r\n// ...\r\n@Produces(\"application/xml\")\r\n@Consumes(\"application/xml\")\r\npublic interface ResourceInterface {\r\n    //...\r\n    @POST\r\n    Output method(@Valid Input input);\r\n    //....\r\n```\r\n\r\nThe `ResourceImplementation` looks like this\r\n\r\n```\r\n@ApplicationScoped\r\npublic class ResourceImplementation implements ResourceInterface {\r\n    //...\r\n    public Output method(Input input) {\r\n        //....\r\n    }\r\n}\r\n```\r\n\r\nWhen I get a validation exception, it gets outputted as JSON, even though I specified XML on the class as described by the JAX-RS specification.\r\n\r\nThe guilty piece of code is the following, that only checks on the invoked method and class but not the super.\r\n\r\nThis comes from `JaxrsEndPointValidationInterceptor`\r\n\r\n```\r\n    @AroundInvoke\r\n    @Override\r\n    public Object validateMethodInvocation(InvocationContext ctx) throws Exception {\r\n        try {\r\n            return super.validateMethodInvocation(ctx);\r\n        } catch (ConstraintViolationException e) {\r\n            throw new ResteasyViolationExceptionImpl(e.getConstraintViolations(), getProduces(ctx.getMethod()));\r\n        }\r\n    }\r\n\r\n    @AroundConstruct\r\n    @Override\r\n    public void validateConstructorInvocation(InvocationContext ctx) throws Exception {\r\n        super.validateConstructorInvocation(ctx);\r\n    }\r\n\r\n    private List<MediaType> getProduces(Method method) {\r\n        MediaType[] producedMediaTypes = MediaTypeHelper.getProduces(method.getDeclaringClass(), method);\r\n\r\n        if (producedMediaTypes == null) {\r\n            if (resteasyConfigSupport.isJsonDefault()) {\r\n                return JSON_MEDIA_TYPE_LIST;\r\n            }\r\n\r\n            return Collections.emptyList();\r\n        }\r\n\r\n        return Arrays.asList(producedMediaTypes);\r\n    }\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nReturn validation error as XML\r\n\r\n### Actual behavior\r\n\r\nReturns validation error as JSON\r\n\r\nPS : Of course, a workaround is possible. The annotation should be put on the implementating class' method. It doesn't work when put on the interface's class method.\r\n\r\n### How to Reproduce?\r\n\r\nCreate the classes as described above and produce a validation error.\r\nIt will get outputed as JSON and not XML.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n_No response_\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29253/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29253/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
