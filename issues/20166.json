{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20166",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20166/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20166/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20166/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20166",
  "id": 996851798,
  "node_id": "I_kwDOCFbutM47asBW",
  "number": 20166,
  "title": "AsyncHealthCheck does not work with Hibernate Reactive",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1273026509,
      "node_id": "MDU6TGFiZWwxMjczMDI2NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/persistence",
      "name": "area/persistence",
      "color": "FBCA04",
      "default": false,
      "description": "OBSOLETE, DO NOT USE"
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2122256208,
      "node_id": "MDU6TGFiZWwyMTIyMjU2MjA4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-reactive",
      "name": "area/hibernate-reactive",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2236032169,
      "node_id": "MDU6TGFiZWwyMjM2MDMyMTY5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/health",
      "name": "area/health",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/155",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/155",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/155/labels",
    "id": 7262270,
    "node_id": "MI_kwDOCFbutM4AbtA-",
    "number": 155,
    "title": "2.3.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 82,
    "state": "closed",
    "created_at": "2021-10-18T08:24:48Z",
    "updated_at": "2021-12-07T21:29:09Z",
    "due_on": null,
    "closed_at": "2021-10-20T13:14:36Z"
  },
  "comments": 24,
  "created_at": "2021-09-15T09:19:28Z",
  "updated_at": "2021-10-18T08:34:40Z",
  "closed_at": "2021-09-30T05:30:32Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nThe following health check based on the `AsyncHealthCheck` example from the [smallrye-health doc](https://quarkus.io/guides/smallrye-health#reactive-health-checks) works perfectly fine with Quarkus `1.13.7` when Hibernate Reactive is used:\r\n\r\n```\r\n@ApplicationScoped\r\n@Liveness\r\npublic class MyHealthCheck implements AsyncHealthCheck {\r\n\r\n    @Inject\r\n    Mutiny.Session session;\r\n\r\n    @Override\r\n    public Uni<HealthCheckResponse> call() {\r\n        return session.createNativeQuery(\"SELECT 1\")\r\n                .getSingleResult()\r\n                .replaceWith(TRUE)\r\n                .onFailure().recoverWithItem(FALSE)\r\n                .onItem().transform(dbState ->\r\n                        HealthCheckResponse.named(\"Health check\").status(dbState).build()\r\n                );\r\n    }\r\n}\r\n```\r\n\r\nWith Quarkus `2.2.2.Final`, the same code no longer works because the `call` method isn't run on the Vert.x event loop thread.\r\n\r\n### Expected behavior\r\n\r\nThe check should be run on the Vert.x event loop thread.\r\n\r\n### Actual behavior\r\n\r\n```\r\n2021-09-15 11:09:45,142 ERROR [io.sma.health] (executor-thread-0) SRHCK01000: Error processing Health Checks: java.lang.IllegalStateException: HR000068: This method should exclusively be invoked from a Vert.x EventLoop thread; currently running on thread 'executor-thread-0'\r\n        at org.hibernate.reactive.common.InternalStateAssertions.assertUseOnEventLoop(InternalStateAssertions.java:40)\r\n        at org.hibernate.reactive.mutiny.impl.MutinySessionFactoryImpl.proxyConnection(MutinySessionFactoryImpl.java:150)\r\n        at org.hibernate.reactive.mutiny.impl.MutinySessionFactoryImpl.openSession(MutinySessionFactoryImpl.java:69)\r\n        at io.quarkus.hibernate.reactive.runtime.ReactiveSessionProducer.createMutinySession(ReactiveSessionProducer.java:23)\r\n        at io.quarkus.hibernate.reactive.runtime.ReactiveSessionProducer_ProducerMethod_createMutinySession_1321d110ee9e92bda147899150401e0a136779c7_Bean.create(ReactiveSessionProducer_ProducerMethod_createMutinySession_1321d110ee9e92bda147899150401e0a136779c7_Bean.zig:247)\r\n        at io.quarkus.hibernate.reactive.runtime.ReactiveSessionProducer_ProducerMethod_createMutinySession_1321d110ee9e92bda147899150401e0a136779c7_Bean.create(ReactiveSessionProducer_ProducerMethod_createMutinySession_1321d110ee9e92bda147899150401e0a136779c7_Bean.zig:285)\r\n        at io.quarkus.arc.impl.RequestContext.getIfActive(RequestContext.java:68)\r\n        at io.quarkus.arc.impl.ClientProxies.getDelegate(ClientProxies.java:33)\r\n        at io.quarkus.hibernate.reactive.runtime.ReactiveSessionProducer_ProducerMethod_createMutinySession_1321d110ee9e92bda147899150401e0a136779c7_ClientProxy.arc$delegate(ReactiveSessionProducer_ProducerMethod_createMutinySession_1321d110ee9e92bda147899150401e0a136779c7_ClientProxy.zig:60)\r\n        at io.quarkus.hibernate.reactive.runtime.ReactiveSessionProducer_ProducerMethod_createMutinySession_1321d110ee9e92bda147899150401e0a136779c7_ClientProxy.createNativeQuery(ReactiveSessionProducer_ProducerMethod_createMutinySession_1321d110ee9e92bda147899150401e0a136779c7_ClientProxy.zig:294)\r\n        at org.acme.FailingHealthCheck.call(FailingHealthCheck.java:24)\r\n        at org.acme.FailingHealthCheck_ClientProxy.call(FailingHealthCheck_ClientProxy.zig:203)\r\n        at io.smallrye.context.impl.wrappers.SlowContextualSupplier.get(SlowContextualSupplier.java:21)\r\n        at io.smallrye.mutiny.operators.uni.builders.UniCreateFromDeferredSupplier.subscribe(UniCreateFromDeferredSupplier.java:25)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap.subscribe(UniOnFailureFlatMap.java:31)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniOnItemTransform.subscribe(UniOnItemTransform.java:22)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniAndCombination$UniHandler.subscribe(UniAndCombination.java:203)\r\n        at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n        at io.smallrye.mutiny.operators.uni.UniAndCombination$AndSupervisor.run(UniAndCombination.java:71)\r\n        at io.smallrye.mutiny.operators.uni.UniAndCombination$AndSupervisor.access$000(UniAndCombination.java:53)\r\n        at io.smallrye.mutiny.operators.uni.UniAndCombination.subscribe(UniAndCombination.java:50)\r\n        at io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n        at io.smallrye.mutiny.operators.uni.UniBlockingAwait.await(UniBlockingAwait.java:54)\r\n        at io.smallrye.mutiny.groups.UniAwait.atMost(UniAwait.java:61)\r\n        at io.smallrye.health.SmallRyeHealthReporter.getHealth(SmallRyeHealthReporter.java:192)\r\n        at io.smallrye.health.SmallRyeHealthReporter_ClientProxy.getHealth(SmallRyeHealthReporter_ClientProxy.zig:802)\r\n        at io.quarkus.smallrye.health.runtime.SmallRyeHealthHandler.getHealth(SmallRyeHealthHandler.java:11)\r\n        at io.quarkus.smallrye.health.runtime.SmallRyeHealthHandlerBase.doHandle(SmallRyeHealthHandlerBase.java:44)\r\n        at io.quarkus.smallrye.health.runtime.SmallRyeHealthHandlerBase.handle(SmallRyeHealthHandlerBase.java:31)\r\n        at io.quarkus.smallrye.health.runtime.SmallRyeHealthHandler.handle(SmallRyeHealthHandler.java:7)\r\n        at io.quarkus.smallrye.health.runtime.SmallRyeHealthHandlerBase.handle(SmallRyeHealthHandlerBase.java:19)\r\n        at io.vertx.ext.web.impl.BlockingHandlerDecorator.lambda$handle$0(BlockingHandlerDecorator.java:48)\r\n        at io.vertx.core.impl.ContextImpl.lambda$null$0(ContextImpl.java:159)\r\n        at io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:100)\r\n        at io.vertx.core.impl.ContextImpl.lambda$executeBlocking$1(ContextImpl.java:157)\r\n        at io.quarkus.vertx.core.runtime.VertxCoreRecorder$13.runWith(VertxCoreRecorder.java:543)\r\n        at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2449)\r\n        at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1478)\r\n        at org.jboss.threads.DelegatingRunnable.run(DelegatingRunnable.java:29)\r\n        at org.jboss.threads.ThreadLocalResettingRunnable.run(ThreadLocalResettingRunnable.java:29)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:829)\r\n```\r\n\r\n### How to Reproduce?\r\n\r\nSteps to reproduce:\r\n\r\n1. Clone https://github.com/gwenneg/quarkus-async-health-check\r\n2. Run `./mvnw clean install`\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.2.2.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20166/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20166/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
