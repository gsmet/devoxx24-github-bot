{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41216",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41216/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41216/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41216/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/41216",
  "id": 2353842310,
  "node_id": "I_kwDOCFbutM6MTMiG",
  "number": 41216,
  "title": "Error Quarkus Native Build step org.apache.camel.quarkus.core.deployment.CamelProcessor#camelServices threw an exception: java.nio.file.ClosedFileSystemException",
  "labels": [
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2744442223,
      "node_id": "MDU6TGFiZWwyNzQ0NDQyMjIz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/needs-reproducer",
      "name": "triage/needs-reproducer",
      "color": "FDE078",
      "default": false,
      "description": "We are waiting for a reproducer."
    },
    {
      "id": 5085228218,
      "node_id": "LA_kwDOCFbutM8AAAABLxpsug",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/needs-feedback",
      "name": "triage/needs-feedback",
      "color": "FDE078",
      "default": false,
      "description": "We are waiting for feedback."
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2024-06-14T18:00:44Z",
  "updated_at": "2024-07-10T10:18:29Z",
  "closed_at": "2024-07-10T10:18:29Z",
  "active_lock_reason": null,
  "body": "Good afternoon, I am currently working with Camel and Quarkus and I am trying to compile my native code, it is giving me the following error when trying to do the native compilation:\r\n\r\n```\r\n[error]: Build step org.apache.camel.quarkus.core.deployment.CamelNativeImageProcessor#camelRuntimeCatalog threw an exception: java.nio.file.ClosedFileSystemException\r\n[ERROR]         at jdk.zipfs/jdk.nio.zipfs.ZipFileSystem.ensureOpen(ZipFileSystem.java:1666)\r\n[ERROR]         at jdk.zipfs/jdk.nio.zipfs.ZipFileSystem.getFileAttributes(ZipFileSystem.java:536)\r\n[ERROR]         at jdk.zipfs/jdk.nio.zipfs.ZipPath.readAttributes(ZipPath.java:767)\r\n[ERROR]         at jdk.zipfs/jdk.nio.zipfs.ZipPath.readAttributes(ZipPath.java:777)\r\n[ERROR]         at jdk.zipfs/jdk.nio.zipfs.ZipFileSystemProvider.readAttributes(ZipFileSystemProvider.java:276)\r\n[ERROR]         at java.base/java.nio.file.Files.readAttributes(Files.java:1851)\r\n[ERROR]         at java.base/java.nio.file.Files.isDirectory(Files.java:2322)\r\n[ERROR]         at org.apache.camel.quarkus.core.deployment.util.CamelSupport.services(CamelSupport.java:62)\r\n[ERROR]         at org.apache.camel.quarkus.core.deployment.CamelNativeImageProcessor.camelRuntimeCatalog(CamelNativeImageProcessor.java:177)\r\n[ERROR]         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n[ERROR]         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n[ERROR]         at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n[ERROR]         at java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n[ERROR]         at io.quarkus.deployment.ExtensionLoader$3.execute(ExtensionLoader.java:864)\r\n[ERROR]         at io.quarkus.builder.BuildContext.run(BuildContext.java:282)\r\n[ERROR]         at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)\r\n[ERROR]         at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)\r\n[ERROR]         at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)\r\n[ERROR]         at java.base/java.lang.Thread.run(Thread.java:833)\r\n[ERROR]         at org.jboss.threads.JBossThread.run(JBossThread.java:501)\r\n```\r\n\r\nThe command to compile natively that I am using is the following:\r\n\r\n`/mvnw package -Pnative -Dquarkus.native.container-build=true -Djacoco.destFile=target/jacoco-report/jacoco.xml verify org.jacoco:jacoco-maven-plugin:0.8.7:prepare-agent`\r\n\r\nAttaches my pom.xml:\r\n\r\npom.xml\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <groupId>org.tmve.subscriber</groupId>\r\n    <artifactId>get-activate-session-by-ip</artifactId>\r\n    <version>1.0.0-DEV</version>\r\n    <properties>\r\n        <compiler-plugin.version>3.11.0</compiler-plugin.version>\r\n        <maven.compiler.release>17</maven.compiler.release>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\r\n        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\r\n        <quarkus.platform.version>3.2.10.Final</quarkus.platform.version>\r\n        <skipITs>true</skipITs>\r\n        <surefire-plugin.version>3.0.0</surefire-plugin.version>\r\n        <jacoco.version>0.8.7</jacoco.version>\r\n        <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/jacoco-report/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>\r\n    </properties>\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <dependency>\r\n                <groupId>${quarkus.platform.group-id}</groupId>\r\n                <artifactId>${quarkus.platform.artifact-id}</artifactId>\r\n                <version>${quarkus.platform.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>${quarkus.platform.group-id}</groupId>\r\n                <artifactId>quarkus-camel-bom</artifactId>\r\n                <version>${quarkus.platform.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-rest-openapi</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-bean-validator</artifactId>\r\n            <version>3.7.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-bean</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-direct</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-http</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-jackson</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-jaxb</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-log</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-rest</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-arc</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.22</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-openapi-java</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-smallrye-openapi</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.webjars</groupId>\r\n            <artifactId>swagger-ui</artifactId>\r\n            <version>4.11.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.camel.quarkus</groupId>\r\n            <artifactId>camel-quarkus-opentelemetry</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-opentelemetry-exporter-otlp</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-junit5</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-jacoco</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.rest-assured</groupId>\r\n            <artifactId>rest-assured</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.swagger</groupId>\r\n            <artifactId>swagger-annotations</artifactId>\r\n            <version>1.6.11</version>\r\n        </dependency>\r\n    </dependencies>\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>${quarkus.platform.group-id}</groupId>\r\n                <artifactId>quarkus-maven-plugin</artifactId>\r\n                <version>${quarkus.platform.version}</version>\r\n                <extensions>true</extensions>\r\n                <executions>\r\n                    <execution>\r\n                        <goals>\r\n                            <goal>build</goal>\r\n                            <goal>generate-code</goal>\r\n                            <goal>generate-code-tests</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n            <plugin>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>${compiler-plugin.version}</version>\r\n                <configuration>\r\n                    <compilerArgs>\r\n                        <arg>-parameters</arg>\r\n                    </compilerArgs>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <artifactId>maven-surefire-plugin</artifactId>\r\n                <version>${surefire-plugin.version}</version>\r\n                <configuration>\r\n                    <systemPropertyVariables>\r\n                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\r\n                        <maven.home>${maven.home}</maven.home>\r\n                    </systemPropertyVariables>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <artifactId>maven-failsafe-plugin</artifactId>\r\n                <version>${surefire-plugin.version}</version>\r\n                <executions>\r\n                    <execution>\r\n                        <goals>\r\n                            <goal>integration-test</goal>\r\n                            <goal>verify</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n                <configuration>\r\n                    <systemPropertyVariables>\r\n                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner\r\n                        </native.image.path>\r\n                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\r\n                        <maven.home>${maven.home}</maven.home>\r\n                    </systemPropertyVariables>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n    <profiles>\r\n        <profile>\r\n            <id>native</id>\r\n            <activation>\r\n                <property>\r\n                    <name>native</name>\r\n                </property>\r\n            </activation>\r\n            <properties>\r\n                <skipITs>false</skipITs>\r\n                <quarkus.package.type>native</quarkus.package.type>\r\n            </properties>\r\n        </profile>\r\n    </profiles>\r\n</project>\r\n```\r\nClass Route:\r\n\r\n```\r\npackage com.tmve.subscriber.ms.route;\r\n\r\nimport com.tmve.subscriber.ms.beans.BeanDate;\r\nimport com.tmve.subscriber.ms.beans.request.Request;\r\nimport com.tmve.subscriber.ms.beans.response.Response;\r\nimport com.tmve.subscriber.ms.exceptions.InvalidFormatException;\r\nimport com.tmve.subscriber.ms.exceptions.NotFoundDataException;\r\nimport com.tmve.subscriber.ms.processor.FindPhoneNumberByIpDummyProcess;\r\nimport com.tmve.subscriber.ms.processor.NotFoundDataExcepcionProcessor;\r\nimport com.tmve.subscriber.ms.processor.RequiredValueExcepcionProcessor;\r\nimport jakarta.enterprise.context.ApplicationScoped;\r\nimport org.apache.camel.builder.RouteBuilder;\r\nimport org.apache.camel.component.bean.validator.BeanValidationException;\r\nimport org.apache.camel.model.rest.RestBindingMode;\r\nimport org.apache.camel.model.rest.RestParamType;\r\nimport org.eclipse.microprofile.config.inject.ConfigProperty;\r\n\r\n@ApplicationScoped\r\npublic class RestRoute extends RouteBuilder {\r\n    @ConfigProperty(name = \"client.idp\")\r\n    String urlIdp;\r\n\r\n    @ConfigProperty(name = \"path.openapi\")\r\n    String pathOpenapi;\r\n\r\n    @ConfigProperty(name = \"descripcion.servicio\")\r\n    String descriptionService;\r\n\r\n\r\n    private static final String SALIDA_BSS_EXCEPTION = \"Salida del microservicio GetActivateSessionByIp ${body}\";\r\n    private static final String MSG_EXCEPTION = \"Descripcion de la Exception: ${exception.message}\";\r\n\r\n    private static final String DATE_LOG = \"[${bean:BeanDate.getCurrentDateTime()}] \";\r\n\r\n    @Override\r\n    public void configure() {\r\n\r\n        BeanDate beanDate= new BeanDate();\r\n        getContext().getRegistry().bind(\"BeanDate\", beanDate);\r\n\r\n        restConfiguration().bindingMode(RestBindingMode.json).dataFormatProperty(\"json.in.disableFeatures\",\"FAIL_ON_UNKNOWN_PROPERTIES\")\r\n                /*.clientRequestValidation(true) */\r\n                .apiContextPath(pathOpenapi)\r\n                .apiProperty(\"api.title\",\"GetActiveSessionByIp\")\r\n                .apiProperty(\"api.description\",descriptionService)\r\n                .apiProperty(\"api-version\",\"1.0.0\")\r\n                .apiProperty(\"cors\",\"true\");\r\n        rest(\"/api/\")\r\n                .produces(\"application/json\")\r\n                .consumes(\"application/json\")\r\n                .post(\"/getActivateSessionByIp\")\r\n                .type(Request.class)\r\n                .param().name(\"x-transaction-id\").type(RestParamType.header).required(true).endParam()\r\n                .outType(Response.class)\r\n                .param().name(\"Response\").type(RestParamType.body).description(\"Parametros de Salidas\")\r\n                .required(true)\r\n                .endParam().to(\"direct:pipeline\");\r\n                from(\"direct:pipeline\")\r\n                        .doTry()\r\n                            .process(exchange -> {\r\n                                String xTransactionId = exchange.getIn().getHeader(\"x-transaction-id\", String.class);\r\n                                String xUser=exchange.getIn().getHeader(\"x-user\",String.class);\r\n                                String xToken=exchange.getIn().getHeader(\"x-token\",String.class);\r\n                                if (xTransactionId == null || xTransactionId.isEmpty() || xUser == null || xUser.isEmpty() || xToken == null || xToken.isEmpty()) {\r\n                                    throw new InvalidFormatException(\"header parameters is missing or invalid\");\r\n                                }\r\n                            })\r\n                            .log(DATE_LOG+ \"Valor Header x-transaction-id: ${header.x-transaction-id}\")\r\n                            .to(\"bean-validator:validateRequest\")\r\n                            .log(DATE_LOG+ \"Datos de Entrada del MS: ${body}\")\r\n                            .process(new FindPhoneNumberByIpDummyProcess())\r\n                            .log(DATE_LOG+ \"Datos de Salida del MS: ${body}\")\r\n                        .endDoTry()\r\n                        .doCatch(BeanValidationException.class)\r\n                            .process(new RequiredValueExcepcionProcessor())\r\n                            .log(DATE_LOG+MSG_EXCEPTION)\r\n                            .log(DATE_LOG+SALIDA_BSS_EXCEPTION)\r\n                        .doCatch(InvalidFormatException.class)\r\n                            .process(new RequiredValueExcepcionProcessor())\r\n                            .log(DATE_LOG+MSG_EXCEPTION)\r\n                            .log(DATE_LOG+SALIDA_BSS_EXCEPTION)\r\n                        .doCatch(NotFoundDataException.class)\r\n                            .process(new NotFoundDataExcepcionProcessor())\r\n                            .log(DATE_LOG+MSG_EXCEPTION)\r\n                            .log(DATE_LOG+SALIDA_BSS_EXCEPTION);\r\n    }\r\n}\r\n```\r\napplication.properties\r\n\r\n```\r\nquarkus.ssl.native=true\r\nquarkus.http.ssl-port=${PORT-SSl:8080}\r\nquarkus.http.insecure-requests=disabled\r\nquarkus.http.ssl.certificate.key-store-file-type=JKS\r\nquarkus.http.ssl.certificate.key-store-file=${UBICATION_CERTIFICATE_SSL:srvdevrma1.jks}\r\nquarkus.http.ssl.certificate.key-store-password=${PASSWORD_CERTIFICATE_SSL:11111111111}\r\nquarkus.http.cors=true\r\nquarkus.jackson.timezone=${TIME_ZONE:GMT-4}\r\nquarkus.http.read-timeout=${READ_TIMEOUT:30000}\r\npath=/api/getActivateSessionByIp\r\n\r\ndescripcion.servicio=Microservicio que ejecuta la busqueda de un numero movil a partir de una IP/Puerto en la plataforma de Trazabilidad de Red\r\n#ssl client\r\nclient.ssl.password=service123\r\nclient.ssl.resource=srvdevrma1.jks\r\n\r\n\r\n#Open telemetry\r\nquarkus.application.name=GetActivateSessionByIp\r\nquarkus.otel.exporter.otlp.traces.endpoint=${URL_JAEGER:http://172.28.2.107:4317}\r\nquarkus.otel.enabled=true\r\nquarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n\r\n\r\n#Ruta OpenApi\r\npath.openapi=/api/getActivateSessionByIp/openapi/swagger-ui/\r\n\r\n#Headersw\r\nquarkus.http.header.\"X-Content-Type-Options\".value=nosniff\r\nquarkus.http.header.\"X-Frame-Options\".value=DENY\r\nquarkus.http.header.\"Content-Security-Policy\".value=default-src\r\nquarkus.http.header.\"X-XSS-Protection\".value=1; mode=block\r\nquarkus.http.header.\"Expect-CT\".value=report-only\r\nquarkus.http.header.\"Permissions-Policy\".value=geolocation=*, fullscreen=*\r\nquarkus.http.header.\"Cache-Control\".value=no-cache\r\n\r\n#Report Jacoco\r\nquarkus.jacoco.excludes=com/huawei/**\r\n\r\n#path.openapi=/openapi.yaml\r\ncamel.rest.api-context-path=/api/getActivateSessionByIp/openapi.yaml\r\nquarkus.swagger-ui.urls.camel=/api/getActivateSessionByIp/openapi.yaml\r\n\r\nquarkus.swagger-ui.enable=true\r\nquarkus.swagger-ui.path=/api/getActivateSessionByIp/swagger-ui/\r\nquarkus.swagger-ui.always-include=true\r\n\r\n#Error Code\r\n\r\nerror.0.code=0\r\nerror.0.message=Transaccion Exitosa\r\n\r\nerror.101.code=101\r\nerror.101.message=Token invalido\r\n\r\nerror.102.code=102\r\nerror.102.message=Peticion incorrecta\r\n\r\nerror.103.code=103\r\nerror.103.message=Imposible identificar cliente con datos entregados\r\n\r\nerror.104.code=104\r\nerror.104.message=Error interno\r\n\r\nerror.105.code=105\r\nerror.105.message=Timeout\r\n\r\n#native-build\r\nquarkus.native.additional-build-args=-march=compatibility,-H:IncludeResources=.*\\\\.jks\r\n```\r\n\r\nProccessor:\r\n\r\nNotFoundDataExcepcionProcessor\r\n\r\n```\r\npackage com.tmve.subscriber.ms.processor;\r\n\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.tmve.subscriber.ms.beans.response.Response;\r\nimport com.tmve.subscriber.ms.mapping.IGetActiveSessionByIpResponse;\r\nimport com.tmve.subscriber.ms.mapping.impl.GetActiveSessionByIpResponseImpl;\r\nimport jakarta.enterprise.context.ApplicationScoped;\r\nimport org.apache.camel.Exchange;\r\nimport org.apache.camel.Processor;\r\nimport org.eclipse.microprofile.config.ConfigProvider;\r\n\r\n@ApplicationScoped\r\npublic class NotFoundDataExcepcionProcessor implements Processor {\r\n\r\n    private final String errorCode103 = ConfigProvider.getConfig().getValue(\"error.103.code\", String.class);\r\n    private final String errorMessage103 = ConfigProvider.getConfig().getValue(\"error.103.message\", String.class);\r\n    private final IGetActiveSessionByIpResponse response;\r\n    private final ObjectMapper objectMapper;\r\n\r\n    public NotFoundDataExcepcionProcessor() {\r\n        response = new GetActiveSessionByIpResponseImpl();\r\n        objectMapper = new ObjectMapper();\r\n    }\r\n    @Override\r\n    public void process(Exchange exchange) throws Exception {\r\n\r\n        Response apiResponse = response.toResponse(null,errorCode103, errorMessage103);\r\n        String jsonResponse = objectMapper.writeValueAsString(apiResponse);\r\n        exchange.setProperty(\"bodyRs\", objectMapper.writeValueAsString(jsonResponse));\r\n        exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, \"application/json\");\r\n        exchange.getMessage().setHeader(Exchange.HTTP_RESPONSE_CODE, 404);\r\n        exchange.getMessage().setBody(jsonResponse);\r\n    }\r\n}\r\n```\r\nRequiredValueExcepcionProcessor\r\n\r\n```\r\npackage com.tmve.subscriber.ms.processor;\r\n\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.tmve.subscriber.ms.beans.response.Response;\r\nimport com.tmve.subscriber.ms.mapping.IGetActiveSessionByIpResponse;\r\nimport com.tmve.subscriber.ms.mapping.impl.GetActiveSessionByIpResponseImpl;\r\nimport jakarta.enterprise.context.ApplicationScoped;\r\nimport org.apache.camel.Exchange;\r\nimport org.apache.camel.Processor;\r\nimport org.eclipse.microprofile.config.ConfigProvider;\r\n\r\n@ApplicationScoped\r\npublic class RequiredValueExcepcionProcessor implements Processor {\r\n\r\n    private final String errorCode102 = ConfigProvider.getConfig().getValue(\"error.102.code\", String.class);\r\n    private final String errorMessage102 = ConfigProvider.getConfig().getValue(\"error.102.message\", String.class);\r\n    private final IGetActiveSessionByIpResponse response;\r\n    private final ObjectMapper objectMapper;\r\n\r\n    public RequiredValueExcepcionProcessor() {\r\n        response = new GetActiveSessionByIpResponseImpl();\r\n        objectMapper = new ObjectMapper();\r\n    }\r\n    @Override\r\n    public void process(Exchange exchange) throws Exception {\r\n\r\n        String id= exchange.getProperty(\"id\",String.class);\r\n        Response apiResponse = response.toResponse(null,errorCode102, errorMessage102);\r\n        String jsonResponse = objectMapper.writeValueAsString(apiResponse);\r\n        exchange.setProperty(\"bodyRs\", objectMapper.writeValueAsString(jsonResponse));\r\n        exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, \"application/json\");\r\n        exchange.getMessage().setHeader(Exchange.HTTP_RESPONSE_CODE, 400);\r\n        exchange.getMessage().setBody(jsonResponse);\r\n    }\r\n}\r\n```\r\n\r\nFindPhoneNumberByIpDummyProcess\r\n\r\n```\r\npackage com.tmve.subscriber.ms.processor;\r\n\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.tmve.subscriber.ms.beans.request.Request;\r\nimport com.tmve.subscriber.ms.beans.response.Response;\r\nimport com.tmve.subscriber.ms.exceptions.NotFoundDataException;\r\nimport com.tmve.subscriber.ms.mapping.IGetActiveSessionByIpResponse;\r\nimport com.tmve.subscriber.ms.mapping.impl.GetActiveSessionByIpResponseImpl;\r\nimport com.tmve.subscriber.ms.utilities.PhoneNumberByIP;\r\nimport jakarta.enterprise.context.ApplicationScoped;\r\nimport org.apache.camel.Exchange;\r\nimport org.apache.camel.Processor;\r\nimport org.eclipse.microprofile.config.ConfigProvider;\r\n\r\n@ApplicationScoped\r\npublic class FindPhoneNumberByIpDummyProcess implements Processor {\r\n\r\n    private final String errorCode0 = ConfigProvider.getConfig().getValue(\"error.0.code\", String.class);\r\n    private final String errorMessage0 = ConfigProvider.getConfig().getValue(\"error.0.message\", String.class);\r\n    private final IGetActiveSessionByIpResponse response;\r\n    private final ObjectMapper objectMapper;\r\n\r\n    public FindPhoneNumberByIpDummyProcess() {\r\n        response = new GetActiveSessionByIpResponseImpl();\r\n        objectMapper = new ObjectMapper();\r\n    }\r\n\r\n    @Override\r\n    public void process(Exchange exchange) throws Exception {\r\n        Request request=exchange.getIn().getBody(Request.class);\r\n        String ipAddress=request.getIp_address();\r\n        String sourcePort= String.valueOf(request.getSource_port());\r\n        String phoneNumber;\r\n        if (PhoneNumberByIP.map.containsKey(ipAddress)){\r\n            phoneNumber=PhoneNumberByIP.map.get(ipAddress);\r\n        } else {\r\n            throw new NotFoundDataException(\"No se encontro informacion asociado al subscriptor\");\r\n        }\r\n        Response apiResponse = response.toResponse(phoneNumber,errorCode0, errorMessage0);\r\n        String jsonResponse = objectMapper.writeValueAsString(apiResponse);\r\n        exchange.setProperty(\"bodyRs\", objectMapper.writeValueAsString(jsonResponse));\r\n        exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, \"application/json\");\r\n        exchange.getMessage().setHeader(Exchange.HTTP_RESPONSE_CODE, 200);\r\n        exchange.getMessage().setBody(apiResponse);\r\n    }\r\n}\r\n```\r\n\r\nClass PhoneNumberByIP \r\n\r\n```\r\npackage com.tmve.subscriber.ms.utilities;\r\n\r\nimport io.quarkus.runtime.annotations.RegisterForReflection;\r\n\r\nimport java.util.Map;\r\n\r\npublic class PhoneNumberByIP {\r\n\r\n    public static Map<String,String> map= Map.ofEntries(\r\n            Map.entry(\"35.170.127.17\",\"+5842xxxxxx\"),\r\n            Map.entry(\"188.225.2.32\",\"+58414xxxxxx\"),\r\n            Map.entry(\"255.110.216.33\",\"+58414xxxxxx\"),\r\n            Map.entry(\"101.54.36.138\",\"+584145xxxxxx\"),\r\n            Map.entry(\"172.26.120.251\",\"+58414xxxxxx\"),\r\n            Map.entry(\"152.83.50.147\",\"+58414xxxxxx\"),\r\n            Map.entry(\"198.57.235.107\",\"+58414xxxxxx\"));\r\n}\r\n\r\n```\r\n\r\nWhat could be happening so that my code is not compiling correctly?\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41216/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41216/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
