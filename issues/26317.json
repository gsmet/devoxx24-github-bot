{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26317",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26317/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26317/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26317/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26317",
  "id": 1282372238,
  "node_id": "I_kwDOCFbutM5Mb3KO",
  "number": 26317,
  "title": "Support of encryptet payload in JWT(JWE) idtoken",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/189",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189/labels",
    "id": 8065991,
    "node_id": "MI_kwDOCFbutM4AexPH",
    "number": 189,
    "title": "2.11.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 244,
    "state": "closed",
    "created_at": "2022-06-09T10:38:20Z",
    "updated_at": "2023-01-13T10:47:01Z",
    "due_on": null,
    "closed_at": "2022-07-13T14:14:46Z"
  },
  "comments": 24,
  "created_at": "2022-06-23T13:01:14Z",
  "updated_at": "2022-07-10T17:25:11Z",
  "closed_at": "2022-07-10T17:25:06Z",
  "active_lock_reason": null,
  "body": "### Description\n\nHello!\r\nWe have some issue when working with OIDC extension and use the \"private_key_jwt with the PEM key file\" flow.\r\nIn our case the idtoken is encryptet (JWE), on the token exchange we get an authexception with a respond of 401 on the client.\r\n\r\nI can get it to work by update the sourcecode of the OIDC extension in quarkus and then manually decrypt the idtoken with same key as i use for sign the client assertion.\r\nWe use a PEM file for this property (quarkus.oidc.credentials.jwt.key-file)\r\n\r\nWith this code in OIDC extension I can get it to work. (the try catch i added):\r\n\r\n```java\r\nimport java.security.PrivateKey;\r\nimport java.text.ParseException;\r\nimport com.nimbusds.jose.JOSEException;\r\nimport com.nimbusds.jose.crypto.RSADecrypter;\r\nimport com.nimbusds.jwt.EncryptedJWT;\r\n\r\nprivate AuthorizationCodeTokens getAuthorizationCodeTokens(HttpResponse<Buffer> resp) {\r\n        JsonObject json = getJsonObject(resp);\r\n        final String idToken = json.getString(OidcConstants.ID_TOKEN_VALUE);\r\n        final String accessToken = json.getString(OidcConstants.ACCESS_TOKEN_VALUE);\r\n        final String refreshToken = json.getString(OidcConstants.REFRESH_TOKEN_VALUE);\r\n        try {\r\n            EncryptedJWT encryptedJwt = EncryptedJWT.parse(idToken);\r\n            encryptedJwt.decrypt(new RSADecrypter((PrivateKey) clientJwtKey));\r\n            return new AuthorizationCodeTokens(encryptedJwt.getPayload().toString(), accessToken, refreshToken);\r\n        } catch (ParseException | JOSEException ex) {\r\n            LOG.debugf(\"Exception when try to decrypt: %s\", ex.getMessage());\r\n        }\r\n\r\n        return new AuthorizationCodeTokens(idToken, accessToken, refreshToken);\r\n}\r\n``` \r\nShould this work out of the box? maybe I missing some configuration-keys, libs or is JWE is not supported yet in OIDC extension?\r\nBest regards\r\nDaniel\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26317/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26317/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
