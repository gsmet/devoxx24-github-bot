{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37360",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37360/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37360/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37360/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/37360",
  "id": 2015120537,
  "node_id": "I_kwDOCFbutM54HEyZ",
  "number": 37360,
  "title": "Disable OidcClientFilter at runtime for simpler application testing",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/292",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/292",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/292/labels",
    "id": 10251923,
    "node_id": "MI_kwDOCFbutM4AnG6T",
    "number": 292,
    "title": "3.6.1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 49,
    "state": "closed",
    "created_at": "2023-11-30T17:19:55Z",
    "updated_at": "2024-01-16T14:23:09Z",
    "due_on": null,
    "closed_at": "2023-12-05T17:30:03Z"
  },
  "comments": 2,
  "created_at": "2023-11-28T19:06:15Z",
  "updated_at": "2024-06-17T08:57:21Z",
  "closed_at": "2023-11-29T10:15:51Z",
  "active_lock_reason": null,
  "body": "### Discussed in https://github.com/quarkusio/quarkus/discussions/37283\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **lmartella1** November 23, 2023</sup>\r\nHello,\r\nin our Quarkus application we rely on the _OidcClientFilter_ to instrument Quarkus in acquiring a token before calling a given REST Client.\r\nIn certain cases, such as when we run quarkus tests or we deploy the application in a local environment, we believe it could be useful to disable the OidcClientFilter in a way that the token is not acquired and the client call is made to the remote (in many cases mocked) server without any bearer token. In all these cases, is more relevant to test the application business logic than the actual token acquisition and security aspects.\r\n\r\nLooking at the current available configuration for the oidc-client, I don't see any runtime-overridable configuration that can serve this scope and instrument Quarkus to just ignore the _OidcClientFilter_ annotation either globally, for all the oidc clients, or specifically for a given named oidc client.\r\n\r\nWhat is your vision about this use case? Is it a feature that could be implemented in a future version of the framework? \r\n\r\nFor reference, we have already played with :\r\n- `quarkus.oidc-client.enabled=false` which works globally in disabling the token acquisition for all the annotated _OidcClientFilter_  REST Clients but which is fixed at build time and cannot be overridden at runtime. \r\n- `quarkus.oidc-client.\"id\".client-enabled=false` which is disabling a given oidc-client configuration in a way that, if the client is used then the following runtime exception is raised: `io.quarkus.oidc.client.runtime.DisabledOidcClientException`. \r\n\r\nThanks in advance,</div>",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37360/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37360/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
