{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24343",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24343/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24343/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24343/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24343",
  "id": 1170850072,
  "node_id": "I_kwDOCFbutM5FycEY",
  "number": 24343,
  "title": "Quarkus + Stork/consul round-robin service discovery cache expiration over nodes that are down (Baremetal)",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 3830648795,
      "node_id": "LA_kwDOCFbutM7kUw_b",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/stork",
      "name": "area/stork",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2022-03-16T10:48:05Z",
  "updated_at": "2022-03-17T13:10:55Z",
  "closed_at": "2022-03-17T13:10:55Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nQuarkusVersion: 2.7.4.Final\r\nReproducer:  https://github.com/quarkus-qe/quarkus-test-suite/pull/572\r\ncmd: `mvn clean verify -Dall-modules -pl service-discovery/stork-consul -Dit.test=StorkServiceDiscoveryIT#storkLoadBalancerServiceNodeDown`\r\n\r\nEven if Qaurkus/stork is not fault-tolerant and doesn't \"detect\" that a service node is down, there is a cache expiration property\r\n`stork.pong-replica.service-discovery.refresh-period` that in combination with a \"retry\" policy could do the \"job\". However, if a node is down and the cache has already expired, the Stork load balancer still dispatching requests to those nodes. \r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nIf a service node is down and cache expiration time has exceeded, I expected that Quarkus/stork only add a configuration into the cache if the service node is up and ready (maybe by calling to `/q/health/ready`)\r\n\r\n\r\n\r\n\r\n### Actual behavior\r\n\r\nA service node that is down is in Stork as an available node even if the stork cache has expired.\r\n\r\n### How to Reproduce?\r\n\r\nReproducer:  https://github.com/quarkus-qe/quarkus-test-suite/pull/572\r\n\r\ncmd: `mvn clean verify -Dall-modules -pl service-discovery/stork-consul -Dit.test=StorkServiceDiscoveryIT#storkLoadBalancerServiceNodeDown`\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n_No response_\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24343/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24343/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
