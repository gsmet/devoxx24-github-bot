{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23263",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23263/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23263/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23263/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23263",
  "id": 1117366451,
  "node_id": "I_kwDOCFbutM5Cmaiz",
  "number": 23263,
  "title": "RESTEasy Reactive: Reactive filter hangs the request when reading the body",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 20,
  "created_at": "2022-01-28T12:48:10Z",
  "updated_at": "2023-03-17T15:32:25Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWhen using RESTEasy Reactive with a Reactive filter, if we try to read the request body inside the filter, the filter is not terminating at all, so the request never returns a response.\r\n\r\nNote that this happens even when paying attention to making the stream read in the Quarkus worker thread, and then returning back to the vert.x thread, so it should not have problems there.\r\n\r\n### Expected behavior\r\n\r\nWhen using a request filter and reading the body inside the filter, the filter should complete properly and the HTTP request should proceed and be successful.\r\n\r\n### Actual behavior\r\n\r\nThe http request never returns a response when the filter is used.\r\n\r\n### How to Reproduce?\r\n\r\n1. Download the [example Project](https://github.com/quarkusio/quarkus/files/7958721/reactive-stream-issue.zip)\r\n2. Run the project using `mvn compile quarkus:dev`\r\n3. Make a request using the following curl:\r\n\r\n```\r\ncurl --request POST \\\r\n--url http://localhost:8080/getDummyId \\\r\n--header 'Accept: application/json' \\\r\n--header 'Content-Type: application/x-www-form-urlencoded' \\\r\n--data id=1\r\n```\r\n\r\nYou will notice that the request never completes.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nDarwin 20.6.0 Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64 x86_64\r\n\r\n### Output of `java -version`\r\n\r\nOpenJDK 64-Bit Server VM Temurin-11.0.13+8 (build 11.0.13+8, mixed mode)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.6.3.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nmaven\r\n\r\n### Additional information\r\n\r\nNote that after reading the HTTP Request body, we pay attention to setting a new InputStream to the http request using `setEntityStream`. This is a methodology that has worked nicely in the non-reactive version of RESTEasy. So one would expect that the filter would not have a problem doing the same thing using the same APIs in RESTEasy Reactive.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23263/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23263/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
