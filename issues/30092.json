{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30092",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30092/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30092/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30092/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30092",
  "id": 1513339956,
  "node_id": "I_kwDOCFbutM5aM7w0",
  "number": 30092,
  "title": "[Native] UnresolvedElementException: Discovered unresolved method during parsing: com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer._parseDoublePrimitive",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3267721944,
      "node_id": "MDU6TGFiZWwzMjY3NzIxOTQ0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/jackson",
      "name": "area/jackson",
      "color": "0366d6",
      "default": false,
      "description": "Issues related to Jackson (JSON library)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2022-12-29T03:36:10Z",
  "updated_at": "2023-01-02T06:51:08Z",
  "closed_at": "2023-01-02T06:51:07Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI'm upgrading Quarkus from `2.13.3.Final` to `2.15.1.Final`, and as part of that, upgraded my JDK from `22.1.0.0-Final-java11` to `22.3.0.1-Final-java17`. The Docker image is `wiradikusuma/graalvm-maven-for-quarkus:22.3.0.1-Final-java17` (https://github.com/wiradikusuma/docker-graalvm-maven-for-quarkus).\r\n\r\nAfter the upgrade, my native build fails with this exception:\r\n\r\n```\r\ncom.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String)\r\n```\r\n\r\nLog leading to the exception:\r\n\r\n```\r\n[INFO] [io.quarkus.deployment.pkg.steps.JarResultBuildStep] Building native image source jar: /Users/MAC_USERNAME/projects/foobar/backend/target/backend-1.0.0-SNAPSHOT-native-image-source-jar/backend-1.0.0-SNAPSHOT-runner.jar\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Building native image from /Users/MAC_USERNAME/projects/foobar/backend/target/backend-1.0.0-SNAPSHOT-native-image-source-jar/backend-1.0.0-SNAPSHOT-runner.jar\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Running Quarkus native-image plugin on GraalVM 22.3.0 Java 17 CE (Java Version 17.0.5+8-jvmci-22.3-b08)\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] /Users/MAC_USERNAME/.sdkman/candidates/java/22.3.r17-grl/bin/native-image -J-DCoordinatorEnvironmentBean.transactionStatusManagerEnable=false -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Dlogging.initial-configurator.min-level=500 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=3 -J-Duser.language=en -J-Duser.country=ID -J-Dfile.encoding=UTF-8 --features=io.quarkus.caffeine.runtime.graal.CacheConstructorsFeature,io.quarkus.jdbc.postgresql.runtime.graal.SQLXMLFeature,org.hibernate.graalvm.internal.QueryParsingSupport,org.hibernate.graalvm.internal.GraalVMStaticFeature,io.quarkus.runner.Feature,io.quarkus.runtime.graal.ResourcesFeature,io.quarkus.runtime.graal.DisableLoggingFeature,io.quarkus.hibernate.validator.runtime.DisableLoggingFeature,io.quarkus.hibernate.orm.runtime.graal.DisableLoggingFeature -J--add-exports=java.security.jgss/sun.security.krb5=ALL-UNNAMED -J--add-opens=java.base/java.text=ALL-UNNAMED -J--add-opens=java.base/java.io=ALL-UNNAMED -J--add-opens=java.base/java.lang.invoke=ALL-UNNAMED -J--add-opens=java.base/java.util=ALL-UNNAMED -H:+CollectImageBuildStatistics -H:ImageBuildStatisticsFile=backend-1.0.0-SNAPSHOT-runner-timing-stats.json -H:BuildOutputJSONFile=backend-1.0.0-SNAPSHOT-runner-build-output-stats.json --allow-incomplete-classpath --initialize-at-run-time=org.apache.commons.lang3.RandomStringUtils,org.apache.commons.lang3.RandomUtils -H:ReflectionConfigurationFiles=reflection-config.json -H:+AllowFoldMethods -J-Djava.awt.headless=true --no-fallback --link-at-build-time -H:+ReportExceptionStackTraces -H:-AddAllCharsets --enable-url-protocols=http,https -H:-UseServiceLoaderFeature -H:+StackTrace -J--add-exports=org.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED -J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jdk=ALL-UNNAMED --exclude-config io\\.netty\\.netty-codec /META-INF/native-image/io\\.netty/netty-codec/generated/handlers/reflect-config\\.json --exclude-config io\\.netty\\.netty-handler /META-INF/native-image/io\\.netty/netty-handler/generated/handlers/reflect-config\\.json backend-1.0.0-SNAPSHOT-runner -jar backend-1.0.0-SNAPSHOT-runner.jar\r\nWarning: Using a deprecated option --allow-incomplete-classpath from command line. Allowing an incomplete classpath is now the default. Use --link-at-build-time to report linking errors at image build time for a class or package.\r\nWarning: Using a deprecated option --allow-incomplete-classpath from 'META-INF/native-image/com.google.api/gax/native-image.properties' in 'file:///Users/MAC_USERNAME/projects/foobar/backend/target/backend-1.0.0-SNAPSHOT-native-image-source-jar/lib/com.google.api.gax-2.19.1.jar'. Allowing an incomplete classpath is now the default. Use --link-at-build-time to report linking errors at image build time for a class or package.\r\n========================================================================================================================\r\nGraalVM Native Image: Generating 'backend-1.0.0-SNAPSHOT-runner' (executable)...\r\n========================================================================================================================\r\n[1/7] Initializing...                                                                                   (28.6s @ 0.75GB)\r\n Version info: 'GraalVM 22.3.0 Java 17 CE'\r\n Java version info: '17.0.5+8-jvmci-22.3-b08'\r\n C compiler: cc (apple, arm64, 14.0.0)\r\n Garbage collector: Serial GC\r\n 15 user-specific feature(s)\r\n - com.google.api.gax.grpc.nativeimage.GrpcNettyFeature\r\n - com.google.api.gax.grpc.nativeimage.ProtobufMessageFeature\r\n - com.google.api.gax.nativeimage.GoogleJsonClientFeature\r\n - com.google.api.gax.nativeimage.OpenCensusFeature\r\n - com.oracle.svm.polyglot.scala.ScalaFeature\r\n - com.oracle.svm.thirdparty.gson.GsonFeature\r\n - io.quarkus.caffeine.runtime.graal.CacheConstructorsFeature\r\n - io.quarkus.hibernate.orm.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase for the [org.hibernate.Version, org.hibernate.annotations.common.Version, org.hibernate.dialect.Dialect] categories\r\n - io.quarkus.hibernate.validator.runtime.DisableLoggingFeature: Disables INFO logging during the analysis phase for the [org.hibernate.validator.internal.util.Version] categories\r\n - io.quarkus.jdbc.postgresql.runtime.graal.SQLXMLFeature\r\n - io.quarkus.runner.Feature: Auto-generated class by Quarkus from the existing extensions\r\n - io.quarkus.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase for the [org.jboss.threads] categories\r\n - io.quarkus.runtime.graal.ResourcesFeature: Register each line in META-INF/quarkus-native-resources.txt as a resource on Substrate VM\r\n - org.hibernate.graalvm.internal.GraalVMStaticFeature: Hibernate ORM's static reflection registrations for GraalVM\r\n - org.hibernate.graalvm.internal.QueryParsingSupport: Hibernate ORM's support for HQL Parser in GraalVM\r\n[2/7] Performing analysis...  []                                                                        (39.7s @ 3.68GB)\r\n  21,664 (93.96%) of 23,056 classes reachable\r\n  28,419 (63.57%) of 44,702 fields reachable\r\n  88,130 (81.08%) of 108,692 methods reachable\r\n   1,229 classes,     0 fields, and     0 methods registered for reflection\r\n       1 native library: -framework CoreServices\r\n\r\nFatal error: com.oracle.graal.pointsto.util.AnalysisError$ParsingError: Error encountered while parsing com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) \r\nParsing context:\r\n   at com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer.deserialize(OptionalDoubleDeserializer.java:29)\r\n   at com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer.deserialize(OptionalDoubleDeserializer.java:13)\r\n   at com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(TypeDeserializerBase.java:269)\r\n   at com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer._deserialize(AsWrapperTypeDeserializer.java:88)\r\n   at com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer.deserializeTypedFromAny(AsWrapperTypeDeserializer.java:67)\r\n...\r\n   at io.quarkus.vertx.runtime.jackson.QuarkusJacksonJsonCodec.fromParser(QuarkusJacksonJsonCodec.java:125)\r\n   at io.quarkus.vertx.runtime.jackson.QuarkusJacksonJsonCodec.fromString(QuarkusJacksonJsonCodec.java:95)\r\n   at io.vertx.core.json.JsonObject.fromJson(JsonObject.java:1250)\r\n   at io.vertx.core.json.JsonObject.<init>(JsonObject.java:51)\r\n   at io.vertx.core.impl.HAManager.checkQuorum(HAManager.java:369)\r\n...\r\nCaused by: org.graalvm.compiler.java.BytecodeParser$BytecodeParserError: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String). This error is reported at image build time because class com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer is registered for linking at image build time by command line\r\n\tat parsing com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer.deserialize(OptionalDoubleDeserializer.java:51)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.throwParserError(BytecodeParser.java:2518)\r\n\tat org.graalvm.nativeimage.builder/com.oracle.svm.hosted.phases.SharedGraphBuilderPhase$SharedBytecodeParser.throwParserError(SharedGraphBuilderPhase.java:110)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3393)\r\n\tat jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.handleBytecodeBlock(BytecodeParser.java:3345)\r\n...\r\n```\r\n\n\n### Expected behavior\n\nThe native build should work, just like before the upgrade.\n\n### Actual behavior\n\nThe native build fails.\n\n### How to Reproduce?\n\nUpgrade Quarkus from `2.13.3.Final` to `2.15.1.Final`, and as part of that, upgrade JDK from `22.1.0.0-Final-java11` to `22.3.0.1-Final-java17`. The Docker image is `wiradikusuma/graalvm-maven-for-quarkus:22.3.0.1-Final-java17` (https://github.com/wiradikusuma/docker-graalvm-maven-for-quarkus).\n\n### Output of `uname -a` or `ver`\n\nDarwin SDSMac005s-MacBook-Pro.local 21.6.0 Darwin Kernel Version 21.6.0: Wed Aug 10 14:28:23 PDT 2022; root:xnu-8020.141.5~2/RELEASE_ARM64_T6000 arm64\n\n### Output of `java -version`\n\nopenjdk version \"17.0.5\" 2022-10-18 OpenJDK Runtime Environment GraalVM CE 22.3.0 (build 17.0.5+8-jvmci-22.3-b08) OpenJDK 64-Bit Server VM GraalVM CE 22.3.0 (build 17.0.5+8-jvmci-22.3-b08, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\nGraalVM CE 22.3.0\n\n### Quarkus version or git rev\n\n2.15.1.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.5 (3599d3414f046de2324203b78ddcf9b5e4388aa0\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30092/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30092/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
