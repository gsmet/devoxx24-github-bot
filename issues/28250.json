{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28250",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28250/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28250/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28250/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/28250",
  "id": 1389171912,
  "node_id": "I_kwDOCFbutM5SzRTI",
  "number": 28250,
  "title": "Register all BouncyCastle algorithms for reflection in quarkus-security",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 985346625,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjU=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/invalid",
      "name": "triage/invalid",
      "color": "e4e669",
      "default": false,
      "description": "This doesn't seem right"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 6,
  "created_at": "2022-09-28T11:10:23Z",
  "updated_at": "2022-12-02T11:46:21Z",
  "closed_at": "2022-12-02T11:45:54Z",
  "active_lock_reason": null,
  "body": "### Description\n\nSee discussion [Problems with BouncyCastle in native images ](https://github.com/quarkusio/quarkus/discussions/28234).\r\n\r\nRight now Quarkus registers many of the individual BC algorithms for reflection, but that is tricky for applications that need to support many and unforeseen algorithms. Specifically, our application receives messages and based on the content we need to use different digest, signature and encryption algorithms.\r\n\r\nIt  would be great to have an option to set in application.properties that enables reflection for ALL algorithms in BC. That way we can sleep better, knowing there will not be an unexpected failure when a message with an unsupported algorithm arrives.\n\n### Implementation ideas\n\nIn the discussion @sberyozkin mentioned that Camel Quarkus is already registering all algorithms, so it should be possible to do the same in quarkus-security when a new option in application.properties is set.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28250/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28250/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
