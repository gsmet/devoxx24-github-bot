{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30152",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30152/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30152/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30152/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30152",
  "id": 1517651444,
  "node_id": "I_kwDOCFbutM5adYX0",
  "number": 30152,
  "title": "Improve error handling of AbortExecutionException in smallrye-graphql extension",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2234509819,
      "node_id": "MDU6TGFiZWwyMjM0NTA5ODE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/graphql",
      "name": "area/graphql",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/226",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/226",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/226/labels",
    "id": 8824890,
    "node_id": "MI_kwDOCFbutM4Ahqg6",
    "number": 226,
    "title": "2.15.3.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 31,
    "state": "closed",
    "created_at": "2023-01-05T16:59:20Z",
    "updated_at": "2023-01-10T14:40:28Z",
    "due_on": null,
    "closed_at": "2023-01-10T14:40:28Z"
  },
  "comments": 4,
  "created_at": "2023-01-03T16:43:04Z",
  "updated_at": "2023-01-09T16:31:44Z",
  "closed_at": "2023-01-06T07:44:36Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nWhile playing around with `quarkus`, `smallrye-graphql` and `spock` I was running into problems while trying to execute a [interaction based test case](https://spockframework.org/spock/docs/1.0/interaction_based_testing.html) for a graphql endpoint with a mocked bean (Spock mock)\r\n\r\n```groovy\r\n@PackageScope\r\n@Inject\r\n@GraphQLClient\r\nDynamicGraphQLClient client\r\n\r\ndef \"Assert that .......\"() {\r\n    given: \"Mocked bean\"\r\n    QuarkusMock.installMockForType(Mock(Bean) {\r\n        1 * get(_, \"test\",1) >> UUID.randomUUID()\r\n        0 * _\r\n    },Bean.class)\r\n    when: \"Action is performed that invokes a method that causes a org.spockframework.mock.TooManyInvocationsError (0 * _)\"\r\n    def response = client.executeSync(.....)\r\n    then: \"Test case fails with:  Unexpected response. Code=500, message=\\\"Internal Server Error\\\", body=\\\"null\\\"\"\r\n    noExceptionThrown()\r\n}\r\n```\r\n\r\nThe test case always failed with an generic error message, giving me a hard time to detect the real cause of the failing test:\r\n\r\n```\r\nExpected no exception to be thrown, but got 'io.smallrye.graphql.client.InvalidResponseException'\r\n\r\n\tat spock.lang.Specification.noExceptionThrown(Specification.java:118)\r\n\tat xxxxxxxxxxxxxxxxxxx.Assert that ..................................(xxxxxxxxxxxxxxxxxxxxxxxxxxxx.groovy:558)\r\nCaused by: io.smallrye.graphql.client.InvalidResponseException: Unexpected response. Code=500, message=\"Internal Server Error\", body=\"null\"\r\n\tat io.smallrye.graphql.client.impl.ResponseReader.readFrom(ResponseReader.java:64)\r\n\tat io.smallrye.graphql.client.vertx.dynamic.VertxDynamicGraphQLClient.lambda$executeSingleResultOperationOverHttp$7(VertxDynamicGraphQLClient.java:338)\r\n\tat io.smallrye.context.impl.wrappers.SlowContextualFunction.apply(SlowContextualFunction.java:21)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransform$UniOnItemTransformProcessor.onItem(UniOnItemTransform.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage$CompletionStageUniSubscription.forwardResult(UniCreateFromCompletionStage.java:63)\r\n\tat io.smallrye.context.impl.wrappers.SlowContextualBiConsumer.accept(SlowContextualBiConsumer.java:21)\r\n```\r\n\r\n\r\nAfter some debugging I found out that the exception is thrown in [smallrye-graphql](https://github.com/smallrye/smallrye-graphql/blob/9cefecb754da67af0da8d2ed714bb7e88878baf1/server/implementation/src/main/java/io/smallrye/graphql/execution/datafetcher/helper/ReflectionInvoker.java#L110) and then catched by the quarkus graphql extension in https://github.com/quarkusio/quarkus/blob/6014d34911cd0873487994ebdafc7c883972a676/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/spi/datafetcher/QuarkusDefaultDataFetcher.java#L89-L92\r\n\r\nand finally handled in https://github.com/quarkusio/quarkus/blob/6014d34911cd0873487994ebdafc7c883972a676/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java#L324-L327\r\n\r\n\r\nSo the exception/cause of the problem gets swallowed ->  No log message\r\n\r\nSince such errors are bypassing all ExceptionHandler, ErroCodes .... mechanism, it's also not possible to make such exceptions appear in the logs by customization\r\n\r\n\r\n### Implementation ideas\r\n\r\nA simple log entry would help a lot. \r\n\r\n ",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30152/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30152/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
