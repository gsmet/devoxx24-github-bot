{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37500",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37500/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37500/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37500/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/37500",
  "id": 2024573898,
  "node_id": "I_kwDOCFbutM54rIvK",
  "number": 37500,
  "title": "Bouncy Castle BCFIPS provider fails native executable build after the BC FIPS version bump to 1.0.2.4",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3866841773,
      "node_id": "LA_kwDOCFbutM7me1Kt",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/securepipeline",
      "name": "area/securepipeline",
      "color": "0366d6",
      "default": false,
      "description": "issues related to ensure Quarkus can be used in a secure pipeline setups like FIPS or similar"
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 22,
  "created_at": "2023-12-04T19:31:02Z",
  "updated_at": "2024-08-28T10:39:55Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI have app with `org.bouncycastle:bc-fips` and `org.bouncycastle:bctls-fips` dependencies that I build to native executable. After https://github.com/quarkusio/quarkus/pull/37354 build fails with exeception.\r\n\r\n### Expected behavior\r\n\r\nNative executable is built.\r\n\r\n### Actual behavior\r\n\r\nNative executable build fails:\r\n\r\n```\r\nGraalVM Native Image: Generating 'security-bouncycastle-fips-jsse-1.0.0-SNAPSHOT-runner' (executable)...\r\n========================================================================================================================\r\nFor detailed information and explanations on the build output, visit:\r\nhttps://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/BuildOutput.md\r\n------------------------------------------------------------------------------------------------------------------------\r\n[1/8] Initializing...                                                                                    (5.0s @ 0.14GB)\r\n Java version: 21.0.1+12-LTS, vendor version: Mandrel-23.1.1.0-Final\r\n Graal compiler: optimization level: 2, target machine: x86-64-v3\r\n C compiler: gcc (redhat, x86_64, 8.5.0)\r\n Garbage collector: Serial GC (max heap size: 80% of RAM)\r\n 5 user-specific feature(s):\r\n - com.oracle.svm.thirdparty.gson.GsonFeature\r\n - io.quarkus.runner.Feature: Auto-generated class by Quarkus from the existing extensions\r\n - io.quarkus.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase\r\n - io.quarkus.security.BouncyCastleFeature\r\n - org.eclipse.angus.activation.nativeimage.AngusActivationFeature\r\n------------------------------------------------------------------------------------------------------------------------\r\n 6 experimental option(s) unlocked:\r\n - '-H:+AllowFoldMethods' (origin(s): command line)\r\n - '-H:BuildOutputJSONFile' (origin(s): command line)\r\n - '-H:-UseServiceLoaderFeature' (origin(s): command line)\r\n - '-H:AdditionalSecurityProviders' (origin(s): command line)\r\n - '-H:IncludeResources' (origin(s): command line)\r\n - '-H:ReflectionConfigurationResources' (origin(s): 'META-INF/native-image/io.netty/netty-transport/native-image.properties' in 'file:///project/lib/io.netty.netty-transport-4.1.100.Final.jar')\r\n------------------------------------------------------------------------------------------------------------------------\r\nBuild resources:\r\n - 3.56GB of memory (11.4% of 31.10GB system memory, set via '-Xmx4g')\r\n - 12 thread(s) (100.0% of 12 available processor(s), determined at start)\r\n19:22:14,397 INFO  [org.bou.jss.pro.PropertyUtils] Found boolean security property [keystore.type.compat]: true\r\n19:22:15,309 INFO  [org.bou.jss.pro.PropertyUtils] Found string security property [jdk.tls.disabledAlgorithms]: SSLv3, TLSv1, TLSv1.1, DTLSv1.0, RC4, DES, MD5withRSA, DH keySize < 1024, EC keySize < 224, 3DES_EDE_CBC, anon, NULL, ECDH\r\n19:22:15,310 INFO  [org.bou.jss.pro.PropertyUtils] Found string security property [jdk.certpath.disabledAlgorithms]: MD2, MD5, SHA1 jdkCA & usage TLSServer, RSA keySize < 1024, DSA keySize < 1024, EC keySize < 224, SHA1 usage SignedJAR & denyAfter 2019-01-01\r\n19:22:15,310 WARNING [org.bou.jss.pro.DisabledAlgorithmConstraints] Ignoring unsupported entry in 'jdk.certpath.disabledAlgorithms': SHA1 jdkCA & usage TLSServer\r\n19:22:15,310 WARNING [org.bou.jss.pro.DisabledAlgorithmConstraints] Ignoring unsupported entry in 'jdk.certpath.disabledAlgorithms': SHA1 usage SignedJAR & denyAfter 2019-01-01\r\n19:22:38,373 INFO  [org.bou.jss.pro.PropertyUtils] Found string system property [java.home]: /opt/mandrel\r\n19:22:42,861 INFO  [org.bou.jss.pro.PropertyUtils] Found string system property [java.home]: /opt/mandrel\r\n19:22:43,002 INFO  [org.bou.jss.pro.PropertyUtils] Found string system property [java.home]: /opt/mandrel\r\n[2/8] Performing analysis...  [*****]                                                                   (36.6s @ 1.29GB)\r\n   15,461 reachable types   (88.8% of   17,407 total)\r\n   24,112 reachable fields  (61.9% of   38,931 total)\r\n   77,354 reachable methods (59.9% of  129,172 total)\r\n    4,580 types,   155 fields, and 3,669 methods registered for reflection\r\n       61 types,    59 fields, and    55 methods registered for JNI access\r\n        4 native libraries: dl, pthread, rt, z\r\n\r\nError: Unsupported features in 16 methods\r\nDetailed message:\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use \r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.fips.FipsSecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with \r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n  reading field java.util.concurrent.atomic.AtomicReference.value of constant \r\n    java.util.concurrent.atomic.AtomicReference@46f3c81e: RandomSpi\r\n  indexing into array java.util.concurrent.atomic.AtomicReference[]@1476359e: [Ljava.util.concurrent.atomic.AtomicReference;@1476359e\r\n  reading field org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$PooledSecureRandomProvider.providerDefaultRandom of constant \r\n    org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$PooledSecureRandomProvider@ffc9672: org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$PooledSecureRandomProv...\r\n  reading field org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider.providerDefaultSecureRandomProvider of constant \r\n    org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider@29120f33: BCFIPS version 1.000204\r\n  reading field org.bouncycastle.jcajce.util.ProviderJcaJceHelper.provider of constant \r\n    org.bouncycastle.jcajce.util.ProviderJcaJceHelper@1782d427: org.bouncycastle.jcajce.util.ProviderJcaJceHelper@1782d427\r\n  reading field org.bouncycastle.tls.crypto.impl.jcajce.JcaTlsCryptoProvider.helper of constant \r\n    org.bouncycastle.tls.crypto.impl.jcajce.JcaTlsCryptoProvider@27669d46: org.bouncycastle.tls.crypto.impl.jcajce.JcaTlsCryptoProvider@27669d46\r\n  reading field org.bouncycastle.jsse.provider.BouncyCastleJsseProvider$1.val$cryptoProvider of constant \r\n    org.bouncycastle.jsse.provider.BouncyCastleJsseProvider$1@538fde3e: org.bouncycastle.jsse.provider.BouncyCastleJsseProvider$1@538fde3e\r\n  reading field java.util.HashMap$Node.value of constant \r\n    java.util.HashMap$Node@5ef2c319: org.bouncycastle.jsse.provider.KeyManagerFactory=org.bouncycastle.jsse.provider....\r\n  indexing into array java.util.HashMap$Node[]@cef2d6d: [Ljava.util.HashMap$Node;@cef2d6d\r\n  reading field java.util.HashMap.table of constant \r\n    java.util.HashMap@55718cbb: {org.bouncycastle.jsse.provider.TrustManagerFactory=org.bouncycastle.jsse.provid...\r\n  reading field org.bouncycastle.jsse.provider.BouncyCastleJsseProvider.creatorMap of constant \r\n    org.bouncycastle.jsse.provider.BouncyCastleJsseProvider@610628dc: BCJSSE version 1.0017\r\n  reading field sun.security.jca.ProviderConfig.provider of constant \r\n    sun.security.jca.ProviderConfig@24446b40: BCJSSE\r\n  indexing into array sun.security.jca.ProviderConfig[]@118b14af: [Lsun.security.jca.ProviderConfig;@118b14af\r\n  reading field sun.security.jca.ProviderList.configs of constant \r\n    sun.security.jca.ProviderList@5e80e9e4: [BCJSSE]\r\n  reading static field sun.security.jca.Providers.providerList\r\n    at sun.security.jca.Providers.getSystemProviderList(Providers.java:195)\r\n  parsing method sun.security.jca.Providers.getSystemProviderList(Providers.java:195) reachable via the parsing context\r\n    at static root method.(Unknown Source)\r\n\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use \r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.fips.FipsSecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with \r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n  reading field java.util.concurrent.atomic.AtomicReference.value of constant \r\n    java.util.concurrent.atomic.AtomicReference@52b20d5a: RandomSpi\r\n  indexing into array java.util.concurrent.atomic.AtomicReference[]@1476359e: [Ljava.util.concurrent.atomic.AtomicReference;@1476359e\r\n  reading field org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$PooledSecureRandomProvider.providerDefaultRandom of constant \r\n    org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$PooledSecureRandomProvider@ffc9672: org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$PooledSecureRandomProv...\r\n  reading field org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider.providerDefaultSecureRandomProvider of constant \r\n    org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider@29120f33: BCFIPS version 1.000204\r\n  reading field org.bouncycastle.jcajce.util.ProviderJcaJceHelper.provider of constant \r\n    org.bouncycastle.jcajce.util.ProviderJcaJceHelper@1782d427: org.bouncycastle.jcajce.util.ProviderJcaJceHelper@1782d427\r\n  reading field org.bouncycastle.tls.crypto.impl.jcajce.JcaTlsCryptoProvider.helper of constant \r\n    org.bouncycastle.tls.crypto.impl.jcajce.JcaTlsCryptoProvider@27669d46: org.bouncycastle.tls.crypto.impl.jcajce.JcaTlsCryptoProvider@27669d46\r\n  reading field org.bouncycastle.jsse.provider.BouncyCastleJsseProvider$1.val$cryptoProvider of constant \r\n    org.bouncycastle.jsse.provider.BouncyCastleJsseProvider$1@538fde3e: org.bouncycastle.jsse.provider.BouncyCastleJsseProvider$1@538fde3e\r\n  reading field java.util.HashMap$Node.value of constant \r\n    java.util.HashMap$Node@5ef2c319: org.bouncycastle.jsse.provider.KeyManagerFactory=org.bouncycastle.jsse.provider....\r\n  indexing into array java.util.HashMap$Node[]@cef2d6d: [Ljava.util.HashMap$Node;@cef2d6d\r\n  reading field java.util.HashMap.table of constant \r\n    java.util.HashMap@55718cbb: {org.bouncycastle.jsse.provider.TrustManagerFactory=org.bouncycastle.jsse.provid...\r\n  reading field org.bouncycastle.jsse.provider.BouncyCastleJsseProvider.creatorMap of constant \r\n    org.bouncycastle.jsse.provider.BouncyCastleJsseProvider@610628dc: BCJSSE version 1.0017\r\n  reading field sun.security.jca.ProviderConfig.provider of constant \r\n    sun.security.jca.ProviderConfig@24446b40: BCJSSE\r\n  indexing into array sun.security.jca.ProviderConfig[]@118b14af: [Lsun.security.jca.ProviderConfig;@118b14af\r\n  reading field sun.security.jca.ProviderList.configs of constant \r\n    sun.security.jca.ProviderList@5e80e9e4: [BCJSSE]\r\n  reading static field sun.security.jca.Providers.providerList\r\n    at sun.security.jca.Providers.getSystemProviderList(Providers.java:195)\r\n  parsing method sun.security.jca.Providers.getSystemProviderList(Providers.java:195) reachable via the parsing context\r\n    at static root method.(Unknown Source)\r\n\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use \r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.fips.FipsSecureRandom'\r\n\r\nto find classes that instantiate these objects. Once you found such a class, you can mark it explicitly for run time initialization with \r\n\r\n    '--initialize-at-run-time=<culprit>'\r\n\r\nto prevent the instantiation of the object.\r\nThe object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nTrace: Object was reached by\r\n  reading field java.util.concurrent.atomic.AtomicReference.value of constant \r\n    java.util.concurrent.atomic.AtomicReference@84a1a52: RandomSpi\r\n  indexing into array java.util.concurrent.atomic.AtomicReference[]@1476359e: [Ljava.util.concurrent.atomic.AtomicReference;@1476359e\r\n  reading field org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$PooledSecureRandomProvider.providerDefaultRandom of constant \r\n    org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$PooledSecureRandomProvider@ffc9672: org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$PooledSecureRandomProv...\r\n  reading field org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider.providerDefaultSecureRandomProvider of constant \r\n    org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider@29120f33: BCFIPS version 1.000204\r\n  reading field org.bouncycastle.jcajce.util.ProviderJcaJceHelper.provider of constant \r\n    org.bouncycastle.jcajce.util.ProviderJcaJceHelper@1782d427: org.bouncycastle.jcajce.util.ProviderJcaJceHelper@1782d427\r\n  reading field org.bouncycastle.tls.crypto.impl.jcajce.JcaTlsCryptoProvider.helper of constant \r\n    org.bouncycastle.tls.crypto.impl.jcajce.JcaTlsCryptoProvider@27669d46: org.bouncycastle.tls.crypto.impl.jcajce.JcaTlsCryptoProvider@27669d46\r\n  reading field org.bouncycastle.jsse.provider.BouncyCastleJsseProvider$1.val$cryptoProvider of constant \r\n    org.bouncycastle.jsse.provider.BouncyCastleJsseProvider$1@538fde3e: org.bouncycastle.jsse.provider.BouncyCastleJsseProvider$1@538fde3e\r\n  reading field java.util.HashMap$Node.value of constant \r\n    java.util.HashMap$Node@5ef2c319: org.bouncycastle.jsse.provider.KeyManagerFactory=org.bouncycastle.jsse.provider....\r\n  indexing into array java.util.HashMap$Node[]@cef2d6d: [Ljava.util.HashMap$Node;@cef2d6d\r\n  reading field java.util.HashMap.table of constant \r\n    java.util.HashMap@55718cbb: {org.bouncycastle.jsse.provider.TrustManagerFactory=org.bouncycastle.jsse.provid...\r\n  reading field org.bouncycastle.jsse.provider.BouncyCastleJsseProvider.creatorMap of constant \r\n    org.bouncycastle.jsse.provider.BouncyCastleJsseProvider@610628dc: BCJSSE version 1.0017\r\n  reading field sun.security.jca.ProviderConfig.provider of constant \r\n    sun.security.jca.ProviderConfig@24446b40: BCJSSE\r\n  indexing into array sun.security.jca.ProviderConfig[]@118b14af: [Lsun.security.jca.ProviderConfig;@118b14af\r\n  reading field sun.security.jca.ProviderList.configs of constant \r\n    sun.security.jca.ProviderList@5e80e9e4: [BCJSSE]\r\n  reading static field sun.security.jca.Providers.providerList\r\n    at sun.security.jca.Providers.getSystemProviderList(Providers.java:195)\r\n  parsing method sun.security.jca.Providers.getSystemProviderList(Providers.java:195) reachable via the parsing context\r\n    at static root method.(Unknown Source)\r\n\r\nError: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected. If these objects should not be stored in the image heap, you can use \r\n\r\n    '--trace-object-instantiation=org.bouncycastle.crypto.fips.FipsSecureRa\r\n```\r\n\r\n### How to Reproduce?\r\n\r\nSteps to reproduce:\r\n\r\n1. `git clone git@github.com:quarkus-qe/quarkus-test-suite.git`\r\n2. `cd quarkus-test-suite/security/bouncycastle-fips/bcFipsJsse`\r\n3. `mvn clean verify -Dnative`\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nFedora 38\r\n\r\n### Output of `java -version`\r\n\r\n17\r\n\r\nMANDREL 23.1.1.0 JDK 21.0.1+12-LTS\r\n\r\n### Quarkus version or git rev\r\n\r\n999-SNAPSHOT\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.9.3\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37500/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37500/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
