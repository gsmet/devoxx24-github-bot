{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20504",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20504/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20504/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20504/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20504",
  "id": 1013369421,
  "node_id": "I_kwDOCFbutM48ZspN",
  "number": 20504,
  "title": "Jackson JQ support",
  "labels": [
    {
      "id": 1553869078,
      "node_id": "MDU6TGFiZWwxNTUzODY5MDc4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/extension-proposal",
      "name": "kind/extension-proposal",
      "color": "abfcbb",
      "default": false,
      "description": "Discuss and Propose new extensions"
    },
    {
      "id": 3267721944,
      "node_id": "MDU6TGFiZWwzMjY3NzIxOTQ0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/jackson",
      "name": "area/jackson",
      "color": "0366d6",
      "default": false,
      "description": "Issues related to Jackson (JSON library)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 10,
  "created_at": "2021-10-01T13:46:41Z",
  "updated_at": "2021-10-01T19:56:50Z",
  "closed_at": "2021-10-01T19:56:50Z",
  "active_lock_reason": null,
  "body": "### Description\n\nThis extension aims to add [jq](https://stedolan.github.io/jq/manual/) expressions to a Quarkus application. It's backed by [jackson-jq](https://github.com/eiiches/jackson-jq) library. The extension is already done. I need to migrate it to the Quarkiverse format. You can see the code here: https://github.com/ricardozanini/jackson-jq/pull/1/files\n\n### Configuration suggestion\n\nThe usage is pretty straightforward, won't require any additional properties for now.\n\n### Additional context\n\nUsers will have the `Scope` bean available for injection. `Scope` is the entry point of Jackson JQ library, as demonstrated in their examples of usage:\r\n\r\nHere's a simple use case. A REST endpoint that's capable of executing a `jq` expression and return its output:\r\n\r\n```java\r\n @Path(\"/parser\")\r\n @Produces(MediaType.APPLICATION_JSON)\r\n @Consumes(MediaType.APPLICATION_JSON)\r\n public class ParserResource {\r\n\r\n     @Inject\r\n     Scope scope;\r\n\r\n     @POST\r\n     public List<JsonNode> parse(Document document) throws JsonQueryException {\r\n         final JsonQuery query = JsonQuery.compile(document.expression, Versions.JQ_1_6);\r\n         List<JsonNode> out = new ArrayList<>();\r\n         query.apply(this.scope, document.document, out::add);\r\n         return out;\r\n     }\r\n\r\n     public static class Document {\r\n\r\n         private String expression;\r\n         private JsonNode document;\r\n\r\n         public JsonNode getDocument() {\r\n             return document;\r\n         }\r\n\r\n         public void setDocument(JsonNode document) {\r\n             this.document = document;\r\n         }\r\n\r\n         public String getExpression() {\r\n             return expression;\r\n         }\r\n\r\n         public void setExpression(String expression) {\r\n             this.expression = expression;\r\n         }\r\n     }\r\n }\r\n```",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20504/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20504/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
