{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42398",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42398/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42398/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42398/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/42398",
  "id": 2455446921,
  "node_id": "I_kwDOCFbutM6SWyWJ",
  "number": 42398,
  "title": "Create a backstage extension",
  "labels": [
    {
      "id": 1553869078,
      "node_id": "MDU6TGFiZWwxNTUzODY5MDc4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/extension-proposal",
      "name": "kind/extension-proposal",
      "color": "abfcbb",
      "default": false,
      "description": "Discuss and Propose new extensions"
    },
    {
      "id": 1654772125,
      "node_id": "MDU6TGFiZWwxNjU0NzcyMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kubernetes",
      "name": "area/kubernetes",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2388070055,
      "node_id": "MDU6TGFiZWwyMzg4MDcwMDU1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/quarkiverse",
      "name": "area/quarkiverse",
      "color": "a01441",
      "default": false,
      "description": "This issue/PR is part of the Quarkiverse organization"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2024-08-08T10:30:15Z",
  "updated_at": "2024-08-08T13:27:11Z",
  "closed_at": "2024-08-08T13:27:11Z",
  "active_lock_reason": null,
  "body": "### Description\n\nI would like to propose a Quarkus plugin for Backstage.\r\n\r\nThe main role of the plugin is to generate the Backstage entities for the current project. While Backstage does provide the ability to generate a very basic `Compoent` for registering a Quarkus application, the user is expected to maintain by hand and align it the application as it evolves. However, for Backstage to produce value, it's important to keep these metadata up to date, but more importantly to document and register things like provided or consumed APIs.\r\n\r\nA Quarkus extension can use the build items from extension and register things like:\r\n- Rest APIs\r\n- Rest Clients\r\n- gRPC APIs\r\n- QraphQL \r\nand more\r\n\r\nAdditionally, when an application is meant to be registered to backstage it is important that things like helm chars, generated manifests etc, are added under version control. The Backstage extension could coordinate with plugins like:\r\n- kubernetes\r\n- helm\r\n- argocd (wip)\r\n- tekton (wip)\r\n\r\nIn order to get the generated resources where they need to be in order to be correctly registered to backstage.\r\n\r\n### Additional features\r\nThe extension could possibly host additional features like:\r\n- client\r\n- cli\r\n- backstage template generator.\r\n\r\nAn first draft of the extension that implements the core features can be found at: https://github.com/iocanel/quarkus-backstage\r\n\r\n\r\nInterested in this extension, please +1 via the emoji/reaction feature of GitHub (top right).\n\n### Repository name\n\nquarkus-backstage\n\n### Short description\n\nA backstage extension for Quarkus\n\n### Repository Homepage URL\n\nhttps://quarkiverse.github.io/quarkiverse-docs/quarkus-backstage/dev/\n\n### Repository Topics\n\n- quarkus-extension\r\n- \r\n...\r\n\n\n### Team Members\n\n- iocanel\r\n- aureamunoz \r\n- cmoulliard\r\n\n\n### Additional context\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42398/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42398/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
