{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24738",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24738/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24738/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24738/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24738",
  "id": 1191815441,
  "node_id": "I_kwDOCFbutM5HCakR",
  "number": 24738,
  "title": "Buggy behavior with annotated provider named 'JsonSerializer' or 'GenericJsonSerializer'",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282147660,
      "node_id": "MDU6TGFiZWwxMjgyMTQ3NjYw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/resteasy-classic",
      "name": "area/resteasy-classic",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/181",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/181",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/181/labels",
    "id": 7864289,
    "node_id": "MI_kwDOCFbutM4Ad__h",
    "number": 181,
    "title": "2.8.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 78,
    "state": "closed",
    "created_at": "2022-04-11T09:08:46Z",
    "updated_at": "2023-01-25T08:58:43Z",
    "due_on": null,
    "closed_at": "2022-04-19T12:20:18Z"
  },
  "comments": 4,
  "created_at": "2022-04-04T13:44:00Z",
  "updated_at": "2022-04-11T09:15:20Z",
  "closed_at": "2022-04-06T20:22:18Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nHi,\r\n\r\nI found a weird behavior concerning classes annotated with `@Provider`. I have two projects:\r\n\r\n`providers-test` containing 14 classes annotated with `@Provider`, and the class `CustomMessageBodyWriter` implementing `MessageBodyWriter` and annotated with `@Produces({MediaType.APPLICATION_JSON, \"application/*+json\"})`.\r\n\r\nThe second project `rest-json-quickstarts` imports the first project and contains a class called `GenericJsonSerializer` extending my `CustomMessageBodyWriter` and annotated with `@Provider`.\r\n\r\nRunning the provided test fails since my serializer isn't picked up but rather a generic one is used. Again, annotating any random method with `@Produces(\"*/*\")` or `@Consumes(\"*/*\")` yields a successful test (same as https://github.com/quarkusio/quarkus/issues/24736).\r\n**However** there is a second workaround: instead of annotating a random method it works as expected if any of the providers of `providers-test` implying a limit on the number of providers. This behavior is only reproducible if the extending class is either called `JsonSerializer` or `GenericJsonSerializer`. For names like `TestJsonSerializer` the test always fails regardless of the number of providers.\r\n\r\nhttps://github.com/morhei/providers-test\r\n\r\n### Expected behavior\r\n\r\nUse custom serializer\r\n\r\n### Actual behavior\r\n\r\nUses generic serialier\r\n\r\n### How to Reproduce?\r\n\r\n1. Pull repository\r\n2. Build `provider-tests` with `mvn clean install`\r\n3. Run the test provided in `rest-json-quickstart` -> fails\r\n4. Remove a single provider in `provider-tests` and build it again\r\n5. Run test -> succeeds\r\n6. Rename `GenericJsonSerializer`\r\n7. Run test -> fails\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\nOpenJDK Runtime Environment (build 11.0.14.1+1-Ubuntu-0ubuntu1.20.04)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.7.3.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24738/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24738/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
