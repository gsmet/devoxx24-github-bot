{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30942",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30942/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30942/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30942/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30942",
  "id": 1573888355,
  "node_id": "I_kwDOCFbutM5dz6Fj",
  "number": 30942,
  "title": "Register a custom redirect handler in REST clients",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/235",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/235",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/235/labels",
    "id": 9025446,
    "node_id": "MI_kwDOCFbutM4Aibem",
    "number": 235,
    "title": "3.0.0.Alpha5",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 253,
    "state": "closed",
    "created_at": "2023-02-09T14:26:03Z",
    "updated_at": "2023-11-12T17:44:08Z",
    "due_on": null,
    "closed_at": "2023-03-08T15:10:59Z"
  },
  "comments": 7,
  "created_at": "2023-02-07T08:23:10Z",
  "updated_at": "2023-02-15T04:59:30Z",
  "closed_at": "2023-02-15T04:59:27Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nAdd a new feature so we can register a custom redirect handler in REST clients.\r\n\r\n**Why?**\r\nOne of the case if to prevent errors when running POST requests and the server responds HTTP 307: `ClientWebApplicationException: Received: 'Server response is: 307' when invoking: Rest Client method: ...`\r\n\r\n[RFC 2616](https://www.rfc-editor.org/rfc/rfc2616#section-10.3.8) says:\r\n\r\n> If the 307 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.\r\n\r\nSo it should be possible to \"confirm\" the redirect on non GET/HEAD requests by using a custom redirect handler that will check if we must redirect or not.\r\n\r\nMore details in https://github.com/quarkusio/quarkus/issues/26517\r\n\r\n\r\n### Implementation ideas\r\n\r\nVert.x [`HttpClient::redirectHandler`](https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClient.html#redirectHandler-java.util.function.Function-) method can do that.\r\n\r\n[In the current Quarkus version, it's used to log the HTTP 3xx response](https://github.com/quarkusio/quarkus/blob/2.16.1.Final/independent-projects/resteasy-reactive/client/runtime/src/main/java/org/jboss/resteasy/reactive/client/impl/ClientImpl.java#L177)\r\n\r\nMaybe register a custom redirect handler (like it's done for HTTP filters and exception mappers) would be the simplest solution.\r\n\r\n```java\r\n// quarkus.rest-client.test0.follow-redirects=true\r\n\r\n@Path(\"/\")\r\n@RegisterRestClient(configKey = \"test0\")\r\n@RegisterProvider(MyCustomRedirectHandler.class) // <----- Right there\r\npublic interface Test0ApiClient {\r\n\r\n    @POST\r\n    @Path(\"foo\")\r\n    Uni<FooResponse> foo(/* ... *.);\r\n}\r\n```\r\n\r\n```java\r\nimport io.vertx.core.http.RequestOptions; // TODO: Do not use \"RequestOptions\" class because we don't want to expose Vert.x types\r\nimport javax.ws.rs.core.Response;\r\n\r\n@ApplicationScoped\r\npublic class MyCustomRedirectHandler implements RedirectHandler {\r\n\r\n    @Override\r\n    public Uni<RequestOptions> handleRedirect(Response response) {\r\n        // Return null item to keep the original response (redirect).\r\n        // Return request options to send a new request. See https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClient.html#redirectHandler-java.util.function.Function-\r\n    }\r\n}\r\n```\r\n\r\nThe major problem is we would probably need new API types (to wrap Vert.x types and not expose them).",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30942/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30942/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
