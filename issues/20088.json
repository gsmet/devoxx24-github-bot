{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20088",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20088/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20088/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20088/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20088",
  "id": 994640604,
  "node_id": "MDU6SXNzdWU5OTQ2NDA2MDQ=",
  "number": 20088,
  "title": "Kafka SASL GSSAPI exception",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1658790125,
      "node_id": "MDU6TGFiZWwxNjU4NzkwMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kafka",
      "name": "area/kafka",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/151",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/151",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/151/labels",
    "id": 7197992,
    "node_id": "MI_kwDOCFbutM4AbdUo",
    "number": 151,
    "title": "2.3.0.Final",
    "description": "",
    "creator": {
      "login": "geoand",
      "id": 4374975,
      "node_id": "MDQ6VXNlcjQzNzQ5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4374975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geoand",
      "html_url": "https://github.com/geoand",
      "followers_url": "https://api.github.com/users/geoand/followers",
      "following_url": "https://api.github.com/users/geoand/following{/other_user}",
      "gists_url": "https://api.github.com/users/geoand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geoand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geoand/subscriptions",
      "organizations_url": "https://api.github.com/users/geoand/orgs",
      "repos_url": "https://api.github.com/users/geoand/repos",
      "events_url": "https://api.github.com/users/geoand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geoand/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 55,
    "state": "closed",
    "created_at": "2021-09-28T15:55:23Z",
    "updated_at": "2021-11-30T14:44:31Z",
    "due_on": null,
    "closed_at": "2021-10-06T08:40:32Z"
  },
  "comments": 16,
  "created_at": "2021-09-13T09:06:33Z",
  "updated_at": "2021-09-28T16:02:36Z",
  "closed_at": "2021-09-28T12:58:45Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nConnecting to a Kafka broker using SASL GSSAPI works fine without the quarkus-infinispan-client extension. However, when quarkus-infinispan-client extension is added as a dependency the exception occurs when connecting to Kafka.\n\n### Expected behavior\n\nKafka connection is sucessful.\n\n### Actual behavior\n\nThe following exception occurs:\r\n````\r\nCaused by: javax.security.sasl.SaslException: ELY05108: Unable to create response token [Caused by javax.security.sasl.SaslException: ELY05127: No security layer supported by server but maximum message size received: \"65536\"]\r\n\tat org.wildfly.security.sasl.gssapi.GssapiClient.evaluateMessage(GssapiClient.java:313)\r\n\tat org.wildfly.security.sasl.util.AbstractSaslParticipant.evaluateMessage(AbstractSaslParticipant.java:219)\r\n\tat org.wildfly.security.sasl.gssapi.GssapiClient.evaluateChallenge(GssapiClient.java:218)\r\n\tat org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.lambda$createSaslToken$1(SaslClientAuthenticator.java:524)\r\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.base/javax.security.auth.Subject.doAs(Subject.java:423)\r\n\tat org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.createSaslToken(SaslClientAuthenticator.java:524)\r\n\tat org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.sendSaslClientToken(SaslClientAuthenticator.java:431)\r\n\tat org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.authenticate(SaslClientAuthenticator.java:301)\r\n\tat org.apache.kafka.common.network.KafkaChannel.prepare(KafkaChannel.java:176)\r\n\tat org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:543)\r\n\tat org.apache.kafka.common.network.Selector.poll(Selector.java:481)\r\n\tat org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:563)\r\n\tat org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1329)\r\n\tat org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1260)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: javax.security.sasl.SaslException: ELY05127: No security layer supported by server but maximum message size received: \"65536\"\r\n\tat org.wildfly.security.sasl.gssapi.GssapiClient.evaluateMessage(GssapiClient.java:281)\r\n\t... 15 more\r\njava.security.PrivilegedActionException: javax.security.sasl.SaslException: ELY05108: Unable to create response token [Caused by javax.security.sasl.SaslException: ELY05127: No security layer supported by server but maximum message size received: \"65536\"] occurred when evaluating SASL token received from the Kafka Broker. Kafka Client will go to AUTHENTICATION_FAILED state.\r\n````\n\n### How to Reproduce?\n\nReproducer:\r\nhttps://github.com/irenakezic/kafka-sasl.git\r\n\r\nSteps to reproduce:\r\n1. Build project using \"mvn clean package -Djava.security.krb5.conf=src/test/resources/krb5.conf\"\r\n2. Build should be successful and tests should run with no errors\r\n3. Uncomment infinispan client extension dependency in pom.xml (you can also uncomment InfinispanBean code and infinispan config in application.properties though uncommenting the dependency in pom.xml is enough)\r\n4. Test should fail with exception stated above \r\n\r\nPlease note that Kafka testcontainer in the example provided runs on port 9092 and container will not start properly if port is already taken on your localhost.\r\n\r\nThe reproducer is created using version 2.2.2.Final as it is the latest one but I need a fix for 1.11.7.Final-redhat-00009 if possible.\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n1.11.7.Final-redhat-00009\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\nThe reason is wildfly.elytron.sasl.gssapi dependency that comes along with quarkus-infinispan-client. It seems that elytron GSSAPI implementation has more restrictive checks than default one.\r\nNoticed that wildfly uses \"wildfly.sasl.relax-compliance\" config property to relax security checks for elytron gssapi. I wonder if there an option to add something similar in Quarkus?",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20088/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20088/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
