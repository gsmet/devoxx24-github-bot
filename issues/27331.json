{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27331",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27331/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27331/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27331/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27331",
  "id": 1341563735,
  "node_id": "I_kwDOCFbutM5P9qNX",
  "number": 27331,
  "title": "Zanzibar Style Fine Grained Authorization",
  "labels": [
    {
      "id": 1553869078,
      "node_id": "MDU6TGFiZWwxNTUzODY5MDc4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/extension-proposal",
      "name": "kind/extension-proposal",
      "color": "abfcbb",
      "default": false,
      "description": "Discuss and Propose new extensions"
    },
    {
      "id": 2388070055,
      "node_id": "MDU6TGFiZWwyMzg4MDcwMDU1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/quarkiverse",
      "name": "area/quarkiverse",
      "color": "a01441",
      "default": false,
      "description": "This issue/PR is part of the Quarkiverse organization"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 6,
  "created_at": "2022-08-17T10:41:41Z",
  "updated_at": "2022-08-26T14:33:15Z",
  "closed_at": "2022-08-26T14:31:39Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nMany cloud applications require authorization models that don't fit nicely into those provided by current Quarkus extensions.\r\n\r\nGoogle's Zanzibar paper offers an elegant solution to complex fine grained authorization models and has spawned a few open sourced implementations.\r\n\r\nThe extension should provide an authorization filter that can check against a Zanzibar style API along with custom authorization annotations targeted at extracting the required data from incoming requests. Additionally, an API client must be provided to allow managing the authorization tuples in the Zanzibar style server.\r\n\r\nA proper extension will allow integration with Zanzibar style authorization at a level of ease similar to what's available today for RBAC authorization in Quarkus.\r\n\r\nInterested in this extension, please +1 via the emoji/reaction feature of GitHub (top right).\r\n\r\n### Configuration suggestion\r\n\r\nAside from server configuration, most of the configuration would be annotation based, similar to todays RBAC authorization.\r\n\r\nFGA requires three basic pieces of information for a \"check\" to be performed. The target \"object\" accessed is being authorized for, a \"relation\" and a \"user\". The user is readily available through standard Quarkus security machinery, which means we required the target object and relation to be configured.\r\n\r\nExample annotations to provide missing information required for a check:\r\n```java\r\ninterface APIResource {\r\n\r\n  // Target and relation are provided separately to allow placing each on\r\n  // the method or class for as much re-use as available.\r\n  // Relation is a freeform string while the target object is extracted from\r\n  // the incoming request. The \"source\" could be PATH, QUERY, HEADER or REQUEST.\r\n  // Additionally, the target object must have a type specified for disambiguation.\r\n\r\n  @AuthRelation(\"reader\")\r\n  @AuthTarget(source=PATH, name=\"id\", type=\"document\")\r\n  @Path(\"/docs/{id}\")\r\n  Uni<Document> fetchDocument(@Path(\"id\") Strig id) {...}\r\n}\r\n```\r\n\r\n### Additional context\r\n\r\nGoogle's Zanzibar has inspired a few open source implementations, including [OpenFGA](https://openfga.dev), [SpiceDB](https://github.com/authzed/spicedb), and [Keto](https://github.com/ory/keto).\r\n\r\nWhile the initial version of the extension will most likely focus on a single implementation, an extension is envisioned that would allow adapting any compatible implementation as the source of \"checks\".",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27331/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27331/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
