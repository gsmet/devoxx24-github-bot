{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29796",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29796/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29796/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29796/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29796",
  "id": 1491383780,
  "node_id": "I_kwDOCFbutM5Y5LXk",
  "number": 29796,
  "title": "Ability to set multiple ExceptionMapper for different paths and provide context information",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/219",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/219",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/219/labels",
    "id": 8705199,
    "node_id": "MI_kwDOCFbutM4AhNSv",
    "number": 219,
    "title": "2.16.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 198,
    "state": "closed",
    "created_at": "2022-11-30T08:29:23Z",
    "updated_at": "2023-03-07T08:22:30Z",
    "due_on": null,
    "closed_at": "2023-01-11T15:14:00Z"
  },
  "comments": 2,
  "created_at": "2022-12-12T09:16:19Z",
  "updated_at": "2023-01-10T10:53:23Z",
  "closed_at": "2023-01-10T10:53:20Z",
  "active_lock_reason": null,
  "body": "### Description\n\nI have a RestClient where I have two endpoints which both return 404 with no further explanation so it's impossible to know the context of the error because a ResponseExceptionMapper does not provide any context information for the request and we can only define a 'global' ResponseExceptionMapper.\r\n\r\nGiven the snipped example:\r\n\r\n```\r\n@Path(\"/myservice\")\r\n@RegisterRestClient\r\n@RegisterProvider(MyServiceClientExceptionMapper.class)\r\npublic interface MyServiceClient\r\n{\r\n    @GET\r\n    @Path(\"/path/a\")\r\n    String getA();\r\n\r\n    @GET\r\n    @Path(\"/path/b\")\r\n    String getB();\r\n}\r\n```\r\nBoth endpoints return 404 with no further explanation in the response, there is just no way I can figure out the cause of the error and handling this in a single ResponseExceptionMapper is tedious and error prone. \r\n\r\nCan you provide a way to handle this, provide context of the request and a way to deal with exceptions at path level. Maybe a suitable place is ClientExceptionMapper ?\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29796/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29796/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
