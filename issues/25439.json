{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25439",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25439/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25439/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25439/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25439",
  "id": 1228871046,
  "node_id": "I_kwDOCFbutM5JPxWG",
  "number": 25439,
  "title": "Can not get restclient bean programmatically",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346625,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjU=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/invalid",
      "name": "triage/invalid",
      "color": "e4e669",
      "default": false,
      "description": "This doesn't seem right"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2022-05-08T12:07:12Z",
  "updated_at": "2022-05-08T13:28:06Z",
  "closed_at": "2022-05-08T12:57:10Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\n\r\n#### run result\r\n![image](https://user-images.githubusercontent.com/65008815/167295282-156f5a77-0aed-4d45-81e2-ca5905324ffe.png)\r\n\r\n#### MyClient.java\r\n```java\r\n@RegisterRestClient(baseUri = \"https://www.google.com\")\r\npublic interface MyClient {\r\n\r\n  @GET\r\n  @Path(\"\")\r\n  Response get();\r\n}\r\n```\r\n\r\n#### ClientGetter.java\r\n```java\r\n@ApplicationScoped\r\n@Blocking\r\npublic class ClientGetter {\r\n\r\n  @Inject @RestClient MyClient myClient;\r\n\r\n  void onStart(@Observes StartupEvent startupEvent) {\r\n    getClientByProgrammatic();\r\n  }\r\n\r\n  void onStart2(@Observes StartupEvent startupEvent) {\r\n    getClientByInject();\r\n  }\r\n\r\n  void getClientByProgrammatic() {\r\n    try {\r\n      final MyClient client = CDI.current().select(MyClient.class).get();\r\n      System.out.println(\"#getClientByProgrammatic myClient = \" + client);\r\n    } catch (Exception e) {\r\n      System.out.println(\"#getClientByProgrammatic err = \" + e);\r\n    }\r\n  }\r\n\r\n  void getClientByInject() {\r\n    System.out.println(\"#getClientByInject myClient = \" + myClient);\r\n  }\r\n}\r\n```\r\n\r\n#### application.properties\r\n```properties\r\nquarkus.arc.remove-unused-beans=false\r\n```\n\n### Expected behavior\n\nCan get `MyClient` bean instance by programatically\n\n### Actual behavior\n\nCan not get `MyClient` bean instance by programatically, and throw exception: javax.enterprise.inject.UnsatisfiedResolutionException: No bean found for required type\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.8.2.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25439/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25439/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
