{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20046",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20046/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20046/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20046/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20046",
  "id": 992751878,
  "node_id": "MDU6SXNzdWU5OTI3NTE4Nzg=",
  "number": 20046,
  "title": "Support absolute OIDC endpoint URLs if discovery is disabled (Was: quarkus-oidc doesn't work if jwks endpoint has a different domain)",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/152",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/152",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/152/labels",
    "id": 7239525,
    "node_id": "MI_kwDOCFbutM4Abndl",
    "number": 152,
    "title": "2.5.0.CR1",
    "description": "",
    "creator": {
      "login": "aloubyansky",
      "id": 323379,
      "node_id": "MDQ6VXNlcjMyMzM3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/323379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aloubyansky",
      "html_url": "https://github.com/aloubyansky",
      "followers_url": "https://api.github.com/users/aloubyansky/followers",
      "following_url": "https://api.github.com/users/aloubyansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/aloubyansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aloubyansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aloubyansky/subscriptions",
      "organizations_url": "https://api.github.com/users/aloubyansky/orgs",
      "repos_url": "https://api.github.com/users/aloubyansky/repos",
      "events_url": "https://api.github.com/users/aloubyansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aloubyansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 305,
    "state": "closed",
    "created_at": "2021-10-11T08:43:12Z",
    "updated_at": "2022-01-07T16:32:59Z",
    "due_on": null,
    "closed_at": "2021-11-10T17:25:22Z"
  },
  "comments": 14,
  "created_at": "2021-09-09T23:55:09Z",
  "updated_at": "2021-10-14T21:42:30Z",
  "closed_at": "2021-10-14T21:42:27Z",
  "active_lock_reason": null,
  "body": "### Description\n\n tried to use quarkus-oidc with AWS Cognito and It doesn't work 'cause quarkus-oidc assumes that JWKS endpoint ALWAYS should have  the same domain as the authorization server has. It's not always true. For instance, AWS Cognito has different domains for authorization servers and JWKS. In our case We have the following OIDC Configuration in Cognito:\r\n```JSON\r\n{\r\n  \"authorization_endpoint\": \"https://my-test.auth.eu-central-1.amazoncognito.com/oauth2/authorize\",\r\n  \"id_token_signing_alg_values_supported\": [\r\n    \"RS256\"\r\n  ],\r\n  \"issuer\": \"https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_t12NbxXXX\",\r\n  \"jwks_uri\": \"https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_t12NbxXXX/.well-known/jwks.json\",\r\n  \"response_types_supported\": [\r\n    \"code\",\r\n    \"token\"\r\n  ],\r\n  \"scopes_supported\": [\r\n    \"openid\",\r\n    \"email\",\r\n    \"phone\",\r\n    \"profile\"\r\n  ],\r\n  \"subject_types_supported\": [\r\n    \"public\"\r\n  ],\r\n  \"token_endpoint\": \"https://my-test.auth.eu-central-1.amazoncognito.com/oauth2/token\",\r\n  \"token_endpoint_auth_methods_supported\": [\r\n    \"client_secret_basic\",\r\n    \"client_secret_post\"\r\n  ],\r\n  \"userinfo_endpoint\": \"https://my-test.auth.eu-central-1.amazoncognito.com/oauth2/userInfo\" \r\n}\r\n```   \r\nWe have `https://cognito-idp.eu-central-1.amazonaws.com` domain for JWKS and `https://my-test.auth.eu-central-1.amazoncognito.com` as auth-server.\r\n\r\nWe can only specify `quarkus.oidc.auth-server-url` and `quarkus.oidc.jwks-path`. JWKS uri is a result of concatenation of `auth-server-url` and `jwks-path`.\r\n\r\nIt happens in `io.quarkus.oidc.runtime.OidcRecorder#createOidcClientUni(OidcTenantConfig, TlsConfig, Vertx)` line 271.\r\n```java\r\n  if (!oidcConfig.discoveryEnabled) {\r\n            String tokenUri = OidcCommonUtils.getOidcEndpointUrl(authServerUriString, oidcConfig.tokenPath);\r\n            String introspectionUri = OidcCommonUtils.getOidcEndpointUrl(authServerUriString,\r\n                    oidcConfig.introspectionPath);\r\n            String authorizationUri = OidcCommonUtils.getOidcEndpointUrl(authServerUriString,\r\n                    oidcConfig.authorizationPath);\r\n            String jwksUri = OidcCommonUtils.getOidcEndpointUrl(authServerUriString, oidcConfig.jwksPath);\r\n            String userInfoUri = OidcCommonUtils.getOidcEndpointUrl(authServerUriString, oidcConfig.userInfoPath);\r\n            String endSessionUri = OidcCommonUtils.getOidcEndpointUrl(authServerUriString, oidcConfig.endSessionPath);\r\n            metadataUni = Uni.createFrom().item(new OidcConfigurationMetadata(tokenUri,\r\n                    introspectionUri, authorizationUri, jwksUri, userInfoUri, endSessionUri,\r\n                    oidcConfig.token.issuer.orElse(null)));\r\n  }\r\n  \r\n  public static String getOidcEndpointUrl(String authServerUrl, Optional<String> endpointPath) {\r\n        return endpointPath.isPresent() ? authServerUrl + prependSlash((String)endpointPath.get()) : null;\r\n  } \r\n        \r\n```\n\n### Implementation ideas\n\nShould be an ability to specify a full URI to JWKS including domain name in properties. ",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20046/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20046/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
