{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30754",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30754/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30754/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30754/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30754",
  "id": 1564831103,
  "node_id": "I_kwDOCFbutM5dRW1_",
  "number": 30754,
  "title": "transaction timeout on Reactive flavor + Narayana",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1633508165,
      "node_id": "MDU6TGFiZWwxNjMzNTA4MTY1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/narayana",
      "name": "area/narayana",
      "color": "0366d6",
      "default": false,
      "description": "Transactions / Narayana"
    },
    {
      "id": 2955124662,
      "node_id": "MDU6TGFiZWwyOTU1MTI0NjYy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/reactive-sql-clients",
      "name": "area/reactive-sql-clients",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 23,
  "created_at": "2023-01-31T18:48:33Z",
  "updated_at": "2024-08-29T17:59:54Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nAfter making several transactions with Narayana + reactive flavor API the DB connection is blocked and throw the following exception:\r\n\r\n```\r\nERROR [org.hib.rea.errors] (vert.x-eventloop-thread-1) HR000057: Failed to execute statement [select accountent0_.id as id1_0_, accountent0_.accountNumber as accountn2_0_, accountent0_.amount as amount3_0_, accountent0_.createdAt as createda4_0_, accountent0_.lastName as lastname5_0_, accountent0_.name as name6_0_, accountent0_.updatedAt as updateda7_0_ from account accountent0_ where accountent0_.accountNumber=$1]: could not execute query: java.util.concurrent.CompletionException: io.vertx.core.impl.NoStackTraceThrowable: Timeout\r\n\tat java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)\r\n\tat java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:636)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)\r\n\tat java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)\r\n\tat io.vertx.core.Future.lambda$toCompletionStage$3(Future.java:386)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onFailure(FutureImpl.java:153)\r\n\tat io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)\r\n\tat io.vertx.core.impl.future.Mapping.onFailure(Mapping.java:45)\r\n\tat io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)\r\n\tat io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)\r\n\tat io.vertx.core.impl.future.PromiseImpl.onFailure(PromiseImpl.java:54)\r\n\tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:43)\r\n\tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:23)\r\n\tat io.vertx.sqlclient.impl.pool.SqlConnectionPool$1PoolRequest.lambda$null$1(SqlConnectionPool.java:218)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel.run(SimpleConnectionPool.java:676)\r\n\tat io.vertx.core.net.impl.pool.CombinerExecutor.submit(CombinerExecutor.java:50)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool.execute(SimpleConnectionPool.java:245)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool.cancel(SimpleConnectionPool.java:638)\r\n\tat io.vertx.sqlclient.impl.pool.SqlConnectionPool$1PoolRequest.lambda$onEnqueue$2(SqlConnectionPool.java:215)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:932)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.handle(VertxImpl.java:903)\r\n\tat io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)\r\n\tat io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:158)\r\n\tat io.vertx.core.impl.ContextInternal.emit(ContextInternal.java:194)\r\n\tat io.vertx.core.impl.VertxImpl$InternalTimerHandler.run(VertxImpl.java:921)\r\n\tat io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\nCaused by: io.vertx.core.impl.NoStackTraceThrowable: Timeout\r\n```\r\n\r\nIf I remove the annotation `@transaction` then is working as expected\r\n\r\nthese are the extensions that I am using:\r\n\r\n```\r\nquarkus-reactive-pg-client\r\nquarkus-resteasy-reactive-jackson\r\nquarkus-hibernate-reactive-panache\r\nquarkus-narayana-jta\r\n```\r\n\r\nBased on the [official documentation](https://quarkus.io/guides/transaction#reactive-extensions) seems that the only thing that I should do is to add the annotation `@transaction`. Do you know if there is something else that needs to be configured?. \r\n\r\n\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Actual behavior\r\n\r\n_No response_\r\n\r\n### How to Reproduce?\r\n\r\n```\r\ngit clone --branch QUARKUS-2492-reactive_02 git@github.com:pjgg/quarkus-test-suite.git\r\ncd quarkus-test-suite/sql-db/reactive-narayana-transactions\r\nmvn quarkus:dev\r\n```\r\n\r\nAnd then make the following query....around 5 times until block the thread\r\n\r\n```\r\ncurl -X POST -H \"Content-type:application/json\" -d '{\"accountTo\": \"SK0389852379529966291984\", \"accountFrom\": \"FR9317569000409377431694J37\", \"amount\": \"10\"}' http://localhost:8080/transfer/transaction\r\n```\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30754/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30754/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
