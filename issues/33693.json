{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33693",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33693/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33693/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33693/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33693",
  "id": 1731856421,
  "node_id": "I_kwDOCFbutM5nOggl",
  "number": 33693,
  "title": "Speedup InjectableBean::getTypes lookup for ArcContainerImpl.getMatchingBeans",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 25,
  "created_at": "2023-05-30T09:15:30Z",
  "updated_at": "2023-06-05T10:09:36Z",
  "closed_at": "2023-06-05T10:09:36Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\n`ArcContainerImpl.getMatchingBeans` can (and likely will) perform a megamorphic virtual call dispatch on `InjectableBean::getTypes` in order to perform beans matching.\r\n\r\nSee\r\n![image](https://github.com/quarkusio/quarkus/assets/13125299/36230c1e-4978-4928-af8d-49e650d82278)\r\n\r\nThe red `itable_stub` cost is due to the different (here 18 bean types) types performing `InjectableBean::getTypes`.\r\n\r\nSuch cost is dominant (with enough types) if compared to `BeanTypeAssignabilityRules.matches` right after too.\r\n\r\nFor more information how this has been found, see https://github.com/FgForrest/HttpServerEvaluationTest/issues/1#issuecomment-1566151006)\r\n\r\n\r\n### Implementation ideas\r\n\r\nThere are 3 solutions to improve this:\r\n1. trying to pre-compute such matching upfront (but can be a huge number of combinations!)\r\n2. using a LRU cache of matches (usng Caffeine?) \r\n3. creating a base abstract type which expose `Type` and other immutable fields, without requiring anything more then a single (abstract) type check. Subsequently, the casted type, can perform a much faster lookup without any virtual call, but accessing directly the field.\r\n\r\nThis last one seems the more reasonable one",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33693/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33693/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
