{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24646",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24646/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24646/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24646/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24646",
  "id": 1186717809,
  "node_id": "I_kwDOCFbutM5Gu-Bx",
  "number": 24646,
  "title": "Async Events behave inconsistently on Exceptions",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/181",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/181",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/181/labels",
    "id": 7864289,
    "node_id": "MI_kwDOCFbutM4Ad__h",
    "number": 181,
    "title": "2.8.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 78,
    "state": "closed",
    "created_at": "2022-04-11T09:08:46Z",
    "updated_at": "2023-01-25T08:58:43Z",
    "due_on": null,
    "closed_at": "2022-04-19T12:20:18Z"
  },
  "comments": 7,
  "created_at": "2022-03-30T16:35:56Z",
  "updated_at": "2022-04-11T09:10:40Z",
  "closed_at": "2022-03-31T18:28:04Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nIf an event is fired (and observed) asynchronously, the returned CompletionStage behaves differently in the case of exceptions depending on the number of observers that threw exceptions. This violates the [CDI Spec, 10.5.1](https://jakarta.ee/specifications/cdi/3.0/jakarta-cdi-spec-3.0.html#async_exception).\n\n### Expected behavior\n\nBoth test methods should be green.\n\n### Actual behavior\n\nThe test case  `testSingleFailure` fails, because the `CompletionStage` contains the `IllegalArgumentException` directly instead of a `CompletionException` containing the `IllegalArgumentException` as the spec requires.\r\n\r\n```\r\njava.lang.AssertionError: \r\nExpecting actual throwable to be an instance of:\r\n  java.util.concurrent.CompletionException\r\nbut was:\r\n  java.lang.IllegalArgumentException\r\n\tat com.example.EventTest$Observer1.failOn42And47(EventDecoratorTest.java:71)\r\n\tat com.example.EventTest_Observer1_Observer_failOn42And47_df18bd4f87120ec5a98ebc09b259d85482e10edc.notify(Unknown Source)\r\n\tat io.quarkus.arc.impl.EventImpl$Notifier.notifyObservers(EventImpl.java:320)\r\n\t...(10 remaining lines not displayed - this can be changed with Assertions.setMaxStackTraceElementsDisplayed)\r\n\r\n\tat com.example.EventTest.testSingleFailure(EventDecoratorTest.java:43)\r\n```\r\n\r\n\n\n### How to Reproduce?\n\n```\r\n// imports\r\n\r\n@QuarkusTest\r\nclass EventTest {\r\n\r\n    @Inject\r\n    Observer1 observer1;\r\n\r\n    @Inject\r\n    Observer2 observer2;\r\n\r\n    @Inject\r\n    Event<Integer> event;\r\n\r\n    @Test\r\n    void testSingleFailure() throws InterruptedException, TimeoutException {\r\n        final CompletionStage<Integer> stage = event.fireAsync(42);\r\n\r\n        try {\r\n            stage.toCompletableFuture().get(30, TimeUnit.SECONDS);\r\n            failBecauseExceptionWasNotThrown(ExecutionException.class);\r\n        } catch (ExecutionException ex) {\r\n            assertThat(ex.getCause()).isInstanceOf(CompletionException.class)\r\n                    .extracting(Throwable::getSuppressed, as(ARRAY))\r\n                    .hasSize(1)\r\n                    .hasAtLeastOneElementOfType(IllegalArgumentException.class);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    void testTwoFailures() throws InterruptedException, TimeoutException {\r\n        final CompletionStage<Integer> stage = event.fireAsync(47);\r\n\r\n        try {\r\n            stage.toCompletableFuture().get(30, TimeUnit.SECONDS);\r\n            failBecauseExceptionWasNotThrown(ExecutionException.class);\r\n        } catch (ExecutionException ex) {\r\n            assertThat(ex.getCause()).isInstanceOf(CompletionException.class)\r\n                    .extracting(Throwable::getSuppressed, as(ARRAY))\r\n                    .hasSize(2)\r\n                    .hasAtLeastOneElementOfType(IllegalArgumentException.class)\r\n                    .hasAtLeastOneElementOfType(IllegalStateException.class);\r\n        }\r\n    }\r\n\r\n    @ApplicationScoped\r\n    static class Observer1 {\r\n\r\n        void failOn42And47(@ObservesAsync int value) {\r\n            if (value == 42 || value == 47) {\r\n                throw new IllegalArgumentException();\r\n            }\r\n        }\r\n    }\r\n\r\n    @ApplicationScoped\r\n    static class Observer2 {\r\n\r\n        void failOn47(@ObservesAsync int value) {\r\n            if (value == 47) {\r\n                throw new IllegalStateException();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n11.0.11, vendor: AdoptOpenJDK, runtime: C:\\Program Files\\AdoptOpenJDK\\jdk-11.0.11.9-hotspot\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.7.5.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.1 (05c21c65bdfed0f71a2f2ada8b84da59348c4c5d)\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24646/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24646/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
