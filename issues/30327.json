{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30327",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30327/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30327/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30327/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30327",
  "id": 1530400115,
  "node_id": "I_kwDOCFbutM5bOA1z",
  "number": 30327,
  "title": "ClientProxy getClass().getAnnotations() does not return actual annotations on the class",
  "labels": [
    {
      "id": 985346626,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjY=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/question",
      "name": "kind/question",
      "color": "d876e3",
      "default": false,
      "description": "Further information is requested"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 8,
  "created_at": "2023-01-12T09:39:41Z",
  "updated_at": "2023-01-16T15:23:15Z",
  "closed_at": "2023-01-16T15:23:14Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI'm not sure if this is indeed a bug, or a limitition, but it is something that I came across right now and wonder if there is a way to make this work with beans that are proxied/subclassed (like `@ApplicationScoped`).\r\n\r\nDue to the nature of subclassing managed beans, getAnnotations() does not yield all present annotations (unless they are marked as `@Inherited`)\r\n\r\nbecause of that, certain code that depend on runtime annotations like\r\n```\r\nOptional.ofNullable(getClass().getAnnotation(Priority.class))\r\n            .map(Priority::value)\r\n            .orElse(DEFAULT_PRIORITY);\r\n```\r\n(taken from `org.eclipse.microprofile.rest.client.ext.ResponseExceptionMapper`) does not work on quarkus beans unless they are marked as `@Singleton`.\n\n### Expected behavior\n\ngetAnnotations() should work on proxies as well.\r\n\r\nIf this is technically not possible, [the documentation](https://quarkus.io/guides/cdi#applicationscoped-and-singleton-look-very-similar-which-one-should-i-choose-for-my-quarkus-application) should be updated to include this (and other known) limitations of using `@ApplicationScoped` over `@Singleton`\n\n### Actual behavior\n\ngetAnnotations() only returns `@Inherited` annotations\n\n### How to Reproduce?\n\nSample project: https://github.com/ssaip/quarkus-getannotations/blob/main/src/test/java/com/example/AnnotatedClassTest.java\r\n\r\n\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\nJava version: 11.0.17, vendor: Azul Systems, Inc.\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.15.3.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\napache-maven-3.8.6\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30327/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30327/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
