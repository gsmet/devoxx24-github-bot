{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35404",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35404/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35404/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35404/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35404",
  "id": 1855098724,
  "node_id": "I_kwDOCFbutM5uko9k",
  "number": 35404,
  "title": "`uses` extension metadata to make some underlying library version visible to users of Quarkus Platrform and tooling",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1586904791,
      "node_id": "MDU6TGFiZWwxNTg2OTA0Nzkx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/platform",
      "name": "area/platform",
      "color": "0366d6",
      "default": false,
      "description": "Issues related to definition and interaction with Quarkus Platform"
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 10,
  "created_at": "2023-08-17T14:14:50Z",
  "updated_at": "2023-09-13T15:28:34Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\n\n`uses` is just a working proposal. I am open to any better name.\r\n\r\n1. Camel Quarkus wraps some specific version of Camel and it would be great if we could make that version visible to end users. \r\n2. Camel Quarkus extensions may wrap some further library, such as HTTP or Hazelcast client and it would also be great to make those visible to users.\r\n3. The cases 1. and 2. could be seen as a bit different: while Camel version holds for all extensions provided by Camel Quarkus (hence it is Platform participant level), the Hazelcast and HTTP client versions are extension specific. I am not sure we really need to have two levels of the metadata, I just wanted to mention this.\r\n4. The cases 1. and 2. show that for a single extension, there might be more than one `uses` key-version pairs. \r\n5. While it is easy to generate this metadata on the participant side, the version of the underlying `uses` dependency may get changed in the platform. So the value of the metadata should perhaps not be the actual version, but rather a `groupId:artifactId` for which the real version should be querried by Platform BOM generator from the participant BOM. \r\n6. It would be great if the `uses` version information could also be visible on the Quarkus Platform compatibility matrix page I asked for when we discussed the new Platform BOM versioning scheme.\r\n\r\n\n\n### Implementation ideas\n\nAn example of `quarkus-extension.yaml` delivered by an extension: \r\n\r\n```yaml\r\n---\r\nname: \"Camel AMQP\"\r\n...\r\nmetadata:\r\n  ...\r\n  uses:\r\n    'Camel': 'org.apache.camel:camel-core'\r\n    'ActiveMQ Client': 'org.apache.qpid:qpid-jms-client'\r\n```\r\n\r\nAn example how the new metadata could be presented on code.quarkus.io:\r\n![image](https://github.com/quarkusio/quarkus/assets/1826249/6dbd7dc7-d929-47c4-839d-5cdbe2fba1a9)",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35404/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35404/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
