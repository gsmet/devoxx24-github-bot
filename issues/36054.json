{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36054",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36054/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36054/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36054/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/36054",
  "id": 1906286523,
  "node_id": "I_kwDOCFbutM5xn5-7",
  "number": 36054,
  "title": "RESTEasy exception mapper precedence differs in JVM and native mode",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1273039603,
      "node_id": "MDU6TGFiZWwxMjczMDM5NjAz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/devmode",
      "name": "area/devmode",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1282147660,
      "node_id": "MDU6TGFiZWwxMjgyMTQ3NjYw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/resteasy-classic",
      "name": "area/resteasy-classic",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2023-09-21T07:19:58Z",
  "updated_at": "2023-11-28T10:21:11Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen introducing a general exception mapper (i.e. for `Exception`) with RESTEasy Classic, this results in the built-in exception mappers for `WebApplicationException` overriden, but only for the native mode, in JVM mode, they are still taken.\r\n\r\nPersonally, I'd be fine with either option (though I slightly prefer the WebApplicationExceptions to be handled by Quarkus), but in any case, it should behave the same in JVM and native mode.\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\nExample:\r\n\r\n```java\r\n@ApplicationScoped\r\n@Path(\"test\")\r\npublic class TestResource {\r\n\r\n    @GET\r\n    public String test() {\r\n        if (new Random().nextBoolean()) throw new NotFoundException();\r\n        return \"test\";\r\n    }\r\n}\r\n```\r\n\r\n```java\r\n@Provider\r\npublic class GeneralExceptionMapper implements ExceptionMapper<Exception> {\r\n\r\n    @Override\r\n    public Response toResponse(Exception exception) {\r\n        exception.printStackTrace();\r\n        return Response.status(Response.Status.INTERNAL_SERVER_ERROR)\r\n                .header(\"Error\", exception.getMessage() != null ? exception.getMessage() : exception.getClass())\r\n                .build();\r\n    }\r\n}\r\n```\r\n\r\nIn JVM mode / dev mode, the /test resource (randomly) returns a 404 error, in native mode, it returns 500 (due to our exception mapper).\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\nOpenJDK Runtime Environment Temurin-18.0.1+10 (build 18.0.1+10)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n3.2.0.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36054/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36054/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
