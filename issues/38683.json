{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38683",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38683/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38683/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38683/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38683",
  "id": 2125365282,
  "node_id": "I_kwDOCFbutM5-roAi",
  "number": 38683,
  "title": "Build time performance regression and bigger native binaries when migrating from 3.5 to 3.6 or 3.7",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1654772125,
      "node_id": "MDU6TGFiZWwxNjU0NzcyMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kubernetes",
      "name": "area/kubernetes",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/310",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/310",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/310/labels",
    "id": 10578643,
    "node_id": "MI_kwDOCFbutM4AoWrT",
    "number": 310,
    "title": "3.7.4",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 45,
    "state": "closed",
    "created_at": "2024-02-19T17:04:48Z",
    "updated_at": "2024-07-13T17:07:53Z",
    "due_on": null,
    "closed_at": "2024-02-21T12:35:22Z"
  },
  "comments": 43,
  "created_at": "2024-02-08T14:54:38Z",
  "updated_at": "2024-02-20T19:16:22Z",
  "closed_at": "2024-02-20T18:17:39Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nThis was originally reported in https://quarkusio.zulipchat.com/#narrow/stream/187030-users/topic/performance.20decrease.20with.20graalvm.2023.2E1.2E2.20-quarkus.203.2E5.20to.203.2E6 by @vsevel \r\n\r\n> hello, I am trying to upgrade one of our app that is running today with 3.2\r\nI am seeing big perf decrease on the native build, specifically between quarkus 3.5 and 3.6\r\nup to 3.5 (mandrel 23.0.3), I get native builds with around 10Gb of Peak RSS and augmentation time around 450 secs\r\nstarting with 3.6 (mandrel 23.1.2), I get native builds with around 15Gb of Peak RSS and augmentation time around 900 secs\r\n>\r\n> this seems related to the mandrel version change.\r\n\r\n### With Quarkus 3.5 and Mandrel 23.0.3\r\n\r\n```\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Running Quarkus native-image plugin on MANDREL 23.0.3.0 JDK 17.0.10+7\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] docker run --env LANG=C --rm -v /e/git/java-xx/target/xx-5.1.1-SNAPSHOT-native-image-source-jar:/project:z --name build-native-JpspI quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-17 -J-DCoordinatorEnvironmentBean.transactionStatusManagerEnable=false -J-Dlogging.initial-configurator.min-level=500 -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dio.quarkus.caffeine.graalvm.recordStats=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=3 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Duser.language=en -J-Duser.country=US -J-Dfile.encoding=UTF-8 --features=io.quarkus.caffeine.runtime.graal.CacheConstructorsFeature,io.quarkus.runner.Feature,io.quarkus.runtime.graal.DisableLoggingFeature,io.quarkus.hibernate.validator.runtime.DisableLoggingFeature -J--add-exports=java.security.jgss/sun.security.krb5=ALL-UNNAMED -J--add-opens=java.base/java.text=ALL-UNNAMED -J--add-opens=java.base/java.io=ALL-UNNAMED -J--add-opens=java.base/java.lang.invoke=ALL-UNNAMED -J--add-opens=java.base/java.util=ALL-UNNAMED -H:BuildOutputJSONFile=xx-5.1.1-SNAPSHOT-runner-build-output-stats.json --allow-incomplete-classpath -H:+AllowFoldMethods -J-Djava.awt.headless=true --no-fallback -H:+ReportExceptionStackTraces -J-Xmx20g -H:-AddAllCharsets --enable-url-protocols=http,https --enable-monitoring=heapdump -H:-UseServiceLoaderFeature -H:+StackTrace -J--add-exports=org.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED --exclude-config com\\.oracle\\.database\\.jdbc /META-INF/native-image/native-image\\.properties --exclude-config com\\.oracle\\.database\\.jdbc /META-INF/native-image/reflect-config\\.json --exclude-config io\\.netty\\.netty-codec /META-INF/native-image/io\\.netty/netty-codec/generated/handlers/reflect-config\\.json --exclude-config io\\.netty\\.netty-handler /META-INF/native-image/io\\.netty/netty-handler/generated/handlers/reflect-config\\.json xx-5.1.1-SNAPSHOT-runner -jar xx-5.1.1-SNAPSHOT-runner.jar\r\n========================================================================================================================\r\nGraalVM Native Image: Generating 'xx-5.1.1-SNAPSHOT-runner' (executable)...\r\n========================================================================================================================\r\nFor detailed information and explanations on the build output, visit:\r\nhttps://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/BuildOutput.md\r\n------------------------------------------------------------------------------------------------------------------------\r\nWarning: Feature class oracle.nativeimage.NativeImageFeature is annotated with the deprecated annotation @AutomaticFeature. Support for this annotation will be removed in a future version of GraalVM. Applications should register a feature using the option --features=oracle.nativeimage.NativeImageFeature\r\n[1/8] Initializing...                                                                                   (40.5s @ 0.44GB)\r\n Java version: 17.0.10+7, vendor version: Mandrel-23.0.3.0-Final\r\n Graal compiler: optimization level: 2, target machine: x86-64-v3\r\n C compiler: gcc (redhat, x86_64, 8.5.0)\r\n Garbage collector: Serial GC (max heap size: 80% of RAM)\r\n 6 user-specific feature(s)\r\n - com.oracle.svm.thirdparty.gson.GsonFeature\r\n - io.quarkus.caffeine.runtime.graal.CacheConstructorsFeature\r\n - io.quarkus.hibernate.validator.runtime.DisableLoggingFeature: Disables INFO logging during the analysis phase for the [org.hibernate.validator.internal.util.Version] categories\r\n - io.quarkus.runner.Feature: Auto-generated class by Quarkus from the existing extensions\r\n - io.quarkus.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase\r\n - oracle.nativeimage.NativeImageFeature\r\nThe bundle named: oracle.net.mesg.Message, has not been found. If the bundle is part of a module, verify the bundle name is a fully qualified class name. Otherwise verify the bundle path is accessible in the classpath.\r\nThe bundle named: oracle.net.mesg.Message, has not been found. If the bundle is part of a module, verify the bundle name is a fully qualified class name. Otherwise verify the bundle path is accessible in the classpath.\r\n15:30:29,939 WARN  [fre.dom] No XPath support is available. If you need it, add Apache Xalan or Jaxen as dependency.\r\n[2/8] Performing analysis...  [**********]                                                             (125.1s @ 3.84GB)\r\n  26,311 (77.92%) of 33,766 types reachable\r\n  49,848 (70.67%) of 70,540 fields reachable\r\n 170,497 (67.72%) of 251,765 methods reachable\r\n   9,987 types, 3,332 fields, and 51,258 methods registered for reflection\r\n      71 types,    93 fields, and    56 methods registered for JNI access\r\n       4 native libraries: dl, pthread, rt, z\r\n[3/8] Building universe...                                                                              (17.6s @ 4.14GB)\r\n[4/8] Parsing methods...      [****]                                                                    (15.0s @ 3.62GB)\r\n[5/8] Inlining methods...     [****]                                                                     (5.3s @ 4.28GB)\r\n[6/8] Compiling methods...    [*********]                                                               (80.9s @ 7.62GB)\r\n[7/8] Layouting methods...    [****]                                                                    (13.4s @ 5.20GB)\r\n[8/8] Creating image...       [*****]                                                                   (21.9s @ 6.63GB)\r\n  60.22MB (50.47%) for code area:   123,816 compilation units\r\n  58.71MB (49.20%) for image heap:  653,443 objects and 136 resources\r\n 410.26kB ( 0.34%) for other data\r\n 119.33MB in total\r\n------------------------------------------------------------------------------------------------------------------------\r\nTop 10 origins of code area:                                Top 10 object types in image heap:\r\n  13.52MB java.base                                           13.26MB byte[] for code metadata\r\n   6.00MB svm.jar (Native Image)                               6.89MB java.lang.Class\r\n   3.84MB xx-5.1.1-SNAPSHOT-runner.jar                  6.31MB byte[] for java.lang.String\r\n   3.33MB io.fabric8.kubernetes-model-core-6.8.1.jar           5.90MB java.lang.String\r\n   2.18MB org.freemarker.freemarker-2.3.32.jar                 4.99MB byte[] for general heap data\r\n   1.93MB c.f.jackson.core.jackson-databind-2.15.3.jar         4.67MB byte[] for reflection metadata\r\n   1.32MB modified-io.vertx.vertx-core-4.4.6.jar               2.25MB c.oracle.svm.core.reflect.SubstrateMethodAccessor\r\n   1.28MB java.net.http                                        2.21MB com.oracle.svm.core.hub.DynamicHubCompanion\r\n   1.24MB io.fabric8.openshift-model-6.8.1.jar                 1.22MB java.lang.String[]\r\n 627.07kB java.naming                                        953.16kB c.o.svm.core.hub.DynamicHub$ReflectionMetadata\r\n  23.95MB for 265 more packages                                9.87MB for 5682 more object types\r\n------------------------------------------------------------------------------------------------------------------------\r\nRecommendations:\r\n HEAP: Set max heap for improved and more predictable memory usage.\r\n CPU:  Enable more CPU features with '-march=native' for improved performance.\r\n------------------------------------------------------------------------------------------------------------------------\r\n                       27.2s (8.2% of total time) in 92 GCs | Peak RSS: 10.41GB | CPU load: 4.18\r\n------------------------------------------------------------------------------------------------------------------------\r\nProduced artifacts:\r\n /project/xx-5.1.1-SNAPSHOT-runner (executable)\r\n /project/xx-5.1.1-SNAPSHOT-runner-build-output-stats.json (build_info)\r\n========================================================================================================================\r\nFinished generating 'xx-5.1.1-SNAPSHOT-runner' in 5m 23s.\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] docker run --env LANG=C --rm -v /e/git/java-xx/target/xx-5.1.1-SNAPSHOT-native-image-source-jar:/project:z --entrypoint /bin/bash quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-17 -c objcopy --strip-debug xx-5.1.1-SNAPSHOT-runner\r\n[INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 388452ms\r\n```\r\n\r\n### With Quarkus 3.6 and Mandrel 23.1.2\r\n\r\n```\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Running Quarkus native-image plugin on MANDREL 23.1.2.0 JDK 21.0.2+13-LTS\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] docker run --env LANG=C --rm -v /e/git/java-xx/target/xx-5.1.1-SNAPSHOT-native-image-source-jar:/project:z --name build-native-ORizE quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-DCoordinatorEnvironmentBean.transactionStatusManagerEnable=false -J-Dlogging.initial-configurator.min-level=500 -J-Dio.quarkus.caffeine.graalvm.recordStats=true -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=3 -J-Duser.language=en -J-Duser.country=US -J-Dfile.encoding=UTF-8 --features=io.quarkus.caffeine.runtime.graal.CacheConstructorsFeature,io.quarkus.hibernate.validator.runtime.DisableLoggingFeature,io.quarkus.runner.Feature,io.quarkus.runtime.graal.DisableLoggingFeature -J--add-exports=java.security.jgss/sun.security.krb5=ALL-UNNAMED -J--add-opens=java.base/java.text=ALL-UNNAMED -J--add-opens=java.base/java.io=ALL-UNNAMED -J--add-opens=java.base/java.lang.invoke=ALL-UNNAMED -J--add-opens=java.base/java.util=ALL-UNNAMED -H:+UnlockExperimentalVMOptions -H:BuildOutputJSONFile=xx-5.1.1-SNAPSHOT-runner-build-output-stats.json -H:-UnlockExperimentalVMOptions --strict-image-heap --allow-incomplete-classpath -H:+UnlockExperimentalVMOptions -H:+AllowFoldMethods -H:-UnlockExperimentalVMOptions -J-Djava.awt.headless=true --no-fallback -H:+UnlockExperimentalVMOptions -H:+ReportExceptionStackTraces -H:-UnlockExperimentalVMOptions -J-Xmx20g -H:-AddAllCharsets --enable-url-protocols=http,https --enable-monitoring=heapdump -H:+UnlockExperimentalVMOptions -H:-UseServiceLoaderFeature -H:-UnlockExperimentalVMOptions -J--add-exports=org.graalvm.nativeimage/org.graalvm.nativeimage.impl=ALL-UNNAMED --exclude-config io\\.netty\\.netty-codec /META-INF/native-image/io\\.netty/netty-codec/generated/handlers/reflect-config\\.json --exclude-config io\\.netty\\.netty-handler /META-INF/native-image/io\\.netty/netty-handler/generated/handlers/reflect-config\\.json --exclude-config com\\.oracle\\.database\\.jdbc /META-INF/native-image/native-image\\.properties --exclude-config com\\.oracle\\.database\\.jdbc /META-INF/native-image/reflect-config\\.json xx-5.1.1-SNAPSHOT-runner -jar xx-5.1.1-SNAPSHOT-runner.jar\r\nWarning: Using a deprecated option --allow-incomplete-classpath from command line. Allowing an incomplete classpath is now the default. Use --link-at-build-time to report linking errors at image build time for a class or package.\r\nWarning: The option '-H:ReflectionConfigurationResources=META-INF/native-image/io.micrometer/micrometer-core/reflect-config.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.\r\nWarning: Please re-evaluate whether any experimental option is required, and either remove or unlock it. The build output lists all active experimental options, including where t...\r\n========================================================================================================================\r\nGraalVM Native Image: Generating 'xx-5.1.1-SNAPSHOT-runner' (executable)...\r\n========================================================================================================================\r\nFor detailed information and explanations on the build output, visit:\r\nhttps://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/BuildOutput.md\r\n------------------------------------------------------------------------------------------------------------------------\r\nWarning: Feature class oracle.nativeimage.NativeImageFeature is annotated with the deprecated annotation @AutomaticFeature. Support for this annotation will be removed in a future version of GraalVM. Applications should register a feature using the option --features=oracle.nativeimage.NativeImageFeature\r\n[1/8] Initializing...                                                                                   (52.4s @ 0.42GB)\r\n Java version: 21.0.2+13-LTS, vendor version: Mandrel-23.1.2.0-Final\r\n Graal compiler: optimization level: 2, target machine: x86-64-v3\r\n C compiler: gcc (redhat, x86_64, 8.5.0)\r\n Garbage collector: Serial GC (max heap size: 80% of RAM)\r\n 6 user-specific feature(s):\r\n - com.oracle.svm.thirdparty.gson.GsonFeature\r\n - io.quarkus.caffeine.runtime.graal.CacheConstructorsFeature\r\n - io.quarkus.hibernate.validator.runtime.DisableLoggingFeature: Disables INFO logging during the analysis phase for the [org.hibernate.validator.internal.util.Version] categories\r\n - io.quarkus.runner.Feature: Auto-generated class by Quarkus from the existing extensions\r\n - io.quarkus.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase\r\n - oracle.nativeimage.NativeImageFeature\r\n------------------------------------------------------------------------------------------------------------------------\r\n 4 experimental option(s) unlocked:\r\n - '-H:+AllowFoldMethods' (origin(s): command line)\r\n - '-H:BuildOutputJSONFile' (origin(s): command line)\r\n - '-H:-UseServiceLoaderFeature' (origin(s): command line)\r\n - '-H:ReflectionConfigurationResources' (origin(s): 'META-INF/native-image/io.micrometer/micrometer-core/native-image.properties' in 'file:///project/lib/io.micrometer.micrometer-core-1.11.5.jar')\r\n------------------------------------------------------------------------------------------------------------------------\r\nBuild resources:\r\n - 17.78GB of memory (70.9% of 25.06GB system memory, set via '-Xmx20g')\r\n - 6 thread(s) (100.0% of 6 available processor(s), determined at start)\r\n15:47:00,469 WARN  [fre.dom] No XPath support is available. If you need it, add Apache Xalan or Jaxen as dependency.\r\n[2/8] Performing analysis...  [*****]                                                                  (468.2s @ 9.26GB)\r\n   44,742 reachable types   (93.8% of   47,723 total)\r\n   91,492 reachable fields  (81.3% of  112,513 total)\r\n  403,198 reachable methods (84.6% of  476,837 total)\r\n   28,302 types, 57,105 fields, and 238,786 methods registered for reflection\r\n       69 types,    91 fields, and    56 methods registered for JNI access\r\n        4 native libraries: dl, pthread, rt, z\r\n[3/8] Building universe...                                                                              (26.1s @ 9.78GB)\r\n[4/8] Parsing methods...      [*****]                                                                  (27.2s @ 10.15GB)\r\n[5/8] Inlining methods...     [****]                                                                    (11.7s @ 9.41GB)\r\n[6/8] Compiling methods...    [************]                                                           (141.5s @ 5.30GB)\r\n[7/8] Layouting methods...    [******]                                                                  (39.4s @ 7.28GB)\r\n[8/8] Creating image...       [********]                                                                (66.7s @ 8.28GB)\r\n 154.67MB (48.39%) for code area:   352,852 compilation units\r\n 164.56MB (51.48%) for image heap:1,238,079 objects and 200 resources\r\n 418.96kB ( 0.13%) for other data\r\n 319.63MB in total\r\n------------------------------------------------------------------------------------------------------------------------\r\nTop 10 origins of code area:                                Top 10 object types in image heap:\r\n  18.46MB io.fabric8.openshift-model-operator-6.9.2.jar       48.89MB byte[] for code metadata\r\n  16.82MB svm.jar (Native Image)                              28.81MB byte[] for java.lang.String\r\n  14.59MB io.fabric8.openshift-model-6.9.2.jar                22.70MB java.lang.Class\r\n  13.77MB java.base                                           19.13MB byte[] for reflection metadata\r\n   9.21MB io.fabric8.kubernetes-model-core-6.9.2.jar          11.04MB java.lang.String\r\n   4.83MB io.fabric8.openshift-model-monitoring-6.9.2.jar     10.87MB c.oracle.svm.core.reflect.SubstrateMethodAccessor\r\n   4.80MB io.fabric8.openshift-model-hive-6.9.2.jar            3.75MB com.oracle.svm.core.hub.DynamicHubCompanion\r\n   4.20MB xx-5.1.1-SNAPSHOT-runner.jar                  2.65MB java.lang.Object[]\r\n   2.98MB i.f.k.9.2.jar                                        2.31MB java.lang.String[]\r\n   2.78MB io.fabric8.openshift-model-operatorhub-6.9.2.jar     1.77MB byte[] for general heap data\r\n  59.56MB for 267 more packages                               12.65MB for 5792 more object types\r\n------------------------------------------------------------------------------------------------------------------------\r\nRecommendations:\r\n HEAP: Set max heap for improved and more predictable memory usage.\r\n CPU:  Enable more CPU features with '-march=native' for improved performance.\r\n------------------------------------------------------------------------------------------------------------------------\r\n                      129.8s (15.4% of total time) in 249 GCs | Peak RSS: 15.80GB | CPU load: 4.53\r\n------------------------------------------------------------------------------------------------------------------------\r\nProduced artifacts:\r\n /project/xx-5.1.1-SNAPSHOT-runner (executable)\r\n /project/xx-5.1.1-SNAPSHOT-runner-build-output-stats.json (build_info)\r\n========================================================================================================================\r\nFinished generating 'xx-5.1.1-SNAPSHOT-runner' in 13m 57s.\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] docker run --env LANG=C --rm -v /e/git/java-xx/target/xx-5.1.1-SNAPSHOT-native-image-source-jar:/project:z --entrypoint /bin/bash quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21 -c objcopy --strip-debug xx-5.1.1-SNAPSHOT-runner\r\n[INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 933775ms\r\n```\r\n\r\n### Expected behavior\r\n\r\nBuild times and binary size are expected to be comparable between 3.5, 3.6 and 3.7 given no other changes happened in the application code.\r\n\r\n### Actual behavior\r\n\r\nThe user observes significant increases in build execution times, memory usage, and binary size.\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### Mandrel or GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n_No response_\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38683/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38683/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
