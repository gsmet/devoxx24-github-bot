{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29146",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29146/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29146/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29146/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29146",
  "id": 1441895659,
  "node_id": "I_kwDOCFbutM5V8ZTr",
  "number": 29146,
  "title": "Custom SSL Root CA Certificates overrule certificates from default cacerts when running in native mode",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1676631606,
      "node_id": "MDU6TGFiZWwxNjc2NjMxNjA2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/windows",
      "name": "env/windows",
      "color": "edea47",
      "default": false,
      "description": "Impacts Windows machines"
    },
    {
      "id": 1891982257,
      "node_id": "MDU6TGFiZWwxODkxOTgyMjU3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/container-image",
      "name": "area/container-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/223",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/223",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/223/labels",
    "id": 8751686,
    "node_id": "MI_kwDOCFbutM4AhYpG",
    "number": 223,
    "title": "2.13.6.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 73,
    "state": "closed",
    "created_at": "2022-12-12T12:20:37Z",
    "updated_at": "2023-01-25T09:00:33Z",
    "due_on": null,
    "closed_at": "2022-12-19T16:04:43Z"
  },
  "comments": 6,
  "created_at": "2022-11-09T11:09:22Z",
  "updated_at": "2022-12-12T12:23:21Z",
  "closed_at": "2022-11-10T13:17:31Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nAccording to [this guide](https://quarkus.io/guides/native-and-ssl) it should be possible to add a custom Root CA certificate to a Quarkus native application. Furthermore its also mentioned when passing the certificates via the following system properties to the underlying GraalVM:\r\n``quarkus.native.additional-build-args=-J-Djavax.net.ssl.trustStore=/tmp/mycerts,-J-Djavax.net.ssl.trustStorePassword=changeit``\r\n the certificates of ``/tmp/mycerts`` are baked into the native binary and used **in addition** to the default ``cacerts``.\r\n\r\nHowever, that's not what I've observed. When passing a custom trust-store to the native build only those certificates which are part of the custom trust-store are present at runtime. All other trusted ``ca-certs``, which are available during the build (e.g. provided by GrallVM) are gone, or at least not accessible by the resulting native app. \r\n\r\n\n\n### Expected behavior\n\nAccording to the documentation my expectation would be that certificates from a custom trust-store are being used **in addition** to any other trusted ``ca-certficate``, that has been provided by the default ``cacerts`` during the ``native image`` build. \r\n\r\nFor example: Let's imagine that the ``GraalVM`` ships with a trust-store which contains 129 Root CA certificates. Since I pass a custom trust-store with a single certificate my expectation would be that all those 130 Root CA certificates are baked in the native binary.\n\n### Actual behavior\n\nThe certificates of a custom trust-store overrule ``cacerts`` present in the GraalVM. The ca-certificates aren't baked into the native binary (or at least they aren't recognized at runtime) as they should according to the documentation. Just the custom certificates are present..\n\n### How to Reproduce?\n\n1. Add required configs in application.properties (I'm using ``jib`` to create the image, maybe that's of relevance)\r\n```\r\nquarkus.container-image.build=true\r\nquarkus.container-image.push=false\r\nquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.3-java17\r\nquarkus.native.additional-build-args=-J-Djavax.net.ssl.trustStore=src/main/resources/META-INF/truststore.jks,-J-Djavax.net.ssl.trustStorePassword=changeit\r\nquarkus.jib.base-native-image=quay.io/quarkus/quarkus-distroless-image:2.0\r\nquarkus.jib.base-jvm-image=**Any JVM base image should work**\r\n```\r\n2. Add a class which prints the certificates available at build and runtime:\r\nI had no better idea to extract the certificates from the native binary. From my understanding they are ``baked`` into the binary and not being loaded from the underlying OS default trust-store.\r\n```\r\n@ApplicationScoped\r\npublic class TLSStartup {\r\n\r\n    void onStart(@Observes StartupEvent ev) throws NoSuchAlgorithmException, KeyStoreException {\r\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\r\n        trustManagerFactory.init((KeyStore) null);\r\n\r\n        List<TrustManager> trustManagers = Arrays.asList(trustManagerFactory.getTrustManagers());\r\n        List<X509Certificate> certificates = trustManagers.stream()\r\n                .filter(X509TrustManager.class::isInstance)\r\n                .map(X509TrustManager.class::cast)\r\n                .map(trustManager -> Arrays.asList(trustManager.getAcceptedIssuers()))\r\n                .flatMap(Collection::stream)\r\n                .collect(Collectors.toList());\r\n        System.out.println(\"certificates -> \"+certificates);\r\n    }\r\n}\r\n```\r\n3. Trigger a native build. I'm using the container approach since I haven't installed GraalVM locally:\r\n``mvn package -Pnative -Dquarkus.native.container-build=true`` \r\n\r\n4. The defined observer shall be trigger at build and runtime. During the ``native image`` build check the sys out log and verify that the expected ``ca-certs`` are present. Once the binary has been crafted start the image and check the output. In that case only the certs from the custom trust-store should be present.\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n17.0.5+8-jvmci-22.3-b08\n\n### GraalVM version (if different from Java)\n\nGraalVM 22.3.0 Java 17 CE\n\n### Quarkus version or git rev\n\n2.13.3.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.5 (3599d3414f046de2324203b78ddcf9b5e4388aa0)\n\n### Additional information\n\nDocker Desktop on Windows 10:\r\nServer Version: 20.10.20\r\nAPI Version: 1.41\r\nOperating System: Docker Desktop\r\n\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29146/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29146/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
