{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20059",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20059/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20059/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20059/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20059",
  "id": 993151829,
  "node_id": "MDU6SXNzdWU5OTMxNTE4Mjk=",
  "number": 20059,
  "title": "Enhance healthcheck exclude parameter for reactive datasource",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1676631606,
      "node_id": "MDU6TGFiZWwxNjc2NjMxNjA2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/windows",
      "name": "env/windows",
      "color": "edea47",
      "default": false,
      "description": "Impacts Windows machines"
    },
    {
      "id": 2236032169,
      "node_id": "MDU6TGFiZWwyMjM2MDMyMTY5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/health",
      "name": "area/health",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/144",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/144",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/144/labels",
    "id": 7068928,
    "node_id": "MI_kwDOCFbutM4Aa90A",
    "number": 144,
    "title": "2.3.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 289,
    "state": "closed",
    "created_at": "2021-08-18T08:27:09Z",
    "updated_at": "2022-02-22T17:41:43Z",
    "due_on": null,
    "closed_at": "2021-09-22T10:46:00Z"
  },
  "comments": 8,
  "created_at": "2021-09-10T11:37:27Z",
  "updated_at": "2021-09-21T06:28:02Z",
  "closed_at": "2021-09-20T16:29:22Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nHi,\r\n\r\nI have a microservice with a JDBC datasource (elytron-security-jdbc) and several reactive datasources.\r\nFirst of all, the healthcheck returns DOWN as a global status for reactive datasource even if everything is UP. \r\nThe JDBC shouldn't be part of the Reactive datasource healthcheck one ...\r\n \r\nCurrently the exclude-healthcheck only works for JDBC datasource BUT it has no effect in my case since I also have some reactive datasources.\r\n\r\nIm looking for a way to have a coherent healthcheck status. \r\nIdeally with a clean separation between jdbc and reactive datasources.\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nThe healthcheck must provide a clean separation between jdbc and reactive datasource\r\n\r\n### Actual behavior\r\n\r\nThe healthcheck is wrong as you can see: \r\n\r\n```json\r\n{\r\n    \"status\": \"DOWN\",\r\n    \"checks\": [\r\n        {\r\n            \"name\": \"Microservice : mail\",\r\n            \"status\": \"UP\",\r\n            \"data\": {\r\n                \"Application version\": \"1.1.3-SNAPSHOT\",\r\n                \"Quarkus version\": \"2.1.1.Final\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"Reactive PostgreSQL connections health check\",\r\n            \"status\": \"DOWN\",\r\n            \"data\": {\r\n                \"<default>\": \"up\",\r\n                \"react\": \"up\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"io.quarkus.agroal.runtime.health.DataSourceHealthCheck_ClientProxy\",\r\n            \"status\": \"DOWN\",\r\n            \"data\": {\r\n                \"rootCause\": \"quarkus.datasource.react.jdbc.url has not been defined\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n\"default\" is a JDBC and not a Reactive datasource! \r\n\r\nas you can see : \r\n\r\n```properties\r\n# DB connection, needed for authentication\r\nquarkus.datasource.db-kind=postgresql\r\nquarkus.datasource.username=user\r\nquarkus.datasource.password=pwd\r\nquarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/dbuser\r\nquarkus.datasource.jdbc.idle-removal-interval=PT20s\r\n# Security parameters\r\nquarkus.http.auth.basic=true\r\nquarkus.security.jdbc.realm-name=quarkus\r\nquarkus.security.jdbc.enabled=true\r\nquarkus.security.jdbc.principal-query.sql=SELECT u.hash, u.salt, u.iter, u.roles FROM users u WHERE u.login=?\r\nquarkus.security.jdbc.principal-query.bcrypt-password-mapper.enabled=true\r\nquarkus.security.jdbc.principal-query.bcrypt-password-mapper.password-index=1\r\nquarkus.security.jdbc.principal-query.bcrypt-password-mapper.salt-index=2\r\nquarkus.security.jdbc.principal-query.bcrypt-password-mapper.iteration-count-index=3\r\nquarkus.security.jdbc.principal-query.bcrypt-password-mapper.hash-encoding=BASE64\r\nquarkus.security.jdbc.principal-query.attribute-mappings.0.index=4\r\nquarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups\r\n\r\n# DB for data\r\nquarkus.datasource.react.db-kind=postgresql\r\nquarkus.datasource.react.username=user2\r\nquarkus.datasource.react.password=pwd\r\nquarkus.datasource.react.reactive.url=postgresql://localhost:5432/dbother\r\nquarkus.datasource.react.reactive.max-size=20\r\nquarkus.datasource.react.reactive.reconnect-attempts=5\r\nquarkus.datasource.react.reactive.reconnect-interval=PT1M\r\nquarkus.datasource.react.reactive.idle-timeout=PT20s\r\n```\r\n\r\n### How to Reproduce?\r\n\r\nCreate a microservice with the smallrye-healthcheck, elytron-security-jdbc and reactive-postgres extension.\r\nDefines some jdbc and some reactive datasources.\r\n\r\ntry to make a helathcheck\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nwindows system\r\n\r\n### Output of `java -version`\r\n\r\n11\r\n\r\n### GraalVM version (if different from Java)\r\n\r\nNA\r\n\r\n### Quarkus version or git rev\r\n\r\n2.12.2\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nmaven 3.8.1\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20059/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20059/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
