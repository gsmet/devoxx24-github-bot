{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27073",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27073/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27073/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27073/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27073",
  "id": 1325197040,
  "node_id": "I_kwDOCFbutM5O_Obw",
  "number": 27073,
  "title": "@QuarkusMain not executed with Lambda Function at AWS",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1326073020,
      "node_id": "MDU6TGFiZWwxMzI2MDczMDIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/amazon-lambda",
      "name": "area/amazon-lambda",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1958884827,
      "node_id": "MDU6TGFiZWwxOTU4ODg0ODI3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/funqy",
      "name": "area/funqy",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2022-08-02T02:22:34Z",
  "updated_at": "2024-08-22T07:01:56Z",
  "closed_at": "2024-08-22T07:01:56Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI am building a Lambda Function with Quarkus Funqy. I have a class annoted with @QuarkusMain to do statics initilization for Provisioned concurrency.\r\n\r\n@QuarkusMain class is executed with `mvn quarkus:dev`, but is not executed when Lambda function is called or initilized.\r\n\r\nMy code looks like below:\r\n\r\n```java\r\n@QuarkusMain\r\npublic class Main {\r\n    public static void main(String... args) {\r\n        Quarkus.run(MyApp.class, args);\r\n    }\r\n\r\n    public static class MyApp implements QuarkusApplication {\r\n\r\n        @Override\r\n        public int run(String... args) throws Exception {\r\n            System.out.println(\"Static initilization\");\r\n            Quarkus.waitForExit();\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\npublic class Sample {\r\n\r\n   @Funq\r\n   public String sample(JsonNode event) {\r\n      return \"OK\";\r\n   }\r\n\r\n}\r\n```\r\n\r\nWith `mvn quarkus:dev` it runs properly\r\n![intellij](https://user-images.githubusercontent.com/74375073/182277581-2cdbe9cc-6a4d-4ba6-8c72-1c165af35b75.png)\r\n\r\nBut on AWS not\r\n![aws](https://user-images.githubusercontent.com/74375073/182277622-a351fb8e-fae6-4afd-aae1-80e549a7a367.png)\r\n\r\nThe handler configured: io.quarkus.funqy.lambda.FunqyStreamHandler::handleRequest\r\n\r\nI already tested with Quarkus 2.10.0 and 2.11.1.\r\n\r\nThanks!\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nI expect that on lambda cold start, the @QuarkusMain should be executed.\r\n\r\n### Actual behavior\r\n\r\n_No response_\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.10.0\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27073/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27073/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
