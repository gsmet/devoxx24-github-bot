{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28033",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28033/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28033/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28033/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/28033",
  "id": 1376809278,
  "node_id": "I_kwDOCFbutM5SEHE-",
  "number": 28033,
  "title": "io.quarkus.smallrye.graphql.deployment.ConcurrentAuthTest fails on MacOS M1",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 4147701997,
      "node_id": "LA_kwDOCFbutM73OOjt",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/m1",
      "name": "env/m1",
      "color": "edea47",
      "default": false,
      "description": "Impacts Apple M1 machines"
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 9,
  "created_at": "2022-09-17T16:02:34Z",
  "updated_at": "2022-09-19T11:43:08Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nNote: This test has been disabled on M1 as part of [#27156](https://github.com/quarkusio/quarkus/pull/27156)\r\n\r\nThis is the error: \r\n\r\n```\r\n[INFO] Running io.quarkus.smallrye.graphql.deployment.ConcurrentAuthTest\r\n2022-09-17 13:00:53,398 INFO  [io.qua.ely.sec.pro.dep.ElytronPropertiesProcessor] (build-12) Configuring from MPRealmConfig\r\n2022-09-17 13:00:53,960 INFO  [io.quarkus] (main) quarkus-smallrye-graphql-deployment 999-SNAPSHOT on JVM (powered by Quarkus 999-SNAPSHOT) started in 0.336s. Listening on: http://localhost:8081\r\n2022-09-17 13:00:53,960 INFO  [io.quarkus] (main) Profile test activated. \r\n2022-09-17 13:00:53,960 INFO  [io.quarkus] (main) Installed features: [cdi, hibernate-validator, jaeger, resteasy-reactive, security, security-properties-file, smallrye-context-propagation, smallrye-graphql, smallrye-metrics, smallrye-opentracing, vertx]\r\n2022-09-17 13:00:57,265 INFO  [org.apa.htt.imp.cli.DefaultHttpClient] (pool-183-thread-29) I/O exception (java.net.SocketException) caught when connecting to {}->http://localhost:8081: Too many open files\r\n[zillions of repeated log warnings]\r\n2022-09-17 13:00:57,278 INFO  [org.apa.htt.imp.cli.DefaultHttpClient] (pool-183-thread-32) I/O exception (java.net.SocketException) caught when connecting to {}->http://localhost:8081: Too many open files\r\n2022-09-17 13:00:57,278 INFO  [org.apa.htt.imp.cli.DefaultHttpClient] (pool-183-thread-32) Retrying connect to {}->http://localhost:8081\r\n2022-09-17 13:00:58,267 WARN  [io.net.cha.DefaultChannelPipeline] (vert.x-acceptor-thread-0) An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.: java.io.IOException: Too many open files\r\n        at java.base/sun.nio.ch.Net.accept(Native Method)\r\n        at java.base/sun.nio.ch.ServerSocketChannelImpl.implAccept(ServerSocketChannelImpl.java:425)\r\n        at java.base/sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:391)\r\n        at io.netty.util.internal.SocketUtils$5.run(SocketUtils.java:119)\r\n        at io.netty.util.internal.SocketUtils$5.run(SocketUtils.java:116)\r\n        at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n        at io.netty.util.internal.SocketUtils.accept(SocketUtils.java:116)\r\n        at io.netty.channel.socket.nio.NioServerSocketChannel.doReadMessages(NioServerSocketChannel.java:154)\r\n        at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:79)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:487)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\n\r\n2022-09-17 13:00:59,268 WARN  [io.net.cha.DefaultChannelPipeline] (vert.x-acceptor-thread-0) An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.: java.io.IOException: Too many open files\r\n        at java.base/sun.nio.ch.Net.accept(Native Method)\r\n        at java.base/sun.nio.ch.ServerSocketChannelImpl.implAccept(ServerSocketChannelImpl.java:425)\r\n        at java.base/sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:391)\r\n        at io.netty.util.internal.SocketUtils$5.run(SocketUtils.java:119)\r\n        at io.netty.util.internal.SocketUtils$5.run(SocketUtils.java:116)\r\n        at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n        at io.netty.util.internal.SocketUtils.accept(SocketUtils.java:116)\r\n        at io.netty.channel.socket.nio.NioServerSocketChannel.doReadMessages(NioServerSocketChannel.java:154)\r\n        at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:79)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:487)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\n\r\n2022-09-17 13:00:59,365 INFO  [io.quarkus] (main) quarkus-smallrye-graphql-deployment stopped in 0.087s\r\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 6.169 s <<< FAILURE! - in io.quarkus.smallrye.graphql.deployment.ConcurrentAuthTest\r\n[ERROR] io.quarkus.smallrye.graphql.deployment.ConcurrentAuthTest.concurrentAllFilmsOnly  Time elapsed: 5.291 s  <<< ERROR!\r\n```\r\n\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\nUndo the disabling of the test, and then \r\n\r\n```\r\nmvn verify -f extensions/smallrye-graphql/deployment\r\n```\r\n\r\nAlso can be reproduced on the Mac CI. \n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28033/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28033/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
