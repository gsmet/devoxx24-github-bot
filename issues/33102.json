{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33102",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33102/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33102/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33102/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33102",
  "id": 1694110477,
  "node_id": "I_kwDOCFbutM5k-hMN",
  "number": 33102,
  "title": "Loom support shouldn't retrieve the carrier thread via reflection",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2023-05-03T13:45:35Z",
  "updated_at": "2024-04-05T15:04:17Z",
  "closed_at": "2024-04-05T15:04:17Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nhttps://gist.github.com/franz1981/4234195ca0168f3833023b610d91ddff better explain what's the issue and how to reproduce it, but in short: the existing loom integration retrieve the current carrier thread via reflection in order to use a Netty's `PoolThreadCache`, but this operation is super-expensive despite https://openjdk.org/jeps/416 and should use a static final saved `MethodHandle::invokeExact`  instead.\r\n\r\n\r\n\r\n### Implementation ideas\r\n\r\nThe idea is to replace reflection with method handle or as an alternative solution Netty should be able to NOT use any pool cache while used with a virtual thread too.\r\n\r\nOne additional motivation for this last one case is that a virtual thread using a `PoolThreadCache` is expected to be \"stable\" and never change its carrier; and that's something that with Loom won't happen \r\n\r\nLast but not least, the existing integration is tracking pool caches per carrier thread(s) into a CHM<Thread, ...> that's leaking the carrier thread (being a key) - it shouldn't be a problem in theory because the FJ pool used by default by loom is stable BUT the JDK, in few rare cases, can decide to destroy thread(s) and re-create new ones to keep the concurrency at configured limits; and in that case the CHM will leak such killed thread and its netty pool cache too (that's rather costy in term of memory footprint!)\r\n@anavarr @cescoffier ",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33102/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33102/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
