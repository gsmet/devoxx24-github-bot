{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31677",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31677/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31677/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31677/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/31677",
  "id": 1614976658,
  "node_id": "I_kwDOCFbutM5gQpaS",
  "number": 31677,
  "title": "@Blocking doesn't work",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346625,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjU=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/invalid",
      "name": "triage/invalid",
      "color": "e4e669",
      "default": false,
      "description": "This doesn't seem right"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 28,
  "created_at": "2023-03-08T09:53:44Z",
  "updated_at": "2023-03-10T14:07:05Z",
  "closed_at": "2023-03-08T11:17:32Z",
  "active_lock_reason": null,
  "body": "Hi guys. \r\n\r\n### Describe the bug\r\n\r\n@Blocking does not seem to be taken into account when using a reactive call stack. \r\n\r\n\"\"\"\r\nAnnotation used to indicate that the annotated method is inherently blocking and so should not be executed on a non-blockable thread (I/O thread, event loops...)\r\n\"\"\"\r\n\r\n\r\n### Expected behavior\r\n\r\nUsing another thread pool than vertx when @Blocking is detected\r\n\r\n### Actual behavior\r\n\r\nThe example of the code logs a WARN because we see a vert.x-eventloop-thread used. \r\n\r\n```\r\n2023-03-08 09:32:42,616 WARN  [io.ver.cor.imp.BlockedThreadChecker] (vertx-blocked-thread-checker) Thread Thread[vert.x-eventloop-thread-0,5,main] has been blocked for 3688 ms, time limit is 2000 ms: io.vertx.core.VertxException: Thread blocked\r\n        at java.base@17.0.6/java.lang.Thread.sleep(Native Method)\r\n        at org.test.GreetingResource.schedule(GreetingResource.java:39)\r\n        at org.test.GreetingResource.hello(GreetingResource.java:26)\r\n        at org.test.GreetingResource$quarkusrestinvoker$hello_d1fd18c65b32335d71a4b7282527a960c5fc08f2.invoke(Unknown Source)\r\n        at org.jboss.resteasy.reactive.server.handlers.InvocationHandler.handle(InvocationHandler.java:29)\r\n        at io.quarkus.resteasy.reactive.server.runtime.QuarkusResteasyReactiveRequestContext.invokeHandler(QuarkusResteasyReactiveRequestContext.java:114)\r\n        at org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:145)\r\n        at org.jboss.resteasy.reactive.server.handlers.RestInitialHandler.beginProcessing(RestInitialHandler.java:48)\r\n        at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveVertxHandler.handle(ResteasyReactiveVertxHandler.java:23)\r\n        at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveVertxHandler.handle(ResteasyReactiveVertxHandler.java:10)\r\n        at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1284)\r\n        at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)\r\n        at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:141)\r\n        at io.quarkus.vertx.http.runtime.StaticResourcesRecorder$2.handle(StaticResourcesRecorder.java:101)\r\n        at io.quarkus.vertx.http.runtime.StaticResourcesRecorder$2.handle(StaticResourcesRecorder.java:87)\r\n        at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1284)\r\n        at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)\r\n        at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:141)\r\n        at io.vertx.ext.web.handler.impl.StaticHandlerImpl.lambda$sendStatic$1(StaticHandlerImpl.java:290)\r\n        at io.vertx.ext.web.handler.impl.StaticHandlerImpl$$Lambda$959/0x000000080113e208.handle(Unknown Source)\r\n        at io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n        at io.vertx.core.impl.future.FutureBase.lambda$emitSuccess$0(FutureBase.java:54)\r\n        at io.vertx.core.impl.future.FutureBase$$Lambda$936/0x0000000801135c68.run(Unknown Source)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base@17.0.6/java.lang.Thread.run(Thread.java:833)\r\n```\r\n\r\n\r\n### How to Reproduce?\r\n\r\n```java\r\n@ApplicationScoped\r\npublic class GreetingResource {\r\n    private static final Logger log = LoggerFactory.getLogger(GreetingResource.class);\r\n    private final Semaphore semaphore = new Semaphore(1);\r\n\r\n    @Scheduled(every = \"1s\")\r\n    Uni<Void> everySecond() throws InterruptedException {\r\n        schedule();\r\n        return Uni.createFrom().voidItem();\r\n    }\r\n    \r\n    @Blocking\r\n    public void schedule() throws InterruptedException {\r\n        log.info(\"scheduler run new thread\");\r\n        if (semaphore.tryAcquire(10, SECONDS)) {\r\n\r\n            log.info(\"thread in activity\");\r\n            try {\r\n                Thread.sleep(50000);\r\n            } finally {\r\n                semaphore.release();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"17.0.6\" 2023-01-17 LTS                            \r\nOpenJDK Runtime Environment (build 17.0.6+10-LTS)                  \r\nOpenJDK 64-Bit Server VM (build 17.0.6+10-LTS, mixed mode, sharing)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.16.4.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.9.0 (9b58d2bad23a66be161c4664ef21ce219c2c8584)                                 \r\nMaven home: E:\\git\\scoop\\apps\\maven\\current                                                   \r\nJava version: 17.0.6, vendor: BellSoft, runtime: E:\\git\\scoop\\apps\\liberica17-full-jdk\\current\r\nDefault locale: en_US, platform encoding: Cp1252                                              \r\nOS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"                      \r\n\r\n### Additional information\r\n\r\nThanks !",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31677/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31677/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
