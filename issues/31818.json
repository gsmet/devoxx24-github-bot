{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31818",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31818/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31818/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31818/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/31818",
  "id": 1621809812,
  "node_id": "I_kwDOCFbutM5gqtqU",
  "number": 31818,
  "title": "Jackson JAX-RS YAML Provider for Resteasy Reactive",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3267721944,
      "node_id": "MDU6TGFiZWwzMjY3NzIxOTQ0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/jackson",
      "name": "area/jackson",
      "color": "0366d6",
      "default": false,
      "description": "Issues related to Jackson (JSON library)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/238",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/238",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/238/labels",
    "id": 9129801,
    "node_id": "MI_kwDOCFbutM4Ai09J",
    "number": 238,
    "title": "2.16.5.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 36,
    "state": "closed",
    "created_at": "2023-03-07T15:04:54Z",
    "updated_at": "2023-05-09T09:46:48Z",
    "due_on": null,
    "closed_at": "2023-03-22T10:34:48Z"
  },
  "comments": 5,
  "created_at": "2023-03-13T16:11:14Z",
  "updated_at": "2023-03-16T10:13:36Z",
  "closed_at": "2023-03-15T15:31:22Z",
  "active_lock_reason": null,
  "body": "### Description\n\nAfter playing around with a potential solution, I ended up filing this feature request. I have class called `Role`, that works in the following Scenarios:\r\n\r\n1. Accept, deserialize, serialize, and return `Uni<Role>` with `@Consumes({MediaType.APPLICATION_JSON})` and `@Produces({MediaType.APPLICATION_JSON})`.\r\n2. Media types `application/x+yaml` works when consuming and returning `String` and `Uni<String>` respectively, then I handle serde on my own.\r\n\r\nThe method signature looks like this:\r\n```java\r\n@Post\r\n@Consumes(...)\r\n@Produces(...)\r\npublic Uni<Role> handle(Role role) { \r\n// do all the things\r\nreturn Uni.createFrom().item(role);\r\n}\r\n```\r\n\r\nWorks like a charm for `application/json`. Throws an error for `application/x+yaml`.\r\n\r\nI've added the following dependency and configured quarkus accordingly:\r\n\r\n```xml\r\n<dependency>\r\n  <groupId>com.fasterxml.jackson.jaxrs</groupId>\r\n  <artifactId>jackson-jaxrs-yaml-provider</artifactId>\r\n</dependency>\r\n```\r\n\r\n```yaml\r\nquarkus:\r\n  index-dependency:\r\n    yaml:\r\n      group-id: 'com.fasterxml.jackson.jaxrs'\r\n      artifact-id: jackson-jaxrs-yaml-provider\r\n```\r\n\r\nDon't know if this is the appropriate channel. I also don't see any mention in the _Resteasy Reactive Documentation_ https://quarkus.io/guides/resteasy-reactive. I attach a sample stacktrace when having the following method signature:\r\n\r\n```java\r\n@Post\r\n@Consumes({\"application/x+yaml\"})\r\n@Produces({\"application/x+yaml\"})\r\npublic Uni<Role> handle(Role role) { \r\n// do all the things\r\nreturn Uni.createFrom().item(role);\r\n}\r\n```\r\n\r\n## Stacktrace\r\n```\r\n2023-03-13 16:45:04,308 ERROR [org.jbo.res.rea.com.cor.AbstractResteasyReactiveContext] (vert.x-eventloop-thread-4) Request failed: java.lang.IllegalArgumentException: Class `org.acme.Role` not subtype of `io.smallrye.mutiny.Uni<org.acme.Role>`\r\n        at com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(TypeFactory.java:464)\r\n        at com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(TypeFactory.java:426)\r\n        at com.fasterxml.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:593)\r\n        at org.jboss.resteasy.reactive.server.core.ServerSerialisers.invokeWriter(ServerSerialisers.java:233)\r\n        at org.jboss.resteasy.reactive.server.core.ServerSerialisers.invokeWriter(ServerSerialisers.java:191)\r\n        at org.jboss.resteasy.reactive.server.core.serialization.FixedEntityWriterArray.write(FixedEntityWriterArray.java:30)\r\n        at org.jboss.resteasy.reactive.server.handlers.ResponseWriterHandler.handle(ResponseWriterHandler.java:34)\r\n        at io.quarkus.resteasy.reactive.server.runtime.QuarkusResteasyReactiveRequestContext.invokeHandler(QuarkusResteasyReactiveRequestContext.java:120)\r\n        at org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:145)\r\n        at org.jboss.resteasy.reactive.server.vertx.VertxResteasyReactiveRequestContext$1$1.handle(VertxResteasyReactiveRequestContext.java:78)\r\n        at org.jboss.resteasy.reactive.server.vertx.VertxResteasyReactiveRequestContext$1$1.handle(VertxResteasyReactiveRequestContext.java:75)\r\n        at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:264)\r\n        at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:246)\r\n        at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\n```\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31818/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31818/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
