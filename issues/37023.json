{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37023",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37023/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37023/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37023/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/37023",
  "id": 1988830610,
  "node_id": "I_kwDOCFbutM52iyWS",
  "number": 37023,
  "title": "Unable to invoke HTTP requests using RESTEasy Reactive Client from a Kotlin project",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346625,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjU=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/invalid",
      "name": "triage/invalid",
      "color": "e4e669",
      "default": false,
      "description": "This doesn't seem right"
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2023-11-11T08:14:51Z",
  "updated_at": "2023-11-12T11:41:27Z",
  "closed_at": "2023-11-11T11:08:06Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI tried to instantiate and use the RESTEasy Reactive client as described in this guide ([https://quarkus.io/guides/rest-client](https://quarkus.io/guides/rest-client)) but from a Kotlin project instead. It works just fine for Java project, but when invoked from a Kotlin context it throws an internal server error like: jakarta.ws.rs.ProcessingException: EARLY_HINTS\n\n### Expected behavior\n\nHTTP requests are executed with no error\n\n### Actual behavior\n\nIt throws an 500 Internal Server Error when it does an HTTP request.\r\n\r\n```\r\njava.lang.NoSuchFieldError: EARLY_HINTS\r\n\tat io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:838)\r\n\tat io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)\r\n\tat io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)\r\n\tat io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)\r\n\tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:336)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:308)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)\r\n\tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)\r\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:519)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:458)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:280)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\nResulted in: jakarta.ws.rs.ProcessingException: EARLY_HINTS\r\n\tat org.jboss.resteasy.reactive.client.impl.InvocationBuilderImpl.unwrap(InvocationBuilderImpl.java:223)\r\n\tat org.jboss.resteasy.reactive.client.impl.InvocationBuilderImpl.method(InvocationBuilderImpl.java:324)\r\n\tat MyRestClient$$QuarkusRestClientInterface.getSomething(Unknown Source)\r\n```\n\n### How to Reproduce?\n\nCreate REST client:\r\n\r\n```kotlin\r\n@Path(\"/api\")\r\n@RegisterRestClient(configKey = \"api\")\r\ninterface MyRestClient {\r\n\r\n    @GET\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    fun getSomething(): String\r\n}\r\n```\r\n\r\nInject the RestClient and use it:\r\n\r\n```kotlin\r\n@Inject\r\n@field: RestClient\r\nlateinit var myRestClient: MyRestClient\r\n\r\n@GET\r\nfun test(): String {\r\n    return myRestClient.getSomething() // here it throws the error\r\n}\r\n```\r\napplication.properties\r\n\r\n```text\r\nquarkus.rest-client.api.url=<any_server_url; including localhost; http or https>\r\nquarkus.rest-client.api.scope=jakarta.inject.Singleton\r\n```\r\n\n\n### Output of `uname -a` or `ver`\n\n22.3.0 Darwin Kernel Version 22.3.0: Mon Jan 30 20:39:46 PST 2023; root:xnu-8792.81.3~2/RELEASE_ARM64_T6020 arm64\n\n### Output of `java -version`\n\nopenjdk version \"17.0.8.1\" 2023-08-24 OpenJDK Runtime Environment Homebrew (build 17.0.8.1+0) OpenJDK 64-Bit Server VM Homebrew (build 17.0.8.1+0, mixed mode, sharing)\n\n### Quarkus version or git rev\n\nQuarkus 3.5.1\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nGradle 7.6.3 Build time:   2023-10-04 15:59:47 UTC Revision:     1694251d59e0d4752d547e1fd5b5020b798a7e71  Kotlin:       1.7.10 Groovy:       3.0.13 Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021 JVM:          17.0.8.1 (Homebrew 17.0.8.1+0) OS:           Mac OS X 13.2.1 aarch64\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37023/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37023/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
