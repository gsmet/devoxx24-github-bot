{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23591",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23591/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23591/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23591/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23591",
  "id": 1130698795,
  "node_id": "I_kwDOCFbutM5DZRgr",
  "number": 23591,
  "title": "Using Java and Kotlin mixed (with gradle) ",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1273026591,
      "node_id": "MDU6TGFiZWwxMjczMDI2NTkx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/gradle",
      "name": "area/gradle",
      "color": "0366d6",
      "default": false,
      "description": "Gradle"
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/175",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/175",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/175/labels",
    "id": 7698730,
    "node_id": "MI_kwDOCFbutM4AdXkq",
    "number": 175,
    "title": "2.7.2.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 159,
    "state": "closed",
    "created_at": "2022-02-21T12:59:08Z",
    "updated_at": "2022-05-12T16:40:04Z",
    "due_on": null,
    "closed_at": "2022-02-22T17:21:05Z"
  },
  "comments": 11,
  "created_at": "2022-02-10T19:02:17Z",
  "updated_at": "2022-02-21T16:29:23Z",
  "closed_at": "2022-02-11T19:32:40Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWhen using java code together with kotlin code core feature of quarkus do not work anymore: \r\nWhen adding **ONE** simple java class such as \r\n\r\n```java\r\npackage de;\r\n\r\npublic class Test {\r\n}\r\n\r\n```\r\n\r\nto the java classpath (`src/main/java`) \r\nand using them somewhere in kotlin such as: \r\n\r\n```kotlin\r\n    @Produces\r\n    fun testClass(): Test? {\r\n        return Test()\r\n    }\r\n```\r\n\r\nQuarkus starts but no Entities etc are registered. \r\nBasically all reactive extensions do not work. \r\nRather easy to reproduce by just adding and removing the java class in a simple project with e.g. hibernate reactive and kotlin or reactive messaging \r\n\r\n`build.gradle.kts`\r\n\r\n```gradle\r\nimport org.sonarqube.gradle.SonarQubeTask\r\n\r\nplugins {\r\n    java\r\n    kotlin(\"jvm\") version \"1.6.10\"\r\n    kotlin(\"plugin.allopen\") version \"1.6.10\"\r\n    id(\"io.gitlab.arturbosch.detekt\") version \"1.19.0\"\r\n    id(\"org.jlleitschuh.gradle.ktlint\") version \"10.2.1\"\r\n    id(\"org.sonarqube\").version(\"3.3\")\r\n    id(\"io.quarkus\")\r\n    id(\"jacoco\")\r\n}\r\n\r\nrepositories {\r\n    mavenCentral()\r\n    mavenLocal()\r\n}\r\nsourceSets {\r\n    create(\"intTest\") {\r\n        compileClasspath += sourceSets.main.get().output\r\n        runtimeClasspath += sourceSets.main.get().output\r\n    }\r\n}\r\n\r\nval intTestImplementation by configurations.getting {\r\n    extendsFrom(configurations.implementation.get(), configurations.testImplementation.get())\r\n}\r\n\r\n\r\nconfigurations[\"intTestRuntimeOnly\"].extendsFrom(configurations.runtimeOnly.get())\r\n\r\nval quarkusPlatformGroupId: String by project\r\nval quarkusPlatformArtifactId: String by project\r\nval quarkusPlatformVersion: String by project\r\nval jaxbJakartaVersion = \"2.3.0\"\r\n\r\ndependencies {\r\n    implementation(enforcedPlatform(\"$quarkusPlatformGroupId:$quarkusPlatformArtifactId:$quarkusPlatformVersion\"))\r\n    implementation(\"io.quarkus:quarkus-smallrye-fault-tolerance\")\r\n    implementation(\"io.quarkus:quarkus-smallrye-openapi\")\r\n    implementation(\"io.quarkus:quarkus-resteasy-reactive-jackson\")\r\n    implementation(\"com.fasterxml.jackson.module:jackson-module-kotlin\")\r\n    implementation(\"io.quarkus:quarkus-resteasy-reactive\") { exclude(group = \"javax.xml.bind\") }\r\n    implementation(\"io.quarkus:quarkus-smallrye-health\")\r\n    implementation(\"io.quarkus:quarkus-config-yaml\")\r\n    implementation(\"io.quarkus:quarkus-micrometer\")\r\n\r\n    implementation(\"io.quarkiverse.micrometer.registry:quarkus-micrometer-registry-statsd:2.3.0\")\r\n    implementation(\"io.quarkus:quarkus-hibernate-reactive-panache\")\r\n    implementation(\"io.quarkus:quarkus-smallrye-reactive-messaging-rabbitmq\")\r\n    implementation(\"io.quarkus:quarkus-kotlin\")\r\n    implementation(\"io.quarkus:quarkus-reactive-pg-client\")\r\n    implementation(\"org.jetbrains.kotlin:kotlin-stdlib-jdk8\")\r\n    implementation(\"io.quarkus:quarkus-jaxb\")\r\n\r\n\r\n\r\n    implementation(\"io.quarkus:quarkus-arc\")\r\n    // additional libs\r\n    implementation(\"io.github.microutils:kotlin-logging-jvm:2.1.21\")\r\n    implementation(\"com.github.ben-manes.caffeine:caffeine:3.0.5\")\r\n    implementation(\"org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.6.0\")\r\n    implementation(\"org.eclipse.microprofile.metrics:microprofile-metrics-api\")\r\n    testImplementation(\"io.quarkus:quarkus-junit5\")\r\n    testImplementation(\"io.rest-assured:rest-assured\")\r\n    testImplementation(\"io.quarkiverse.mockk:quarkus-junit5-mockk:1.0.1\")\r\n    testImplementation(\"com.willowtreeapps.assertk:assertk-jvm:0.25\")\r\n    testImplementation(\"io.quarkus:quarkus-jacoco\")\r\n\r\n    intTestImplementation(\"com.github.tomakehurst:wiremock-jre8:2.32.0\")\r\n    intTestImplementation(\"org.testcontainers:testcontainers:1.16.3\")\r\n    intTestImplementation(\"org.testcontainers:junit-jupiter:1.16.3\")\r\n    intTestImplementation(\"org.testcontainers:postgresql:1.16.3\")\r\n    intTestImplementation(\"org.testcontainers:rabbitmq:1.16.3\")\r\n    intTestImplementation(\"io.vertx:vertx-rabbitmq-client:4.2.4\")\r\n}\r\n\r\n\r\n\r\njava {\r\n    sourceCompatibility = JavaVersion.VERSION_11\r\n    targetCompatibility = JavaVersion.VERSION_11\r\n}\r\ntasks.withType<JavaCompile> {\r\n    options.encoding = \"UTF-8\"\r\n    options.compilerArgs.add(\"-parameters\")\r\n}\r\n\r\nallOpen {\r\n    annotation(\"javax.ws.rs.Path\")\r\n    annotation(\"javax.enterprise.context.ApplicationScoped\")\r\n    annotation(\"io.quarkus.test.junit.QuarkusTest\")\r\n}\r\n\r\ntasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {\r\n    kotlinOptions.jvmTarget = JavaVersion.VERSION_11.toString()\r\n    kotlinOptions.javaParameters = true\r\n}\r\n\r\nval integrationTest = task<Test>(\"integrationTest\") {\r\n    description = \"Runs integration tests.\"\r\n    group = \"verification\"\r\n    useJUnitPlatform()\r\n    testClassesDirs = sourceSets[\"intTest\"].output.classesDirs\r\n    classpath = sourceSets[\"intTest\"].runtimeClasspath\r\n    shouldRunAfter(\"test\")\r\n}\r\n\r\ndetekt {\r\n    buildUponDefaultConfig = true // preconfigure defaults\r\n    allRules = false // activate all available (even unstable) rules.\r\n    config = files(\"$projectDir/.config/detekt.yml\")\r\n    // point to your custom config defining rules to run, overwriting default behavior\r\n\r\n    reports {\r\n        html.enabled = true // observe findings in your browser with structure and code snippets\r\n        xml.enabled = false // checkstyle like format mainly for integrations like Jenkins\r\n        txt.enabled = true // similar to the console output, contains issue signature to manually edit baseline files\r\n    }\r\n}\r\n\r\ntasks.withType<Test> {\r\n    finalizedBy(\"jacocoTestReport\")\r\n    useJUnitPlatform()\r\n    extensions.configure(JacocoTaskExtension::class) {\r\n        excludeClassLoaders = listOf(\"*QuarkusClassLoader\")\r\n        setDestinationFile(layout.buildDirectory.file(\"jacoco-quarkus.exec\").get().asFile)\r\n    }\r\n}\r\n\r\ntasks.withType<JacocoReport> {\r\n    dependsOn(\"test\", \"integrationTest\")\r\n\r\n    reports {\r\n        xml.required.set(true)\r\n        html.required.set(true)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\ntasks.check { dependsOn(integrationTest) }\r\n\r\n```\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nAll reactive extensions should work when removing the java code the server starts as expected\r\n\r\n\r\n### Actual behavior\r\n\r\nLog output for with java included: \r\n```\r\n2022-02-10 19:53:31,434 WARN  [io.sma.rea.mes.provider] (Quarkus Main Thread) SRMSG00207: Some components are not connected to either downstream consumers or upstream producers:\r\n        - IncomingConnector{channel:'portfolio-create-queue', attribute:'mp.messaging.incoming.portfolio-create-queue'} has no downstream\r\n        - IncomingConnector{channel:'', attribute:'....'} has no downstream\r\n        - IncomingConnector{channel:'', attribute:'......'} has no downstream\r\n        - IncomingConnector{channel:'', attribute:'mp.messaging.incoming.test'} has no downstream\r\n        - IncomingConnector{channel:'', attribute:'mp.messaging.incoming.'} has no downstream\r\n        - IncomingConnector{channel:'', attribute:'mp.messaging.incoming.test2'} has no downstream\r\n        - IncomingConnector{channel:'', attribute:'mp.messaging.incoming.test3'} has no downstream\r\n        - IncomingConnector{channel:'', attribute:'mp.messaging.incoming.test4'} has no downstream\r\n```\r\n\r\n### How to Reproduce?\r\n\r\n1. Build a project reactive messaging \r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n11\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.7.1\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nGradle 7.3.3\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23591/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23591/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
