{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34579",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34579/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34579/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34579/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34579",
  "id": 1791804528,
  "node_id": "I_kwDOCFbutM5qzMRw",
  "number": 34579,
  "title": "Allow for Global Override of Extension Specific Exception Mappers",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 23,
  "created_at": "2023-07-06T15:41:47Z",
  "updated_at": "2024-07-30T16:18:54Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nCertain extensions may contain their own ExceptionMapper implementations. For instance resteasy-reactive-jackson contains the following [mapper for MismatchedInputExceptions](https://github.com/quarkusio/quarkus/blob/ebee0a4b66d1b4dba9c51165e78d22fbf3b90d3e/extensions/resteasy-reactive/quarkus-resteasy-reactive-jackson/runtime/src/main/java/io/quarkus/resteasy/reactive/jackson/runtime/mappers/DefaultMismatchedInputException.java).\r\n\r\nSome of my users have grown accustomed to a standardized payload when an exception is thrown from some of my RESTful services. For the most part I map exceptions using a universal exception mapper that handles Throwable.\r\n\r\nIn instances where a standardized exception response payload is requested it would be nice to be able to override provided mappers with more generic application specific mappers.\r\n\r\n### Implementation ideas\r\n\r\nException mapping priority could be calculated differently such that higher priority mappers take precedence over exact class matches. In this way a more generic Throwable mapper could take precedence over a more specific MismatchedInputMapper.\r\n\r\nThis could be a feature flag:\r\n(Global config)\r\n`quarkus.exceptions.mapping-strategy= one of (PRIORITY_FIRST, CLASS_HIERARCHY_FIRST)`\r\n\r\nAnd this feature could be domain specific as well:\r\n(Domain specific)\r\n`quarkus.exceptions.\"com.example\".mapping-strategy= one of (PRIORITY_FIRST, CLASS_HIERARCHY_FIRST)`",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34579/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34579/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
