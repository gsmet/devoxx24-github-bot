{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40288",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40288/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40288/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40288/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/40288",
  "id": 2264267987,
  "node_id": "I_kwDOCFbutM6G9fzT",
  "number": 40288,
  "title": "Error handling doesn't work for streaming Response.ok(InputStream) server responses",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2024-04-25T18:43:44Z",
  "updated_at": "2024-09-02T10:44:33Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nThe provided InputStream can always throw an IOException or other Errors/Exceptions . In case an error occurs the listening client needs to differentiate if the invocation was successful or not. In the current implementation the stream is closed gracefully for non-error and error cases.\n\n### Expected behavior\n\nIn case of an error the stream must be closed non-gracefully, e.g. for HTTP 1.1 closing the connection without sending the zero length chunk. For HTTP 2 a frame with an appropriate error should be send.\n\n### Actual behavior\n\nI case of an error for both HTTP 1.1 and HTTP 2 the client will successfully receive a partial response, because during reading from the InputStream the error is treated the same as an \"\"end of file\".\n\n### How to Reproduce?\n\nThe reproducer can be found here:\r\nhttps://github.com/kottmann/rest-streaming-reproducer\r\n\r\nAfter starting it with mvn quarkus:dev instructions are printed to the console.\r\n\r\nThe particular error can then be reproduced with a simulated RuntimeException or IOException. The desired behavior can be observed by just closing the connection.\n\n### Output of `uname -a` or `ver`\n\nLinux fedora.fritz.box 6.8.7-200.fc39.x86_64 #1 SMP PREEMPT_DYNAMIC Wed Apr 17 19:35:11 UTC 2024 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"21.0.2\" 2024-01-16 OpenJDK Runtime Environment (build 21.0.2+13-58) OpenJDK 64-Bit Server VM (build 21.0.2+13-58, mixed mode, sharing)\n\n### Quarkus version or git rev\n\n3.9.3, 3.9.4\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.9.1 (Red Hat 3.9.1-3\n\n### Additional information\n\nI traced the copy of the stream down to org.jboss.resteasy.reactive.common.providers.serialisers.InputStreamMessageBodyHandler.writeTo. In this method the stream is copied via InputStream.transferTo, there is no catch-block, only a finally, in which both streams are closed independently of successful or non-successful completion of transferTo.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40288/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40288/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
