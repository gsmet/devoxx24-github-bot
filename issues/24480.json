{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24480",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24480/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24480/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24480/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24480",
  "id": 1176989118,
  "node_id": "I_kwDOCFbutM5GJ22-",
  "number": 24480,
  "title": "[CDI] Support @Primary like spring @Primary",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 985346625,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjU=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/invalid",
      "name": "triage/invalid",
      "color": "e4e669",
      "default": false,
      "description": "This doesn't seem right"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    },
    {
      "id": 1552233747,
      "node_id": "MDU6TGFiZWwxNTUyMjMzNzQ3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/spring",
      "name": "area/spring",
      "color": "0366d6",
      "default": false,
      "description": "Issues relating to the Spring integration"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2022-03-22T16:02:09Z",
  "updated_at": "2022-03-22T20:36:54Z",
  "closed_at": "2022-03-22T16:33:01Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\n```java\r\n\r\nclass ServiceClient {\r\n    private final Instance<Service> service;\r\n    @Inject\r\n    public ServiceClient(Instance<Service> service) {\r\n        this.service = service;\r\n    }\r\n    \r\n    public void call(){\r\n//        we need get ServiceDispatcher instance only\r\n        service.get().someMethod(\"some value\");\r\n    }\r\n}\r\n\r\n\r\ninterface Service {\r\n    void someMethod(String someValue);\r\n}\r\n\r\n@Primary\r\n@ApplicationScoped\r\nclass ServiceDispatcher implements Service{\r\n    private final Instance<Service> services;\r\n    \r\n    @Inject\r\n    public ServiceDispatcher(Instance<Service> services) {\r\n        this.services = services;\r\n    }\r\n\r\n    @Override\r\n    public void someMethod(String someValue) {\r\n//        check args or env to find one service call it\r\n    }\r\n}\r\n\r\n@ApplicationScoped\r\nclass ServiceA implements Service{\r\n\r\n    @Override\r\n    public void someMethod(String someValue) {\r\n        // do something         \r\n    }\r\n}\r\n\r\n\r\n@ApplicationScoped\r\nclass ServiceB implements Service{\r\n\r\n    @Override\r\n    public void someMethod(String someValue) {\r\n        // do something\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n### Implementation ideas\r\n\r\nhttps://www.baeldung.com/spring-primary",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24480/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24480/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
