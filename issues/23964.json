{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23964",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23964/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23964/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23964/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23964",
  "id": 1150273025,
  "node_id": "I_kwDOCFbutM5Ej8YB",
  "number": 23964,
  "title": "Kafka SSL Native test on FIPS enforcing system: sun.security.pkcs11.SunPKCS11 on image heap",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1658790125,
      "node_id": "MDU6TGFiZWwxNjU4NzkwMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kafka",
      "name": "area/kafka",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2260340367,
      "node_id": "MDU6TGFiZWwyMjYwMzQwMzY3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/mandrel",
      "name": "area/mandrel",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3866841773,
      "node_id": "LA_kwDOCFbutM7me1Kt",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/securepipeline",
      "name": "area/securepipeline",
      "color": "0366d6",
      "default": false,
      "description": "issues related to ensure Quarkus can be used in a secure pipeline setups like FIPS or similar"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 12,
  "created_at": "2022-02-25T10:14:10Z",
  "updated_at": "2023-06-20T08:59:55Z",
  "closed_at": "2022-09-28T12:05:35Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nRunning with a FIPS aware HotSpot on a FIPS enforcing system, the Kafka SSL test passes just fine:\r\n```\r\n[INFO] Quarkus - Integration Tests - Kafka SSL ............ SUCCESS [  2.338 s]\r\n```\r\nAttempt at running it in Native fails though:\r\n```\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Running Quarkus native-image plugin on native-image 21.3.1.0-Final Mandrel Distribution (Java Version 11.0.14.1+1-LTS)\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] /home/karm/fips-mandrel-java11-21.3.1.0-Final/bin/native-image -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=3 -J-Duser.language=en -J-Duser.country=US -J-Dfile.encoding=UTF-8 -H:-ParseOnce -J--add-exports=java.security.jgss/sun.security.krb5=ALL-UNNAMED -J--add-opens=java.base/java.text=ALL-UNNAMED -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy\\$BySpaceAndTime -H:+JNI -H:+AllowFoldMethods -J-Djava.awt.headless=true -H:FallbackThreshold=0 -H:+ReportExceptionStackTraces -H:-AddAllCharsets -H:EnableURLProtocols=http -H:NativeLinkerOption=-no-pie -H:-UseServiceLoaderFeature -H:+StackTrace -H:AdditionalSecurityProviders=com.sun.security.sasl.Provider,org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientProvider,org.apache.kafka.common.security.scram.internals.ScramSaslClientProvider quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner -jar quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner.jar\r\n[quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner:38119]    classlist:   3,552.37 ms,  0.96 GB\r\n[quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner:38119]        (cap):     590.14 ms,  1.18 GB\r\n[quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner:38119]        setup:   2,681.96 ms,  1.18 GB\r\n14:13:42,005 INFO  [org.jbo.threads] JBoss Threads version 3.4.2.Final\r\n[quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner:38119]     (clinit):     818.61 ms,  3.98 GB\r\n[quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner:38119]   (typeflow):   4,891.22 ms,  3.98 GB\r\n[quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner:38119]    (objects):  41,738.06 ms,  3.98 GB\r\n[quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner:38119]   (features):   2,062.13 ms,  3.98 GB\r\n[quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner:38119]     analysis:  51,434.72 ms,  3.98 GB\r\nError: No instances of sun.security.pkcs11.SunPKCS11 are allowed in the image heap as this class should be initialized at image runtime. To see how this object got instantiated use --trace-object-instantiation=sun.security.pkcs11.SunPKCS11.\r\nDetailed message:\r\nTrace: Object was reached by \r\n\treading field java.security.Provider$Service.provider of\r\n\t\tconstant sun.security.pkcs11.SunPKCS11$P11Service@62a54948 reached by \r\n\treading field sun.security.jca.ProviderList$ServiceList.firstService of\r\n\t\tconstant sun.security.jca.ProviderList$ServiceList@3dc4f539 reached by \r\n\treading field sun.security.jca.ProviderList$ServiceList$1.this$1 of\r\n\t\tconstant sun.security.jca.ProviderList$ServiceList$1@5b3f6188 reached by \r\n\treading field java.security.KeyFactory.serviceIterator of\r\n\t\tconstant java.security.KeyFactory@56c281df reached by \r\n\tindexing into array\r\n\t\tconstant java.security.KeyFactory[]@49b9d1aa reached by \r\n\treading field java.util.Arrays$ArrayList.a of\r\n\t\tconstant java.util.Arrays$ArrayList@2eb5d4ae reached by \r\n\tscanning method org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.privateKey(DefaultSslEngineFactory.java:522)\r\nCall path from entry point to org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.privateKey(String, char[]): \r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.privateKey(DefaultSslEngineFactory.java:501)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.createKeyStoreFromPem(DefaultSslEngineFactory.java:462)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.<init>(DefaultSslEngineFactory.java:435)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory.createKeystore(DefaultSslEngineFactory.java:284)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory.configure(DefaultSslEngineFactory.java:161)\r\n\tat org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.getAssignorInstances(ConsumerPartitionAssignor.java:287)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:769)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:664)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:645)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:625)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint.createConsumer(SslKafkaEndpoint.java:63)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint.create(SslKafkaEndpoint.java:36)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint_Bean.create(Unknown Source)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint_Bean.create(Unknown Source)\r\n\tat io.quarkus.arc.impl.RequestContext.getIfActive(RequestContext.java:70)\r\n\tat io.quarkus.arc.impl.RequestContext.get(RequestContext.java:78)\r\n\tat io.quarkus.micrometer.runtime.binder.kafka.KafkaEventObserver_Observer_onStop_a7d706cbdf99711cb5dda67189ced7f36529b6b8.notify(Unknown Source)\r\n\tat io.quarkus.arc.impl.EventImpl$DeferredEventNotification.run(EventImpl.java:460)\r\n\tat io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics$$Lambda$1720/0x00000007c1a9e440.accept(Unknown Source)\r\n\tat java.base@11.0.14.1/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST_ArrayList_forEach_5467a6ce4be9f47657a3fc17ababe734349fec61(generated:0)\r\n\r\ncom.oracle.svm.core.util.UserError$UserException: No instances of sun.security.pkcs11.SunPKCS11 are allowed in the image heap as this class should be initialized at image runtime. To see how this object got instantiated use --trace-object-instantiation=sun.security.pkcs11.SunPKCS11.\r\nDetailed message:\r\nTrace: Object was reached by \r\n\treading field java.security.Provider$Service.provider of\r\n\t\tconstant sun.security.pkcs11.SunPKCS11$P11Service@62a54948 reached by \r\n\treading field sun.security.jca.ProviderList$ServiceList.firstService of\r\n\t\tconstant sun.security.jca.ProviderList$ServiceList@3dc4f539 reached by \r\n\treading field sun.security.jca.ProviderList$ServiceList$1.this$1 of\r\n\t\tconstant sun.security.jca.ProviderList$ServiceList$1@5b3f6188 reached by \r\n\treading field java.security.KeyFactory.serviceIterator of\r\n\t\tconstant java.security.KeyFactory@56c281df reached by \r\n\tindexing into array\r\n\t\tconstant java.security.KeyFactory[]@49b9d1aa reached by \r\n\treading field java.util.Arrays$ArrayList.a of\r\n\t\tconstant java.util.Arrays$ArrayList@2eb5d4ae reached by \r\n\tscanning method org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.privateKey(DefaultSslEngineFactory.java:522)\r\nCall path from entry point to org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.privateKey(String, char[]): \r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.privateKey(DefaultSslEngineFactory.java:501)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.createKeyStoreFromPem(DefaultSslEngineFactory.java:462)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.<init>(DefaultSslEngineFactory.java:435)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory.createKeystore(DefaultSslEngineFactory.java:284)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory.configure(DefaultSslEngineFactory.java:161)\r\n\tat org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.getAssignorInstances(ConsumerPartitionAssignor.java:287)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:769)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:664)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:645)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:625)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint.createConsumer(SslKafkaEndpoint.java:63)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint.create(SslKafkaEndpoint.java:36)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint_Bean.create(Unknown Source)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint_Bean.create(Unknown Source)\r\n\tat io.quarkus.arc.impl.RequestContext.getIfActive(RequestContext.java:70)\r\n\tat io.quarkus.arc.impl.RequestContext.get(RequestContext.java:78)\r\n\tat io.quarkus.micrometer.runtime.binder.kafka.KafkaEventObserver_Observer_onStop_a7d706cbdf99711cb5dda67189ced7f36529b6b8.notify(Unknown Source)\r\n\tat io.quarkus.arc.impl.EventImpl$DeferredEventNotification.run(EventImpl.java:460)\r\n\tat io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics$$Lambda$1720/0x00000007c1a9e440.accept(Unknown Source)\r\n\tat java.base@11.0.14.1/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST_ArrayList_forEach_5467a6ce4be9f47657a3fc17ababe734349fec61(generated:0)\r\n\r\n\tat com.oracle.svm.core.util.UserError.abort(UserError.java:87)\r\n\tat com.oracle.svm.hosted.FallbackFeature.reportAsFallback(FallbackFeature.java:233)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:759)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:529)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:488)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:403)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:569)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:122)\r\n\tat com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus.main(NativeImageGeneratorRunner.java:599)\r\nCaused by: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: No instances of sun.security.pkcs11.SunPKCS11 are allowed in the image heap as this class should be initialized at image runtime. To see how this object got instantiated use --trace-object-instantiation=sun.security.pkcs11.SunPKCS11.\r\nDetailed message:\r\nTrace: Object was reached by \r\n\treading field java.security.Provider$Service.provider of\r\n\t\tconstant sun.security.pkcs11.SunPKCS11$P11Service@62a54948 reached by \r\n\treading field sun.security.jca.ProviderList$ServiceList.firstService of\r\n\t\tconstant sun.security.jca.ProviderList$ServiceList@3dc4f539 reached by \r\n\treading field sun.security.jca.ProviderList$ServiceList$1.this$1 of\r\n\t\tconstant sun.security.jca.ProviderList$ServiceList$1@5b3f6188 reached by \r\n\treading field java.security.KeyFactory.serviceIterator of\r\n\t\tconstant java.security.KeyFactory@56c281df reached by \r\n\tindexing into array\r\n\t\tconstant java.security.KeyFactory[]@49b9d1aa reached by \r\n\treading field java.util.Arrays$ArrayList.a of\r\n\t\tconstant java.util.Arrays$ArrayList@2eb5d4ae reached by \r\n\tscanning method org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.privateKey(DefaultSslEngineFactory.java:522)\r\nCall path from entry point to org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.privateKey(String, char[]): \r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.privateKey(DefaultSslEngineFactory.java:501)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.createKeyStoreFromPem(DefaultSslEngineFactory.java:462)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory$PemStore.<init>(DefaultSslEngineFactory.java:435)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory.createKeystore(DefaultSslEngineFactory.java:284)\r\n\tat org.apache.kafka.common.security.ssl.DefaultSslEngineFactory.configure(DefaultSslEngineFactory.java:161)\r\n\tat org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.getAssignorInstances(ConsumerPartitionAssignor.java:287)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:769)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:664)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:645)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:625)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint.createConsumer(SslKafkaEndpoint.java:63)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint.create(SslKafkaEndpoint.java:36)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint_Bean.create(Unknown Source)\r\n\tat io.quarkus.it.kafka.ssl.SslKafkaEndpoint_Bean.create(Unknown Source)\r\n\tat io.quarkus.arc.impl.RequestContext.getIfActive(RequestContext.java:70)\r\n\tat io.quarkus.arc.impl.RequestContext.get(RequestContext.java:78)\r\n\tat io.quarkus.micrometer.runtime.binder.kafka.KafkaEventObserver_Observer_onStop_a7d706cbdf99711cb5dda67189ced7f36529b6b8.notify(Unknown Source)\r\n\tat io.quarkus.arc.impl.EventImpl$DeferredEventNotification.run(EventImpl.java:460)\r\n\tat io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics$$Lambda$1720/0x00000007c1a9e440.accept(Unknown Source)\r\n\tat java.base@11.0.14.1/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VA_LIST_ArrayList_forEach_5467a6ce4be9f47657a3fc17ababe734349fec61(generated:0)\r\n\r\n\tat com.oracle.graal.pointsto.constraints.UnsupportedFeatures.report(UnsupportedFeatures.java:126)\r\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:756)\r\n\t... 6 more\r\n[quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner:38119]      [total]:  57,975.38 ms,  3.98 GB\r\n# Printing build artifacts to: /home/karm/quarkus/integration-tests/kafka-ssl/target/quarkus-integration-test-kafka-ssl-999-SNAPSHOT-native-image-source-jar/quarkus-integration-test-kafka-ssl-999-SNAPSHOT-runner.build_artifacts.txt\r\n```\n\n### Expected behavior\n\nPasses both for HotSpot and Native.\n\n### Actual behavior\n\nNative fails.\n\n### How to Reproduce?\n\nOn a FIPS enforcing system, using FIPS aware native-image:\r\n\r\n```\r\n./mvnw clean install -Dquickly -pl '!devtools/gradle,!devtools/gradle/gradle-model,!devtools/gradle/gradle-extension-plugin,!devtools/gradle/gradle-application-plugin,!integration-tests/gradle'\r\n./mvnw verify -f integration-tests/pom.xml --fail-at-end --batch-mode -Dno-format -DfailIfNoTests=false -Dnative -pl kafka-ssl\r\n```\n\n### Output of `uname -a` or `ver`\n\nLinux rhel9fips 5.14.0-63.el9.x86_64\n\n### Output of `java -version`\n\nRed Hat build of OpenJDK 64-Bit Server VM 18.9 (build 11.0.14.1+1-LTS, mixed mode)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n95cc838f\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23964/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23964/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
