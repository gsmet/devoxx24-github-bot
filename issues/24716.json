{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24716",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24716/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24716/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24716/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24716",
  "id": 1190920007,
  "node_id": "I_kwDOCFbutM5G-_9H",
  "number": 24716,
  "title": "\"ObjectIdInput\"  must define one or more fields - Quarkus GraphQL - MongoDB",
  "labels": [
    {
      "id": 985346626,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjY=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/question",
      "name": "kind/question",
      "color": "d876e3",
      "default": false,
      "description": "Further information is requested"
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1470336085,
      "node_id": "MDU6TGFiZWwxNDcwMzM2MDg1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/mongodb",
      "name": "area/mongodb",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2234509819,
      "node_id": "MDU6TGFiZWwyMjM0NTA5ODE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/graphql",
      "name": "area/graphql",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 21,
  "created_at": "2022-04-03T12:40:51Z",
  "updated_at": "2022-05-05T06:43:53Z",
  "closed_at": "2022-04-07T02:52:15Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nHi Team,\r\nCan not serialize Graphql and ObjectID for Mutation . Need a fix to do conversion from ObjectId to String may be via custom Type registration. \n\n### Expected behavior\n\nObjectID should be allowed as string in graphql and implicitly converted to ObjectId in the resolver method.\r\n@AdaptToScalar(Scalar.String.class) Should do implicit conversion for ObjectIdInput creation in smallrye graphQL.\r\n\r\n`@MongoEntity(collection = \"demo\")\r\npublic class Demo extends ReactivePanacheMongoEntityBase {\r\n\r\n    @AdaptToScalar(Scalar.String.class)\r\n    public ObjectId id;\r\n\r\n    @NotBlank(message = \"Name must not be blank\")\r\n    public String name;\r\n    @NotBlank(message = \"Short name must not be blank\")\r\n    public String shortName;\r\n    @NotBlank(message = \"Grade must not be blank\")\r\n    public Integer grade;\r\n}`\r\n\r\n\r\n\r\n`\r\n@Mutation\r\n    public Uni<Demo> saveDemo(Demo demo){\r\n        return demo.persistOrUpdate();\r\n    }\r\n`\r\n\r\n\n\n### Actual behavior\n\n`\"ObjectIdInput\" must define one or more fields.\r\n    at graphql.schema.GraphQLSchema$Builder.validateSchema(GraphQLSchema.java:828)\r\n    at graphql.schema.GraphQLSchema$Builder.buildImpl(GraphQLSchema.java:822)\r\n    at graphql.schema.GraphQLSchema$Builder.build(GraphQLSchema.java:787)\r\n    at io.smallrye.graphql.bootstrap.Bootstrap.generateGraphQLSchema(Bootstrap.java:186)\r\n    at io.smallrye.graphql.bootstrap.Bootstrap.bootstrap(Bootstrap.java:113)\r\n    at io.smallrye.graphql.bootstrap.Bootstrap.bootstrap(Bootstrap.java:107)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer.initialize(GraphQLProducer.java:34)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_Subclass.initialize$$superforward1(Unknown Source)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_Subclass$$function$$2.apply(Unknown Source)\r\n    at io.quarkus.arc.impl.AroundInvokeInvocationContext.proceed(AroundInvokeInvocationContext.java:54)\r\n    at io.quarkus.arc.runtime.devconsole.InvocationInterceptor.proceed(InvocationInterceptor.java:62)\r\n    at io.quarkus.arc.runtime.devconsole.InvocationInterceptor.monitor(InvocationInterceptor.java:51)\r\n    at io.quarkus.arc.runtime.devconsole.InvocationInterceptor_Bean.intercept(Unknown Source)\r\n    at io.quarkus.arc.impl.InterceptorInvocation.invoke(InterceptorInvocation.java:41)\r\n    at io.quarkus.arc.impl.AroundInvokeInvocationContext.perform(AroundInvokeInvocationContext.java:41)\r\n    at io.quarkus.arc.impl.InvocationContexts.performAroundInvoke(InvocationContexts.java:32)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_Subclass.initialize(Unknown Source)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer.initialize(GraphQLProducer.java:29)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_Subclass.initialize$$superforward1(Unknown Source)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_Subclass$$function$$4.apply(Unknown Source)\r\n    at io.quarkus.arc.impl.AroundInvokeInvocationContext.proceed(AroundInvokeInvocationContext.java:54)\r\n    at io.quarkus.arc.runtime.devconsole.InvocationInterceptor.proceed(InvocationInterceptor.java:62)\r\n    at io.quarkus.arc.runtime.devconsole.InvocationInterceptor.monitor(InvocationInterceptor.java:51)\r\n    at io.quarkus.arc.runtime.devconsole.InvocationInterceptor_Bean.intercept(Unknown Source)\r\n    at io.quarkus.arc.impl.InterceptorInvocation.invoke(InterceptorInvocation.java:41)\r\n    at io.quarkus.arc.impl.AroundInvokeInvocationContext.perform(AroundInvokeInvocationContext.java:41)\r\n    at io.quarkus.arc.impl.InvocationContexts.performAroundInvoke(InvocationContexts.java:32)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_Subclass.initialize(Unknown Source)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer.initialize(GraphQLProducer.java:24)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_Subclass.initialize$$superforward1(Unknown Source)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_Subclass$$function$$3.apply(Unknown Source)\r\n    at io.quarkus.arc.impl.AroundInvokeInvocationContext.proceed(AroundInvokeInvocationContext.java:54)\r\n    at io.quarkus.arc.runtime.devconsole.InvocationInterceptor.proceed(InvocationInterceptor.java:62)\r\n    at io.quarkus.arc.runtime.devconsole.InvocationInterceptor.monitor(InvocationInterceptor.java:51)\r\n    at io.quarkus.arc.runtime.devconsole.InvocationInterceptor_Bean.intercept(Unknown Source)\r\n    at io.quarkus.arc.impl.InterceptorInvocation.invoke(InterceptorInvocation.java:41)\r\n    at io.quarkus.arc.impl.AroundInvokeInvocationContext.perform(AroundInvokeInvocationContext.java:41)\r\n    at io.quarkus.arc.impl.InvocationContexts.performAroundInvoke(InvocationContexts.java:32)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_Subclass.initialize(Unknown Source)\r\n    at io.smallrye.graphql.cdi.producer.GraphQLProducer_ClientProxy.initialize(Unknown Source)\r\n    at io.quarkus.smallrye.graphql.runtime.SmallRyeGraphQLRecorder.createExecutionService(SmallRyeGraphQLRecorder.java:31)\r\n    at io.quarkus.deployment.steps.SmallRyeGraphQLProcessor$buildExecutionService259019385.deploy_1(Unknown Source)\r\n    at io.quarkus.deployment.steps.SmallRyeGraphQLProcessor$buildExecutionService259019385.deploy(Unknown Source)\r\n    at io.quarkus.runner.ApplicationImpl.<clinit>(Unknown Source)\r\n    at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n    at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n    at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n    at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n    at java.base/java.lang.reflect.ReflectAccess.newInstance(ReflectAccess.java:128)\r\n    at java.base/jdk.internal.reflect.ReflectionFactory.newInstance(ReflectionFactory.java:347)\r\n    at java.base/java.lang.Class.newInstance(Class.java:645)\r\n    at io.quarkus.runtime.Quarkus.run(Quarkus.java:66)\r\n    at io.quarkus.runtime.Quarkus.run(Quarkus.java:41)\r\n    at io.quarkus.runtime.Quarkus.run(Quarkus.java:120)\r\n    at io.quarkus.runner.GeneratedMain.main(Unknown Source)\r\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n    at java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n    at io.quarkus.runner.bootstrap.StartupActionImpl$1.run(StartupActionImpl.java:103)\r\n    at java.base/java.lang.Thread.run(Thread.java:833)`\n\n### How to Reproduce?\n\nCreate a simple quarkus app with mongodb support and graphql extension.\r\ncreate a ObjectId for self reference in the code.\r\nExpose as graphql api and the app will fail.\n\n### Output of `uname -a` or `ver`\n\nDarwin Debabratas-MacBook-Pro.local 21.3.0 Darwin Kernel Version 21.3.0: Wed Jan  5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_X86_64 x86_64\n\n### Output of `java -version`\n\nopenjdk version \"17.0.2\" 2022-01-18 OpenJDK Runtime Environment GraalVM CE 22.0.0.2 (build 17.0.2+8-jvmci-22.0-b05) OpenJDK 64-Bit Server VM GraalVM CE 22.0.0.2 (build 17.0.2+8-jvmci-22.0-b05, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.7.5.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n3.8.5\n\n### Additional information\n\nneed mongodb and graphql with ObjectId support.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24716/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24716/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
