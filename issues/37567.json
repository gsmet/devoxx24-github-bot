{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37567",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37567/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37567/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37567/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/37567",
  "id": 2028860363,
  "node_id": "I_kwDOCFbutM547fPL",
  "number": 37567,
  "title": "ScheduledExecution.getTrigger().getPreviousFireTime() returns the same time as ScheduledExecution.getFireTime()",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1321590926,
      "node_id": "MDU6TGFiZWwxMzIxNTkwOTI2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/scheduler",
      "name": "area/scheduler",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/288",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/288",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/288/labels",
    "id": 10189838,
    "node_id": "MI_kwDOCFbutM4Am3wO",
    "number": 288,
    "title": "3.7.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 432,
    "state": "closed",
    "created_at": "2023-11-15T08:06:53Z",
    "updated_at": "2024-05-17T12:27:49Z",
    "due_on": null,
    "closed_at": "2024-01-17T13:52:08Z"
  },
  "comments": 4,
  "created_at": "2023-12-06T15:49:03Z",
  "updated_at": "2023-12-11T09:58:01Z",
  "closed_at": "2023-12-11T09:57:56Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nThe javaoc for `Trigger.getPreviousFireTime()` says:\r\n\r\n> Returns: the previous time at which the trigger fired, or null if it has not fired yet\r\n\r\nHowever when run using Quartz and cron-expressions it returns the same time as `ScheduledExecution.getFireTime()` (modulo milliseconds)\n\n### Expected behavior\n\nGiven\r\n\r\n```java\r\n    @Scheduled(cron = \"0 0/1 * ? * *\", identity = \"task-job\")\r\n    void schedule(ScheduledExecution execution) {\r\n        execution.getTrigger().getPreviousFireTime();\r\n    }\r\n```\r\n\r\nWhen reading the Javadoc for `io.quarkus.scheduler.Scheduled`, `io.quarkus.scheduler.ScheduledExecution` and `io.quarkus.scheduler.Trigger` I would assume that the first time my `@Scheduled` annotated method is executed at time _T_, that the value of `SceduledExecution.getTriggger().getPreviousFireTime()` is `null`. And the second time it is executed at time _T+1_ that the value is _T_.\n\n### Actual behavior\n\nThat the value of `execution.getTrigger().getPreviousFireTime();` at time _T_ is _T_ and at _T+1_ the value is _T+1_ \r\n\r\nIf I'm misinterpreting the javadoc it is unexpected that the `ScheduledExecution` and `Trigger` interfaces have different methods that returns the same value.\n\n### How to Reproduce?\n\n1. clone https://github.com/quarkusio/quarkus-quickstarts and cd into quartz-quickstart\r\n2. Modify the `TaskBean.schedule()` method to:\r\n\r\n```java\r\n    @Scheduled(cron = \"0/30 * * ? * *\", identity = \"task-job\")\r\n    void schedule(ScheduledExecution execution) {\r\n        System.out.println(\"firetime         \" + execution.getFireTime());\r\n        System.out.println(\"previousfiretime \" + execution.getTrigger().getPreviousFireTime());\r\n    }\r\n```\r\n\r\n3. run the example\n\n### Output of `uname -a` or `ver`\n\nDarwin DK4N9LVCF.local 21.6.0 Darwin Kernel Version 21.6.0: Wed Oct  4 23:55:28 PDT 2023; root:xnu-8020.240.18.704.15~1/RELEASE_X86_64 x86_64\n\n### Output of `java -version`\n\nopenjdk version \"17.0.5\" 2022-10-18 OpenJDK Runtime Environment Temurin-17.0.5+8 (build 17.0.5+8) OpenJDK 64-Bit Server VM Temurin-17.0.5+8 (build 17.0.5+8, mixed mode, sharing)\n\n### Quarkus version or git rev\n\n3.6.1\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\nAlso tested using MSSQL as database. I get the same result when using quarkus-scheduler, i.e. not quarkus-quartz.\r\n\r\nAm I just mis-interpreting the javadoc? If so, it would make a lot of sense to have a `getPreviousFireTime()` method on `ScheduledExecution` that returned _T-1_ at time _T_.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37567/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37567/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
