{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35284",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35284/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35284/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35284/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35284",
  "id": 1843064721,
  "node_id": "I_kwDOCFbutM5t2u-R",
  "number": 35284,
  "title": "Extension cannot observe the runtime default configuration produced by another extension step",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2023-08-09T11:45:13Z",
  "updated_at": "2023-08-14T07:34:05Z",
  "closed_at": "2023-08-09T19:06:07Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI have an extension with a couple of build steps, the first which produces some runtime default values, and the second which needs to be able to read those (together with the build config defaults)\r\n\r\n```\r\n@BuildStep\r\npublic void step1(BuildProducer<RunTimeConfigurationDefaultBuildItem> defaultConfigProducer) {\r\n  defaultConfigProducer.produce(new RunTimeConfigurationDefaultBuildItem(\"my.prop\", \"my.value\"));\r\n}\r\n\r\n@BuildStep\r\n@Consume(RuntimeConfigSetupCompleteBuildItem.class)\r\npublic void step2() {\r\n  System.err.println(ConfigProvider.getConfig().getConfigValue(\"my.prop\"));\r\n}\r\n```\r\n\r\nFirst issue is that I would expect `step2` to run after `step1` because of the `@Consume(RuntimeConfigSetupCompleteBuildItem.class)` - but during a native build it runs before (it seems OK in JVM mode). \r\n\r\nHowever this is fixed by creating a pseudo build item that extends `EmptyBuildItem` that is produced by `step1` and consumed by `step2`.\r\n\r\nThe bigger issue is that even with that change the `ConfigProvider.getConfig().getConfigValue(\"my.prop\")` still returns no value - I would expect it to see the configuration generated by `step1`. \r\n\r\nOr is my understanding of this wrong?\r\n\r\n### Expected behavior\r\n\r\nI can observe runtime default configuration generated in one step in the configuration of a later step.\r\n\r\nI would also expect in this case not to have to create a pseudo empty build item for ordering because of the dependency on `RuntimeConfigSetupCompleteBuildItem` for `step2`.\r\n\r\n### Actual behavior\r\n\r\n_No response_\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n17.0.7 (Eclipse Adoptium 17.0.7+7)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\nJava version: 17.0.8+7, vendor version: Mandrel-23.0.1.2-Final\r\n\r\n### Quarkus version or git rev\r\n\r\n3.2.3.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nGradle 8.2\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35284/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35284/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
