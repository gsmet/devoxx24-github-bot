{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25914",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25914/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25914/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25914/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25914",
  "id": 1256766566,
  "node_id": "I_kwDOCFbutM5K6Lxm",
  "number": 25914,
  "title": "Postgres reactive configuration doesn't allow for arbitrary parameters on connect string",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2955124662,
      "node_id": "MDU6TGFiZWwyOTU1MTI0NjYy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/reactive-sql-clients",
      "name": "area/reactive-sql-clients",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/183",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/183",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/183/labels",
    "id": 7917759,
    "node_id": "MI_kwDOCFbutM4AeNC_",
    "number": 183,
    "title": "2.10.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 253,
    "state": "closed",
    "created_at": "2022-04-27T08:14:38Z",
    "updated_at": "2023-01-13T10:46:24Z",
    "due_on": null,
    "closed_at": "2022-06-09T16:06:42Z"
  },
  "comments": 16,
  "created_at": "2022-06-01T18:47:51Z",
  "updated_at": "2022-06-06T21:45:44Z",
  "closed_at": "2022-06-06T21:45:40Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI'm trying to use Hibernate Reactive with Panache to connect the [quarkus superheroes `rest-heroes` app](https://github.com/quarkusio/quarkus-super-heroes/tree/main/rest-heroes) to CockroachDB. The app (Quarkus 2.9.2) works fine with Dev Services or a postgres db I stand up on my own.\r\n\r\nI've done a similar thing with the [quarkus superheroes `rest-villains` app](https://github.com/quarkusio/quarkus-super-heroes/tree/main/rest-villains) with JDBC & Hibernate ORM with Panache and everything works fine.\r\n\r\nWhen connecting to the Cockroach DB DBaaS, it is [mandatory that you include an `options=--clister=<cluster_name>` parameter](https://www.cockroachlabs.com/docs/v22.1/connection-parameters#connect-using-a-url), so I tried this configuration in the `application.yml`:\r\n\r\n```yaml\r\nquarkus:\r\n  datasource:\r\n    username: myusername\r\n    password: mypassword\r\n    reactive:\r\n      url: postgresql://free-tier14.aws-us-east-1.cockroachlabs.cloud:26257/defaultdb?sslmode=require&options=--cluster%3Dheroes-db-2463\r\n      postgresql:\r\n        ssl-mode: require\r\n```\r\n\r\n### Expected behavior\r\n\r\nI would expect the `options` connection param to be passed along to the PG driver.\r\n\r\n### Actual behavior\r\n\r\nInstead I get this error:\r\n\r\n```\r\n15:48:28 INFO  [or.hi.re.pr.im.ReactiveIntegrator] (JPA Startup Thread: default-reactive) HR000001: Hibernate Reactive\r\n\r\n15:48:29 WARN  [or.hi.re.pr.se.ReactiveGenerationTarget] (vert.x-eventloop-thread-0) HR000021: DDL command failed [io.vertx.pgclient.PgException: FATAL: codeParamsRoutingFailed: missing cluster identifier (08004)]\r\n15:48:29 WARN  [or.hi.re.pr.se.ReactiveGenerationTarget] (vert.x-eventloop-thread-0) HR000021: DDL command failed [io.vertx.pgclient.PgException: FATAL: codeParamsRoutingFailed: missing cluster identifier (08004)]\r\n```\r\n\r\nThis indicated that the parameter was not included.\r\n\r\nI did this as a test and it works fine:\r\n\r\n```java\r\n@ApplicationScoped\r\npublic class StartupHelper {\r\n  private final Vertx vertx;\r\n\r\n  public StartupHelper(Vertx vertx) {\r\n    this.vertx = vertx;\r\n  }\r\n\r\n  public void config(@Observes StartupEvent startupEvent) {\r\n    Log.infof(\"Inside %s.config\", getClass().getName());\r\n\r\n    var connectOptions = new PgConnectOptions()\r\n      .setPort(26257)\r\n      .setHost(\"free-tier14.aws-us-east-1.cockroachlabs.cloud\")\r\n      .setDatabase(\"defaultdb\")\r\n      .setUser(\"myusername\")\r\n      .setPassword(\"mypassword\")\r\n      .setSslMode(SslMode.REQUIRE)\r\n      .addProperty(\"options\", \"--cluster=heroes-db-2463\");\r\n\r\n    var poolOptions = new PoolOptions()\r\n      .setMaxSize(5);\r\n\r\n    var client = PgPool.client(this.vertx, connectOptions, poolOptions);\r\n\r\n    client.query(\"DROP TABLE IF EXISTS Hero\").execute()\r\n      .onItem().invoke(() -> Log.info(\"Dropped Hero table\"))\r\n      .flatMap(r -> client.query(\"DROP SEQUENCE IF EXISTS hibernate_sequence\").execute()\r\n        .onItem().invoke(() -> Log.info(\"Dropped hibernate_sequence\"))\r\n      )\r\n      .flatMap(r -> client.query(\"CREATE SEQUENCE hibernate_sequence START 1 INCREMENT 1\").execute()\r\n        .onItem().invoke(() -> Log.info(\"Created hibernate_sequence\"))\r\n      )\r\n      .flatMap(r -> client.query(\"CREATE TABLE Hero (id int8 NOT NULL, level int4 NOT NULL, name VARCHAR(50) NOT NULL, otherName VARCHAR(255), picture VARCHAR(255), powers TEXT, PRIMARY KEY (id))\").execute()\r\n        .onItem().invoke(() -> Log.info(\"Created Hero table\"))\r\n      )\r\n      .flatMap(r -> client.query(\"INSERT INTO hero(id, name, otherName, picture, powers, level) VALUES (nextval('hibernate_sequence'), 'Chewbacca', '', 'https://raw.githubusercontent.com/quarkusio/quarkus-super-heroes/characterdata/images/chewbacca--684239239428094811.jpg', 'Super Strength, Agility, Animal Attributes, Jaw Strength, Longevity, Marksmanship, Weapons Master', 30)\").execute()\r\n        .onItem().invoke(() -> Log.info(\"Inserted record into Hero table\"))\r\n      )\r\n      .flatMap(r -> client.query(\"SELECT * FROM hero\").execute()\r\n        .onItem().invoke(ar -> Log.infof(\"Got %d rows\", ar.size()))\r\n      )\r\n      .await().atMost(Duration.ofSeconds(20));\r\n\r\n    client.close();\r\n  }\r\n}\r\n```\r\n\r\nNow the question is - how do I get that `options` parameter to stick in the Quarkus configuration? Is it a problem in the upstream Vert.x pg client? Or is there something we can/should do in Quarkus to solve for this? Maybe adding a config param in `io.quarkus.reactive.pg.client.runtime.DataSourceReactivePostgreSQLConfig` and read that in `io.quarkus.reactive.pg.client.runtime.PgPoolRecorder`?\r\n\r\n### How to Reproduce?\r\n\r\nSteps to reproduce:\r\n\r\n1. You will need a cockroach labs account. I have a DB set up with credentials I can share if you would like. Please ping me privately (I don't want to share publicly).\r\n2. Clone https://github.com/quarkusio/quarkus-super-heroes\r\n3. `cd` into `rest-heroes`\r\n4. Add the following to `src/main/resources/application.yml`:\r\n   ```yaml\r\n   quarkus:  \r\n     datasource:\r\n       username: myusername \r\n       password: mypassword\r\n       reactive:\r\n        url: postgresql://free-tier14.aws-us-east-1.cockroachlabs.cloud:26257/defaultdb?sslmode=require&options=--cluster%3Dheroes-db-2463\r\n        postgresql:\r\n          ssl-mode: require\r\n   ```\r\n5. Run `quarkus dev`\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n```\r\nDarwin edeandrea-m1pro 21.5.0 Darwin Kernel Version 21.5.0: Tue Apr 26 21:08:37 PDT 2022; root:xnu-8020.121.3~4/RELEASE_ARM64_T6000 arm64\r\n```\r\n\r\n### Output of `java -version`\r\n\r\n```\r\nopenjdk version \"17.0.3\" 2022-04-19\r\nOpenJDK Runtime Environment Temurin-17.0.3+7 (build 17.0.3+7)\r\nOpenJDK 64-Bit Server VM Temurin-17.0.3+7 (build 17.0.3+7, mixed mode)\r\n```\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.9.2.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n```\r\nApache Maven 3.8.4 (9b656c72d54e5bacbed989b64718c159fe39b537)\r\nMaven home: /Users/edeandre/.m2/wrapper/dists/apache-maven-3.8.4-bin/52ccbt68d252mdldqsfsn03jlf/apache-maven-3.8.4\r\nJava version: 17.0.3, vendor: Eclipse Adoptium, runtime: /Users/edeandre/.sdkman/candidates/java/17.0.3-tem\r\nDefault locale: en_US, platform encoding: UTF-8\r\nOS name: \"mac os x\", version: \"12.4\", arch: \"aarch64\", family: \"mac\"\r\n```\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25914/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25914/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
