{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36050",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36050/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36050/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36050/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/36050",
  "id": 1905751079,
  "node_id": "I_kwDOCFbutM5xl3Qn",
  "number": 36050,
  "title": "Quarkus 3.3.3 - injecting UserTransaction generates Jandex warnings on startup",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/284",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/284",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/284/labels",
    "id": 10103752,
    "node_id": "MI_kwDOCFbutM4AmivI",
    "number": 284,
    "title": "3.2.8.Final",
    "description": "",
    "creator": {
      "login": "aloubyansky",
      "id": 323379,
      "node_id": "MDQ6VXNlcjMyMzM3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/323379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aloubyansky",
      "html_url": "https://github.com/aloubyansky",
      "followers_url": "https://api.github.com/users/aloubyansky/followers",
      "following_url": "https://api.github.com/users/aloubyansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/aloubyansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aloubyansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aloubyansky/subscriptions",
      "organizations_url": "https://api.github.com/users/aloubyansky/orgs",
      "repos_url": "https://api.github.com/users/aloubyansky/repos",
      "events_url": "https://api.github.com/users/aloubyansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aloubyansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 129,
    "state": "closed",
    "created_at": "2023-10-25T07:58:05Z",
    "updated_at": "2023-11-15T14:06:19Z",
    "due_on": "2023-11-15T08:00:00Z",
    "closed_at": "2023-11-08T14:04:29Z"
  },
  "comments": 0,
  "created_at": "2023-09-20T21:34:24Z",
  "updated_at": "2023-10-31T13:50:54Z",
  "closed_at": "2023-09-21T14:45:56Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI'm upgrading our app from Quarkus 2.7 to Quarkus 3.3.3.\r\n\r\nThe app starts up fine, but we get tons of warnings regarding classes in jakarta.jms similar to this:\r\n\r\n```\r\nFailed to index jakarta.jms.XAConnection: Class does not exist in ClassLoader\r\n...\r\nUnable to properly register the hierarchy of the following classes for reflection as they are not in the Jandex index:\r\n    - io.mashona.logwriting.ArrayStore (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.BytesMessage (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n```\r\n\r\nI've narrowed the problem down to injecting UserTransaction for manual transaction management in a few places.\r\n\r\n```\r\n@Inject\r\nUserTransaction userTransaction;\r\n```\r\n\r\nIt only seems to manifest itself when we have a sub-resource that injects UserTransaction somewhere. If we inject into a root level resource, e.g. GreetingResource I'm not seeing the warnings.\r\n\r\n### Expected behavior\r\n\r\nNo warnings on startup\r\n\r\n### Actual behavior\r\n\r\n```\r\nFailed to index jakarta.jms.XAConnection: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.XASession: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.XAConnectionFactory: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.Connection: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index org.apache.activemq.artemis.core.journal.Journal: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.Session: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.ExceptionListener: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.ConnectionMetaData: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index io.mashona.logwriting.ArrayStore: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.BytesMessage: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.MapMessage: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.Message: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.ObjectMessage: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.StreamMessage: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.TemporaryQueue: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.TemporaryTopic: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.TextMessage: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index jakarta.jms.MessageListener: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\nFailed to index org.apache.activemq.artemis.core.journal.RecordInfo: Class does not exist in ClassLoader QuarkusClassLoader:Deployment Class Loader: DEV@1eb5174b\r\n(build-40) Unable to properly register the hierarchy of the following classes for reflection as they are not in the Jandex index:\r\n    - io.mashona.logwriting.ArrayStore (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.BytesMessage (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.Connection (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.ConnectionMetaData (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.ExceptionListener (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.MapMessage (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.Message (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.MessageListener (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.ObjectMessage (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.Session (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.StreamMessage (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.TemporaryQueue (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.TemporaryTopic (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.TextMessage (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.XAConnection (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.XAConnectionFactory (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - jakarta.jms.XASession (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - org.apache.activemq.artemis.core.journal.Journal (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\n    - org.apache.activemq.artemis.core.journal.RecordInfo (source: ResteasyReactiveProcessor > blah.MyResource[AnotherResource getAnotherResource(java.lang.String aStr)])\r\nConsider adding them to the index either by creating a Jandex index for your dependency via the Maven plugin, an empty META-INF/beans.xml or quarkus.index-dependency properties.\r\n```\r\n\r\n\r\n### How to Reproduce?\r\n\r\nI've attached a simple project here that demonstrates the issue:\r\n\r\n[jandex-transaction-issue.zip](https://github.com/quarkusio/quarkus/files/12677628/jandex-transaction-issue.zip)\r\n\r\nBasic steps to reproduce the whole project.\r\n\r\n1. Generate code-with-quarkus project using Quarkus CLI\r\n2. Modify GreetingResource to return a sub-resource:\r\n\r\n```\r\n@Context\r\nResourceContext resourceContext;\r\n\r\n  @Path(\"/another\")\r\n    public AnotherResource getAnotherResource() {\r\n        return resourceContext.getResource(AnotherResource.class);\r\n    }\r\n```\r\n\r\n3. In the sub-resource, inject UserTransaction. Note: Our `@Transactional` method does not use the UserTransaction. It only needs to be injected to cause issues.\r\n\r\n```\r\n@ApplicationScoped\r\n@Unremovable\r\npublic class AnotherResource {\r\n\r\n    @Inject\r\n    UserTransaction userTransaction;\r\n\r\n    @POST\r\n    @Transactional\r\n    @Path(\"/world\")\r\n    public String hello() {\r\n        return \"Hello from RESTEasy Reactive\";\r\n    }\r\n}\r\n```\r\n\r\n4. Not sure if it's necessary, but in the sample project I added Panache and quarkus-jdbc-mysql. And then finally, I set up some basic hibernate-orm properties in application.properties to connect to the DB. I also needed one entity - otherwise Quarkus does not load Hibernate.\r\n\r\n```\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-hibernate-orm-panache</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-jdbc-mysql</artifactId>\r\n    </dependency>\r\n```\r\n\r\n\r\n**Note:**\r\nIn our real world app, we are injecting UserTransaction in a pure-Java business layer (separate Jar) that we try to keep Quarkus/framework-agnostic. So we'd rather not replace with QuarkusTransaction if possible. But the same problem exists just injecting it into the resource class.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nDarwin Kernel Version 22.3.0\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"17.0.2\" 2022-01-18 LTS\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n3.3.3\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36050/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36050/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
