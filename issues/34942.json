{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34942",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34942/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34942/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34942/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34942",
  "id": 1817297716,
  "node_id": "I_kwDOCFbutM5sUcM0",
  "number": 34942,
  "title": "[Extension Proposal] Git config source",
  "labels": [
    {
      "id": 1553869078,
      "node_id": "MDU6TGFiZWwxNTUzODY5MDc4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/extension-proposal",
      "name": "kind/extension-proposal",
      "color": "abfcbb",
      "default": false,
      "description": "Discuss and Propose new extensions"
    },
    {
      "id": 2388070055,
      "node_id": "MDU6TGFiZWwyMzg4MDcwMDU1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/quarkiverse",
      "name": "area/quarkiverse",
      "color": "a01441",
      "default": false,
      "description": "This issue/PR is part of the Quarkiverse organization"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2023-07-23T21:12:22Z",
  "updated_at": "2023-07-23T21:35:14Z",
  "closed_at": "2023-07-23T21:35:14Z",
  "active_lock_reason": null,
  "body": "### Description\n\nHello\r\n\r\nI would like to propose the subject extension  so that providing additional flexibility while externalizing configurations among runtime environments.\r\n\r\nNamely, a Microprofile config source which is somehow aware of the execution environment, e.g. dev, integration or production.\r\n\r\nSo far, I know 2 major options:\r\n\r\n* a service approach in the style of SpringBoot config server,\r\n* or delegating packaging tools, e.g. helm templates with value files per environment.\r\n\r\nWithin the limits of my knowledge of other options, I find the server approach and the packaging tool approach a sort of workaround: the former because it adds a component to maintain, the latter because it couples configuration and deployment.\r\n\r\nFor this purpose I would like to have an extension which binds an SCM, GIT in this case, to provide an environmental aware config source, namely a config source which can bind different branches/tags of a repository to retrieve versioned property values.\r\n\r\nSuch extension would be configured according the following draft properties:\r\n\r\n* **quarkus.git-config-source.uri** to connect to a git repository, mandatory\r\n* **quarkus.git-config-source.credentials.*** additional properties to be authorized, optional\r\n* **quarkus.git-config-source.tag** branch or tag representing the current execution environment, mandatory\r\n* **quarkus.git-config-source.*-files** comma separated list of property/yaml files to load in the config source, with valuable defaults\r\n\r\nThis extension would leverage the JGit extension already available in the quarkiverse.\r\n \r\nInterested in this extension, please +1 via the emoji/reaction feature of GitHub (top right).\n\n### Repository name\n\nquarkus-git-config-source\n\n### Short description\n\nMicroprofile config source to retrieve values form a git repository\n\n### Repository Homepage URL\n\nhttps://quarkiverse.github.io/quarkiverse-docs/<REPOSITORY_NAME>/dev/\n\n### Repository Topics\n\n- quarkus-extension\r\n- externalized configuration\r\n- cloud\r\n- microprofile config\r\n\n\n### Team Members\n\n- I'm available to maintain this extension\r\n\n\n### Additional context\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34942/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34942/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
