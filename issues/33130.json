{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33130",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33130/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33130/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33130/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33130",
  "id": 1696545509,
  "node_id": "I_kwDOCFbutM5lHzrl",
  "number": 33130,
  "title": "Support Publisher<ByteBuffer>in RESTEasy reactive",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 20,
  "created_at": "2023-05-04T19:02:57Z",
  "updated_at": "2023-06-11T17:20:14Z",
  "closed_at": "2023-06-11T17:20:14Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nI would like to be able to pipe a ` Publisher<ByteBuffer>` into a `RestResponse`.\r\n\r\nGiven a `Uni<Publisher<ByteBuffer>>`, I would like to be able to do \r\n\r\n```java\r\n    @GET\r\n    @Path(\"download/{objectKey}\")\r\n    @Produces(MediaType.APPLICATION_OCTET_STREAM)\r\n    public Uni<RestResponse<Publisher<ByteBuffer>>> downloadFile(String objectKey) {\r\n        return Uni.createFrom().item( (Publisher<ByteBuffer>)getPublisherByteBuffer())\r\n                .onItem()\r\n                .transform(publisher -> ResponseBuilder.ok( (Publisher<ByteBuffer>)publisher)\r\n                        .header(\"Content-Disposition\", \"attachment;filename=\" + objectKey)\r\n                        .header(\"Content-Type\", MediaType.APPLICATION_OCTET_STREAM).build());\r\n    }\r\n```\r\n\r\nI tried to produce `Multi<byte[]>` with \r\n\r\n```java\r\n    @GET\r\n    @Path(\"download/{objectKey}\")\r\n    @Produces(MediaType.APPLICATION_OCTET_STREAM)\r\n    public Uni<RestResponse<Multi<byte[]>>> downloadFile(String objectKey) {\r\n\r\n        return Uni.createFrom().item( (Publisher<ByteBuffer>)getPublisherByteBuffer())\r\n                .onItem()\r\n                .transform(object -> ResponseBuilder.ok(Multi.createFrom().publisher(AdaptersToFlow.publisher(object))\r\n                        .onItem().transform(this::getByteArray))\r\n                        .header(\"Content-Disposition\", \"attachment;filename=\" + objectKey)\r\n                        .header(\"Content-Type\", MediaType.APPLICATION_OCTET_STREAM).build());\r\n    }\r\n```\r\n\r\nbut got an exception :\r\n\r\n```\r\n java.lang.ClassCastException: class io.smallrye.mutiny.operators.multi.MultiMapOp cannot be cast to class [B (io.smallrye.mutiny.operators.multi.MultiMapOp is in unnamed module of loader io.quarkus.bootstrap.classloading.QuarkusClassLoader @290dbf45; [B is in module java.base of loader 'bootstrap')\r\n        at org.jboss.resteasy.reactive.server.providers.serialisers.ServerByteArrayMessageBodyHandler.writeResponse(ServerByteArrayMessageBodyHandler.java:16)\r\n\r\n```\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33130/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33130/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
