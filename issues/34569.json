{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34569",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34569/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34569/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34569/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34569",
  "id": 1791018383,
  "node_id": "I_kwDOCFbutM5qwMWP",
  "number": 34569,
  "title": "Add global property to rollback transactions on all exceptions (incl. checked)",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1633508165,
      "node_id": "MDU6TGFiZWwxNjMzNTA4MTY1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/narayana",
      "name": "area/narayana",
      "color": "0366d6",
      "default": false,
      "description": "Transactions / Narayana"
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 6,
  "created_at": "2023-07-06T07:54:26Z",
  "updated_at": "2024-08-13T15:58:29Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nBy default the `@Transactional` annotation only rolls back if there is a runtime exception. If a checked exception occurs, the default behaviour is to not roll back.\r\n\r\nThis seems to be a bit strange to me because also if a checked exception occurs I do not want that partial state is persisted to database.\r\n\r\nA workaround is to use the `rollbackOn` attribute for every annotation, e.g.\r\n\r\n```kotlin\r\n@Transactional(rollbackOn = [Exception::class])\r\nfun runThisWithTransaction() {\r\n    ...\r\n}\r\n```\r\n\r\nUsing a meta annotation does not work:\r\n\r\n```kotlin\r\n@Target(AnnotationTarget.CLASS, AnnotationTarget.FILE, AnnotationTarget.FUNCTION)\r\n@Retention(AnnotationRetention.RUNTIME)\r\n@Inherited\r\n@Transactional(rollbackOn = [Exception::class])\r\nannotation class MyTransactional\r\n\r\n@MyTransactional\r\nfun runsWithoutTransaction() {\r\n    ...\r\n}\r\n```\r\n\r\nMy question: Is it possible to add a global property to change the default behaviour? \r\n\r\nEspecially Kotlin does not differentiate between checked and unchecked exceptions. For Kotlin every Exception is \"unchecked\".\r\n\r\n### Implementation ideas\r\n\r\nI would expect this option to rollback transactions on every exception (incl. checked).\r\n\r\ne.g.\r\n\r\n```\r\nquarkus.transaction-manager.rollbackOnCheckedExceptions=true\r\n```",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34569/reactions",
    "total_count": 5,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34569/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
