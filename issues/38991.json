{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38991",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38991/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38991/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38991/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38991",
  "id": 2152667187,
  "node_id": "I_kwDOCFbutM6ATxgz",
  "number": 38991,
  "title": "Better error message for @ParameterizedTest failures in a @QuarkusTest",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2024-02-25T09:02:48Z",
  "updated_at": "2024-05-17T12:02:49Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI am running a @ParameterizedTest with @QuarkusTest.\r\nI am getting an error. **The same code without @QuarkusTest runs successfully, in a normal @ParameterizedTest.**\r\n\r\nThe error message talks about unrelated topics, such as XStream (which we don't use) and cloning.\r\n\r\n### Expected behavior\r\n\r\nA clear, helpful error message with a line number for me to look at.\r\n\r\n### Actual behavior\r\n\r\nA weird XStream cloning exception, with no clue which line is causing it.\r\n\r\nWe don't use XStream. We don't do cloning here.\r\n\r\n```\r\ncom.thoughtworks.xstream.mapper.CannotResolveClassException: org.acme.bedallocation.solver.BedAllocationConstraintProviderTest$$Lambda/0x00007f24e87654f8\r\n\r\n\tat com.thoughtworks.xstream.mapper.DefaultMapper.realClass(DefaultMapper.java:81)\r\n\tat com.thoughtworks.xstream.mapper.MapperWrapper.realClass(MapperWrapper.java:125)\r\n\tat com.thoughtworks.xstream.mapper.DynamicProxyMapper.realClass(DynamicProxyMapper.java:55)\r\n\tat com.thoughtworks.xstream.mapper.MapperWrapper.realClass(MapperWrapper.java:125)\r\n\tat com.thoughtworks.xstream.mapper.PackageAliasingMapper.realClass(PackageAliasingMapper.java:88)\r\n\tat com.thoughtworks.xstream.mapper.MapperWrapper.realClass(MapperWrapper.java:125)\r\n\tat com.thoughtworks.xstream.mapper.ClassAliasingMapper.realClass(ClassAliasingMapper.java:79)\r\n\tat com.thoughtworks.xstream.mapper.MapperWrapper.realClass(MapperWrapper.java:125)\r\n\tat com.thoughtworks.xstream.mapper.ArrayMapper.realClass(ArrayMapper.java:74)\r\n\tat com.thoughtworks.xstream.mapper.MapperWrapper.realClass(MapperWrapper.java:125)\r\n\tat com.thoughtworks.xstream.mapper.SecurityMapper.realClass(SecurityMapper.java:71)\r\n\tat com.thoughtworks.xstream.mapper.MapperWrapper.realClass(MapperWrapper.java:125)\r\n\tat com.thoughtworks.xstream.mapper.CachingMapper.realClass(CachingMapper.java:47)\r\n\tat com.thoughtworks.xstream.core.util.HierarchicalStreams.readClassType(HierarchicalStreams.java:29)\r\n\tat com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:135)\r\n\tat com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)\r\n\tat com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)\r\n\tat com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)\r\n\tat com.thoughtworks.xstream.XStream.fromXML(XStream.java:1321)\r\n\tat com.thoughtworks.xstream.XStream.fromXML(XStream.java:1312)\r\n\tat io.quarkus.test.junit.internal.XStreamDeepClone.doClone(XStreamDeepClone.java:54)\r\n\tat io.quarkus.test.junit.internal.XStreamDeepClone.clone(XStreamDeepClone.java:39)\r\n\tat io.quarkus.test.junit.internal.SerializationWithXStreamFallbackDeepClone.clone(SerializationWithXStreamFallbackDeepClone.java:33)\r\n\tat io.quarkus.test.junit.QuarkusTestExtension.runExtensionMethod(QuarkusTestExtension.java:998)\r\n\tat io.quarkus.test.junit.QuarkusTestExtension.runExtensionMethod(QuarkusTestExtension.java:907)\r\n\tat io.quarkus.test.junit.QuarkusTestExtension.interceptTestTemplateMethod(QuarkusTestExtension.java:867)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\r\n```\r\n\r\n### How to Reproduce?\r\n\r\nHere's the test that I ran on timefold-quickstarts:\r\n\r\n```\r\n@QuarkusTest\r\nclass BedAllocationConstraintProviderTest {\r\n\r\n    private static final Night ZERO_NIGHT = new Night(\"0\", 0);\r\n    private static final Night FIVE_NIGHT = new Night(\"5\", 5);\r\n\r\n    private static final Specialism DEFAULT_SPECIALISM = new Specialism();\r\n\r\n    @Inject\r\n    ConstraintVerifier<BedAllocationConstraintProvider, BedAllocationSchedule> constraintVerifier;\r\n\r\n    @ParameterizedTest(name = \"department = {0}, patientAge = {1}\")\r\n    @MethodSource(\"departmentAgeLimitationProvider\")\r\n    void departmentAgeLimitationConstraintTest(Department department, int patientAge,\r\n            BiFunction<BedAllocationConstraintProvider, ConstraintFactory, Constraint> constraintFunction) {\r\n\r\n        Room room = new Room();\r\n        room.setDepartment(department);\r\n\r\n        Patient patient = new Patient();\r\n        patient.setAge(patientAge);\r\n\r\n        Bed bed = new Bed();\r\n        bed.setRoom(room);\r\n\r\n        AdmissionPart admission = new AdmissionPart(\"0\", patient, ZERO_NIGHT, FIVE_NIGHT, DEFAULT_SPECIALISM);\r\n        BedDesignation designation = new BedDesignation(\"0\", admission, bed);\r\n\r\n        constraintVerifier.verifyThat(constraintFunction)\r\n                .given(designation, department)\r\n                .penalizesBy(6);\r\n    }\r\n\r\n    private static Stream<Arguments> departmentAgeLimitationProvider() {\r\n        Department adultDepartment = new Department(\"1\", \"Adult department\");\r\n        adultDepartment.setMinimumAge(18);\r\n\r\n        Department underageDepartment = new Department(\"2\", \"Underage department\");\r\n        underageDepartment.setMaximumAge(18);\r\n\r\n        return Stream.of(\r\n                Arguments.of(adultDepartment, 5,\r\n                        (BiFunction<BedAllocationConstraintProvider, ConstraintFactory, Constraint>) BedAllocationConstraintProvider::departmentMinimumAge),\r\n                Arguments.of(underageDepartment, 42,\r\n                        (BiFunction<BedAllocationConstraintProvider, ConstraintFactory, Constraint>) BedAllocationConstraintProvider::departmentMaximumAge));\r\n    }\r\n}\r\n```\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n_No response_\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38991/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38991/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
