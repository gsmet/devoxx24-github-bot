{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24810",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24810/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24810/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24810/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24810",
  "id": 1195243359,
  "node_id": "I_kwDOCFbutM5HPfdf",
  "number": 24810,
  "title": "Panache Many-To-Many Association repository not reflected in main entities.",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1425555736,
      "node_id": "MDU6TGFiZWwxNDI1NTU1NzM2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-orm",
      "name": "area/hibernate-orm",
      "color": "0366d6",
      "default": false,
      "description": "Hibernate ORM"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 10,
  "created_at": "2022-04-06T22:22:02Z",
  "updated_at": "2022-06-01T13:19:48Z",
  "closed_at": "2022-06-01T13:19:48Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nIn order to try and keep it short I will use sample code.\r\nI have Entity A with Id(Long) and Entity B with Id(Long), both having PanacheRepository.\r\nThey are connected with AxB association table where A.id and B.id is stored.\r\nIn order to minimise data traffic and simplify API signature I would like to be able to add/remove from the association table directly, not through one of the main entities. For that purpose I have created AxB Entity with IdClass containing both ids (so composite key of both columns).\r\nI have done an integration test to test this functionality and for addition it works fine.\r\nIn order to test the removal I first generate both entity A and B an insert one AxB entity into the association. Using the PanaheRepository<A> I getById(A.id) and assert that the association is present.\r\nNext step is the removal of AxB through PanacheBaseRepository<AxB, IdCalss> using deleteById method.\r\nI stop in the code with breakpoint and check that the removal on the DB level is complete and the entry is gone, however when calling PanaceEntity<A>.getById, the associations Set in A still contains the association.\r\n\r\nNote: This is all happening into one transaction.\r\n\r\n### Expected behavior\r\n\r\nAfter the removal of the entry in AxB table, when asking PanacheRepository<A>.getById(A.id) I should receive entity having the same state as the Database has.\r\n\r\n### Actual behavior\r\n\r\nThe entity has some stale state.\r\n\r\n### How to Reproduce?\r\n\r\n1. Create two entities (A and B) associated with each other through association table(AxB).\r\n2. Annotate them with @ManyToMany association.\r\n3. Create entity representing the association table.\r\n4. Create repositories for all entities.\r\n5. Create integration test which persists entity A, entity B and uses their ids to persist AxB, then based on their ids use the PanacheBaseRepository<AxB>.deleteById method to remove the AxB entity, call PanacheRepository<A>.getById(A.id) and it will still contain set of B entity.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n17\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\nlatest\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nmvn\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24810/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24810/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
