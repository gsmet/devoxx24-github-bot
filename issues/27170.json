{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27170",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27170/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27170/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27170/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27170",
  "id": 1330980515,
  "node_id": "I_kwDOCFbutM5PVSaj",
  "number": 27170,
  "title": "Generated grpc code cannot be compiled if a underscore is in the name of a method",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2062531368,
      "node_id": "MDU6TGFiZWwyMDYyNTMxMzY4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/grpc",
      "name": "area/grpc",
      "color": "0366d6",
      "default": false,
      "description": "gRPC"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/194",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/194",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/194/labels",
    "id": 8190506,
    "node_id": "MI_kwDOCFbutM4AfPoq",
    "number": 194,
    "title": "2.12.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 238,
    "state": "closed",
    "created_at": "2022-07-13T08:15:30Z",
    "updated_at": "2022-08-23T15:43:55Z",
    "due_on": null,
    "closed_at": "2022-08-17T12:32:03Z"
  },
  "comments": 3,
  "created_at": "2022-08-07T10:51:47Z",
  "updated_at": "2022-08-10T08:12:26Z",
  "closed_at": "2022-08-10T08:12:23Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI got a proto file which contains a rpc method with a underscore in the name\r\n\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage mypackage;\r\n\r\noption java_multiple_files = true;\r\noption java_package = \"mypackage\";\r\n\r\nservice MyService {\r\n  // Get info about the service\r\n  rpc service_info(ServiceInfoRequest) returns (ServiceInfo) {}\r\n}\r\nmessage ServiceInfo {\r\n  string software_version = 1;\r\n}\r\nmessage ServiceInfoRequest {\r\n}\r\n```\r\n\r\nBut the generated code is very inconsistend and cannot be compiled\r\n\r\ne.g. in `MyServiceImplBase implements io.grpc.BindableService` its `getServiceinfoMethod` instead of `getServiceInfoMethod`\r\n\r\n```\r\n        @java.lang.Override\r\n        public io.grpc.ServerServiceDefinition bindService() {\r\n            return io.grpc.ServerServiceDefinition.builder(getServiceDescriptor()).addMethod(mypackage.MyServiceGrpc.getServiceinfoMethod(), asyncUnaryCall(new MethodHandlers<mypackage.ServiceInfoRequest, mypackage.ServiceInfo>(this, METHODID_SERVICE_INFO, compression))).build();\r\n        }\r\n```\r\n\r\ncauses\r\n\r\n```\r\n[ERROR]   generated-sources/grpc/mypackage/MutinyMyServiceGrpc.java:[73,117] cannot find symbol\r\n[ERROR]   symbol:   method getServiceinfoMethod()\r\n[ERROR]   location: class mypackage.MyServiceGrpc\r\n```\r\n\r\n\r\nand in ``MutinyMyServiceStub extends io.grpc.stub.AbstractStub<MutinyMyServiceStub> implements io.quarkus.grpc.MutinyStub`\r\nit is `delegateStub::service_info` instead of `delegateStub::serviceInfo`\r\n\r\n```\r\n        public io.smallrye.mutiny.Uni<mypackage.ServiceInfo> service_info(mypackage.ServiceInfoRequest request) {\r\n            return io.quarkus.grpc.stubs.ClientCalls.oneToOne(request, delegateStub::service_info);\r\n        }\r\n```\r\n\r\ncauses\r\n```\r\n[ERROR]   generated-sources/grpc/mypackage/MutinyMyServiceGrpc.java:[44,72] invalid method reference\r\n[ERROR]   cannot find symbol\r\n[ERROR]     symbol:   method service_info()\r\n[ERROR]     location: class mypackage.MyServiceGrpc.MyServiceStub\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nGenerated code is consistent and can be compiled\r\n\r\n### Actual behavior\r\n\r\n_No response_\r\n\r\n### How to Reproduce?\r\n\r\nDownload Quarkus sample for grpc.\r\n\r\nAdd proto example file with name my-service.proto into /src/main/proto, see an example above.\r\n\r\nRun mvn package\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n_No response_\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27170/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27170/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
