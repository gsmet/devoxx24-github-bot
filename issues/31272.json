{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31272",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31272/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31272/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31272/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/31272",
  "id": 1590328403,
  "node_id": "I_kwDOCFbutM5eynxT",
  "number": 31272,
  "title": "Unable to get GraalVM version from the native-image binary ",
  "labels": [],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2023-02-18T12:16:18Z",
  "updated_at": "2023-02-18T14:53:42Z",
  "closed_at": "2023-02-18T12:37:12Z",
  "active_lock_reason": null,
  "body": "\r\n**Current environment setup on Ubuntu 22.04.1 LTS:**\r\n~~~\r\n➜ native-image --version\r\nGraalVM 22.3.1 Java 19 CE (Java Version 19.0.2+7-jvmci-22.3-b12)\r\n➜ java -version\r\nopenjdk version \"19.0.2\" 2023-01-17\r\nOpenJDK Runtime Environment GraalVM CE 22.3.1 (build 19.0.2+7-jvmci-22.3-b12)\r\nOpenJDK 64-Bit Server VM GraalVM CE 22.3.1 (build 19.0.2+7-jvmci-22.3-b12, mixed mode, sharing)\r\n➜ echo $GRAALVM_HOME \r\n/home/myuser/.sdkman/candidates/java/current/\r\n~~~\r\n\r\n**Quarkus application pom.xml:**\r\n\r\n~~~\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>org.acme</groupId>\r\n  <artifactId>getting-started</artifactId>\r\n  <version>1.0-SNAPSHOT</version>\r\n\r\n  <description>Generated project getting-started</description>\r\n\r\n  <properties>\r\n    <quarkus.version>1.3.0.Final</quarkus.version>\r\n    <kogito.version>0.9.1</kogito.version>\r\n    <surefire.version>2.22.1</surefire.version>\r\n    <compiler.version>3.8.1</compiler.version>\r\n\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    <maven.compiler.release>19</maven.compiler.release> \r\n  </properties>\r\n\r\n  <dependencyManagement>\r\n    <dependencies>\r\n      <dependency>\r\n        <groupId>org.kie.kogito</groupId>\r\n        <artifactId>kogito-quarkus-bom</artifactId>\r\n        <version>${kogito.version}</version>\r\n        <type>pom</type>\r\n        <scope>import</scope>\r\n      </dependency>\r\n    </dependencies>\r\n  </dependencyManagement>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.kie.kogito</groupId>\r\n      <artifactId>kogito-quarkus</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-resteasy</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-resteasy-jackson</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-smallrye-openapi</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-arc</artifactId>\r\n    </dependency>\r\n\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-junit5</artifactId>\r\n      <scope>test</scope>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.rest-assured</groupId>\r\n      <artifactId>rest-assured</artifactId>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n\r\n  <build>\r\n    <plugins>\r\n      <plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-compiler-plugin</artifactId>\r\n        <version>${compiler.version}</version>\r\n        <configuration>\r\n          <release>19</release>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-surefire-plugin</artifactId>\r\n        <version>${surefire.version}</version>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>io.quarkus</groupId>\r\n        <artifactId>quarkus-maven-plugin</artifactId>\r\n        <version>1.3.0.Final</version>\r\n        <executions>\r\n          <execution>\r\n            <goals>\r\n              <goal>build</goal>\r\n            </goals>\r\n          </execution>\r\n        </executions>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n\r\n  <profiles>\r\n    <profile>\r\n      <id>native</id>\r\n      <build>\r\n        <plugins>\r\n          <plugin>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-maven-plugin</artifactId>\r\n            <executions>\r\n              <execution>\r\n                <goals>\r\n                  <goal>native-image</goal>\r\n                </goals>\r\n              </execution>\r\n            </executions>\r\n          </plugin>\r\n          <plugin>\r\n            <groupId>org.apache.maven.plugins</groupId>\r\n            <artifactId>maven-failsafe-plugin</artifactId>\r\n            <version>${surefire.version}</version>\r\n          </plugin>\r\n        </plugins>\r\n      </build>\r\n    </profile>\r\n  </profiles>\r\n\r\n</project>\r\n~~~\r\n\r\n**Command executed that causes the error:**\r\n`mvn clean package -Pnative -DskipTests`\r\n\r\n**Full build Log:**\r\n~~~\r\n[INFO] Scanning for projects...\r\n[INFO] \r\n[INFO] ----------------------< org.acme:getting-started >----------------------\r\n[INFO] Building getting-started 1.0-SNAPSHOT\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ getting-started ---\r\n[INFO] Deleting /home/myuser/getting-started/target\r\n[INFO] \r\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ getting-started ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] Copying 3 resources\r\n[INFO] \r\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ getting-started ---\r\n[INFO] Nothing to compile - all classes are up to date\r\n[INFO] \r\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ getting-started ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] skip non existing resourceDirectory /home/myuser/getting-started/src/test/resources\r\n[INFO] \r\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ getting-started ---\r\n[INFO] No sources to compile\r\n[INFO] \r\n[INFO] --- maven-surefire-plugin:2.22.1:test (default-test) @ getting-started ---\r\n[INFO] Tests are skipped.\r\n[INFO] \r\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ getting-started ---\r\n[INFO] Building jar: /home/myuser/getting-started/target/getting-started-1.0-SNAPSHOT.jar\r\n[INFO] \r\n[INFO] --- quarkus-maven-plugin:1.3.0.Final:build (default) @ getting-started ---\r\n[INFO] [org.jboss.threads] JBoss Threads version 3.0.1.Final\r\n[INFO] [io.quarkus.deployment.pkg.steps.JarResultBuildStep] Building thin jar: /home/myuser/getting-started/target/getting-started-1.0-SNAPSHOT-runner.jar\r\n[INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 3180ms\r\n[INFO] \r\n[INFO] --- quarkus-maven-plugin:1.3.0.Final:native-image (default) @ getting-started ---\r\n[INFO] [io.quarkus.deployment.pkg.steps.JarResultBuildStep] Building native image source jar: /home/myuser/getting-started/target/getting-started-1.0-SNAPSHOT-native-image-source-jar/getting-started-1.0-SNAPSHOT-runner.jar\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Building native image from /home/myuser/getting-started/target/getting-started-1.0-SNAPSHOT-native-image-source-jar/getting-started-1.0-SNAPSHOT-runner.jar\r\n~~~\r\n**[ERROR] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Unable to get GraalVM version from the native-image binary.**\r\n~~~\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] /home/myuser/.sdkman/candidates/java/current/bin/native-image -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=1 -J-Duser.language=en -J-Dfile.encoding=UTF-8 --initialize-at-build-time= -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime -H:+JNI -jar getting-started-1.0-SNAPSHOT-runner.jar -H:FallbackThreshold=0 -H:+ReportExceptionStackTraces -H:-AddAllCharsets -H:-IncludeAllTimeZones -H:EnableURLProtocols=http -H:NativeLinkerOption=-no-pie --no-server -H:-UseServiceLoaderFeature -H:+StackTrace getting-started-1.0-SNAPSHOT-runner\r\nWarning: Ignoring server-mode native-image argument --no-server.\r\n-H:IncludeAllTimeZones and -H:IncludeTimeZones are now deprecated. Native-image includes all timezones by default.\r\n========================================================================================================================\r\nGraalVM Native Image: Generating 'getting-started-1.0-SNAPSHOT-runner' (executable)...\r\n========================================================================================================================\r\n--initialize-at-build-time without arguments has been deprecated when not using --diagnostics-mode. With GraalVM 22.0.0 --initialize-at-build-time will only work with --diagnostics-mode for debugging purposes.\r\nThe reason for deprecation is that --initalize-at-build-time does not compose, i.e., a single library can make assumptions that the whole classpath can be safely initialized at build time; that assumption is often incorrect.\r\nWarning: Feature class io.quarkus.runner.AutoFeature is annotated with the deprecated annotation @AutomaticFeature. Support for this annotation will be removed in a future version of GraalVM. Applications should register a feature using the option --features=io.quarkus.runner.AutoFeature\r\n\r\n[1/7] Initializing...                                                                                    (0.0s @ 0.26GB)\r\nError: Could not find target method: private void io.quarkus.runtime.graal.MappedByteBufferReplacement.force0(java.io.FileDescriptor,long,long)\r\ncom.oracle.svm.core.util.UserError$UserException: Could not find target method: private void io.quarkus.runtime.graal.MappedByteBufferReplacement.force0(java.io.FileDescriptor,long,long)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.core.util.UserError.abort(UserError.java:73)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.findOriginalMethod(AnnotationSubstitutionProcessor.java:824)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.handleMethodInAliasClass(AnnotationSubstitutionProcessor.java:441)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.handleAliasClass(AnnotationSubstitutionProcessor.java:413)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.handleClass(AnnotationSubstitutionProcessor.java:386)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.substitute.AnnotationSubstitutionProcessor.init(AnnotationSubstitutionProcessor.java:342)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.createAnnotationSubstitutionProcessor(NativeImageGenerator.java:966)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.setupNativeImage(NativeImageGenerator.java:868)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:575)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:535)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:403)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:580)\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:128)\r\n------------------------------------------------------------------------------------------------------------------------\r\n                        0.5s (6.7% of total time) in 11 GCs | Peak RSS: 0.91GB | CPU load: 2.81\r\n========================================================================================================================\r\nFailed generating 'getting-started-1.0-SNAPSHOT-runner' after 7.0s.\r\nError: Image build request failed with exit status 1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  16.144 s\r\n[INFO] Finished at: 2023-02-18T12:06:42Z\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal io.quarkus:quarkus-maven-plugin:1.3.0.Final:native-image (default) on project getting-started: Failed to generate native image: io.quarkus.builder.BuildException: Build failure: Build failed due to errors\r\n[ERROR]         [error]: Build step io.quarkus.deployment.pkg.steps.NativeImageBuildStep#build threw an exception: java.lang.RuntimeException: Failed to build native image\r\n[ERROR]         at io.quarkus.deployment.pkg.steps.NativeImageBuildStep.build(NativeImageBuildStep.java:352)\r\n[ERROR]         at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n[ERROR]         at java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n[ERROR]         at io.quarkus.deployment.ExtensionLoader$2.execute(ExtensionLoader.java:938)\r\n[ERROR]         at io.quarkus.builder.BuildContext.run(BuildContext.java:273)\r\n[ERROR]         at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)\r\n[ERROR]         at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2027)\r\n[ERROR]         at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1551)\r\n[ERROR]         at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1442)\r\n[ERROR]         at **java.base/java.lang.Thread.run(Thread.java:1589)**\r\n[ERROR]         at org.jboss.threads.JBossThread.run(JBossThread.java:479)\r\n[ERROR] Caused by: java.lang.RuntimeException: Image generation failed. Exit code: 1\r\n[ERROR]         at io.quarkus.deployment.pkg.steps.NativeImageBuildStep.imageGenerationFailed(NativeImageBuildStep.java:368)\r\n[ERROR]         at io.quarkus.deployment.pkg.steps.NativeImageBuildStep.build(NativeImageBuildStep.java:339)\r\n[ERROR]         ... 10 more\r\n[ERROR] -> [Help 1]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR] \r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException`\r\n~~~\r\n\r\n**If I run the command with the flag for building in a docker runtime, no issue is found and the image is built:**\r\n`mvn clean package -Pnative -DskipTests=true -Dnative-image.container-runtime=docker`\r\n\r\n\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31272/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31272/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
