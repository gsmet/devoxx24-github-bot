{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27212",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27212/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27212/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27212/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27212",
  "id": 1333643061,
  "node_id": "I_kwDOCFbutM5Pfcc1",
  "number": 27212,
  "title": "RunOnVertxContext annotation duplicateContext is not taken into account if the annotation is on the class",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/194",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/194",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/194/labels",
    "id": 8190506,
    "node_id": "MI_kwDOCFbutM4AfPoq",
    "number": 194,
    "title": "2.12.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 238,
    "state": "closed",
    "created_at": "2022-07-13T08:15:30Z",
    "updated_at": "2022-08-23T15:43:55Z",
    "due_on": null,
    "closed_at": "2022-08-17T12:32:03Z"
  },
  "comments": 5,
  "created_at": "2022-08-09T18:35:39Z",
  "updated_at": "2022-08-17T08:19:19Z",
  "closed_at": "2022-08-17T08:19:16Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI'm using the `@RunOnVertxContext(duplicateContext = true)` annotation in my tests since the tests calls a Hibernate reactive data source. This works when I put the annotation on each method, but it doesn't work when I put the annotation on the class.\r\n\r\nLooking at `RunOnVertxContextTestMethodInvoker`, it appears that we're looking for the annotation on the class and method in `supportsMethod` but we only look at the method annotation in `shouldContextBeDuplicated`.\r\n\r\n### Expected behavior\r\n\r\nRunning a test on a Hibernate reactive repository with a `@RunOnVertxContext(duplicateContext = true)` annotation on the test class should succeed.\r\n\r\n### Actual behavior\r\n\r\nRunning the test yields the following message:\r\n```\r\nCan't get the context safety flag: the current context is not a duplicated context\r\n```\r\n\r\n### How to Reproduce?\r\n\r\n```java\r\n@QuarkusTest\r\n@RunOnVertxContext(duplicateContext = true)\r\nclass MinCaseTest {\r\n    @Inject\r\n    TestRepository testee;\r\n\r\n    @Test\r\n    void testRetrieveAll(UniAsserter asserter) {\r\n        asserter.assertThat(() -> testee.retrieveAll(),\r\n                result -> assertEquals(0, result.size()));\r\n    }\r\n}\r\n```\r\nWhere TestRepository has the following:\r\n```java\r\n    @Inject\r\n   Mutiny.SessionFactory sf;\r\n\r\n   public Uni<TestEntity> retrieveAll() {\r\n      return sf.withTransaction((s, t) -> s.createQuery(...).getResultList());\r\n   }\r\n```\r\n### Output of `uname -a` or `ver`\r\n\r\nMicrosoft Windows [Version 10.0.19043.1826]\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"17\" 2021-09-14 LTS OpenJDK Runtime Environment Corretto-17.0.0.35.1 (build 17+35-LTS) OpenJDK 64-Bit Server VM Corretto-17.0.0.35.1 (build 17+35-LTS, mixed mode, sharing)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.11.2.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nMaven (Version 3.8.1)\r\n\r\n### Additional information\r\n\r\nPutting the annotation on each method is a valid workaround so this is not a blocker. The current behavior looks a bit inconsistent (compared to TestReactiveTransaction)",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27212/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27212/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
