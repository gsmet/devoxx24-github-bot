{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40536",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40536/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40536/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40536/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/40536",
  "id": 2287643421,
  "node_id": "I_kwDOCFbutM6IWqsd",
  "number": 40536,
  "title": "WebSockets Next: close the connection if the security identity has expired",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2748318141,
      "node_id": "MDU6TGFiZWwyNzQ4MzE4MTQx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/websockets",
      "name": "area/websockets",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/333",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/333",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/333/labels",
    "id": 11151112,
    "node_id": "MI_kwDOCFbutM4AqicI",
    "number": 333,
    "title": "3.11.2",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 29,
    "state": "closed",
    "created_at": "2024-06-06T16:06:20Z",
    "updated_at": "2024-08-14T12:08:46Z",
    "due_on": null,
    "closed_at": "2024-06-12T17:57:35Z"
  },
  "comments": 3,
  "created_at": "2024-05-09T12:57:05Z",
  "updated_at": "2024-06-10T13:37:03Z",
  "closed_at": "2024-05-28T10:34:56Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nThis enhancement request is a follow up to #40312 (PR: #40534).\r\nThe idea is that the identity time validity constraints should not be dropped once a user moves from the authenticated HTTP session to the WS channel, i.e, if the user is required to re-authenticate or have the session cookie refreshed when working with HTTP, for example, when the OIDC Keycloak session expires after 1 hour, then it should also be the case if the user upgrades to WS. \r\n\r\n### Implementation ideas\r\n\r\nOIDC already sets the following `SecurityIdentity` attribute:\r\n\r\n```\r\npublic static final String QUARKUS_IDENTITY_EXPIRE_TIME = \"quarkus.identity.expire-time\";\r\n``` \r\n\r\nwhich we agreed earlier with @stuartwdouglas about. At the moment it is only OIDC which sets it but other security mechanisms like `Form`, `WebAuthn`, can also set it later.\r\n\r\nIt is in seconds, so it is checked during the callback if it is less than the current time in seconds and the connection is closed if it is true.\r\n \r\nThe related issue is where the user is returned to once the connection is closed for the user to repeat the original HTTP request for another upgrade.\r\n\r\nLets say I'm authenticating with Google and now I'm looking at the Quarkus LangChain4j demo page with a chat bot icon, I press on it, I'm in the WS session... Now if the authentication has expired, I'd like to be returned to this initial demo page where I can click on the ChatBot icon again.\r\n\r\nAdding a Web Sockets Next configuration property which will let the user be redirected to the configured HTTP page would be nice - for example, if this original HTTP page is an OIDC secured initial demo page, then OIDC will refresh the session and the user will be able to get back to the WS channel ",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40536/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40536/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
