{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25884",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25884/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25884/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25884/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25884",
  "id": 1253882517,
  "node_id": "I_kwDOCFbutM5KvLqV",
  "number": 25884,
  "title": "Media type `text/xml` not working with REST Client Reactive",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/183",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/183",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/183/labels",
    "id": 7917759,
    "node_id": "MI_kwDOCFbutM4AeNC_",
    "number": 183,
    "title": "2.10.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 253,
    "state": "closed",
    "created_at": "2022-04-27T08:14:38Z",
    "updated_at": "2023-01-13T10:46:24Z",
    "due_on": null,
    "closed_at": "2022-06-09T16:06:42Z"
  },
  "comments": 3,
  "created_at": "2022-05-31T13:36:52Z",
  "updated_at": "2022-06-01T13:28:41Z",
  "closed_at": "2022-06-01T13:28:37Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI tried updating our project to use the REST Client Reactive from RESTEasy Reactive, however I can't get it to work with one of our REST Clients that uses `text/xml`. It does work fine for others that use JSON for example.\r\n\r\n### Expected behavior\r\n\r\nThe XML in the body of the response gets successfully processed with both media type `text/xml` and `application/xml`.\r\n\r\n### Actual behavior\r\n\r\nThe REST client fails with an exception when using `text/xml`\r\n\r\n```\r\njavax.ws.rs.ProcessingException: Response could not be mapped to type class org.acme.SimpleJaxbTest$Dto\r\n\r\n\tat org.jboss.resteasy.reactive.client.impl.ClientReaderInterceptorContextImpl.proceed(ClientReaderInterceptorContextImpl.java:62)\r\n\tat org.jboss.resteasy.reactive.client.impl.ClientSerialisers.invokeClientReader(ClientSerialisers.java:146)\r\n\tat org.jboss.resteasy.reactive.client.impl.RestClientRequestContext.readEntity(RestClientRequestContext.java:182)\r\n\tat org.jboss.resteasy.reactive.client.handlers.ClientResponseCompleteRestHandler.mapToResponse(ClientResponseCompleteRestHandler.java:101)\r\n\tat org.jboss.resteasy.reactive.client.handlers.ClientResponseCompleteRestHandler.handle(ClientResponseCompleteRestHandler.java:32)\r\n\tat org.jboss.resteasy.reactive.client.handlers.ClientResponseCompleteRestHandler.handle(ClientResponseCompleteRestHandler.java:28)\r\n\tat org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.invokeHandler(AbstractResteasyReactiveContext.java:219)\r\n\tat org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:141)\r\n\tat org.jboss.resteasy.reactive.client.impl.RestClientRequestContext$1.lambda$execute$0(RestClientRequestContext.java:276)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:100)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:63)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:38)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n```\r\n\r\nIt does work fine when you create an endpoint that uses `application/xml` or when you switch back to the REST Client from RESTEasy Classic with JAXB.\r\n\r\n### How to Reproduce?\r\n\r\nBased on the tests I found here: https://github.com/quarkusio/quarkus/blob/main/extensions/resteasy-reactive/rest-client-reactive-jaxb/deployment/src/test/java/io/quarkus/rest/client/reactive/jaxb/test/SimpleJaxbTest.java\r\nI made a small reproducer:\r\n\r\n```java\r\npackage org.acme;\r\n\r\nimport io.quarkus.test.common.http.TestHTTPResource;\r\nimport io.quarkus.test.junit.QuarkusTest;\r\nimport org.eclipse.microprofile.rest.client.RestClientBuilder;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.Produces;\r\nimport javax.ws.rs.core.MediaType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.net.URI;\r\nimport java.util.Objects;\r\n\r\nimport static org.hamcrest.MatcherAssert.assertThat;\r\nimport static org.hamcrest.Matchers.equalTo;\r\n\r\n@QuarkusTest\r\npublic class SimpleJaxbTest {\r\n\r\n    @TestHTTPResource\r\n    URI uri;\r\n\r\n    @Test\r\n    void shouldConsumeXMLEntity() {\r\n        var dto = RestClientBuilder.newBuilder().baseUri(uri).build(XmlClient.class).dto();\r\n        assertThat(dto, equalTo(new Dto(\"foo\", \"bar\")));\r\n    }\r\n\r\n    @Path(\"/xml\")\r\n    public interface XmlClient {\r\n\r\n        @GET\r\n        @Path(\"/dto\")\r\n        @Produces(MediaType.TEXT_XML)\r\n        Dto dto();\r\n    }\r\n\r\n    @Path(\"/xml\")\r\n    public static class XmlResource {\r\n\r\n        @GET\r\n        @Produces(MediaType.TEXT_XML)\r\n        @Path(\"/dto\")\r\n        public Dto dto() {\r\n            return new Dto(\"foo\", \"bar\");\r\n        }\r\n    }\r\n\r\n    @XmlRootElement(name = \"Dto\")\r\n    public static class Dto {\r\n        public String name;\r\n        public String value;\r\n\r\n        public Dto(String name, String value) {\r\n            this.name = name;\r\n            this.value = value;\r\n        }\r\n\r\n        public Dto() {\r\n        }\r\n\r\n        @Override\r\n        public boolean equals(Object o) {\r\n            if (this == o)\r\n                return true;\r\n            if (o == null || getClass() != o.getClass())\r\n                return false;\r\n            Dto dto = (Dto) o;\r\n            return Objects.equals(name, dto.name) && Objects.equals(value, dto.value);\r\n        }\r\n\r\n        @Override\r\n        public int hashCode() {\r\n            return Objects.hash(name, value);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nExtensions used:\r\n```xml\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-rest-client-reactive-jaxb</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-resteasy-reactive-jaxb</artifactId>\r\n    </dependency>\r\n```\r\n\r\nReproducer:  [Archive.zip](https://github.com/quarkusio/quarkus/files/8805564/Archive.zip)\r\n\r\n\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n```\r\nDarwin Willems-MBP.i.btp34.nl 21.5.0 Darwin Kernel Version 21.5.0: Tue Apr 26 21:08:22 PDT 2022; root:xnu-8020.121.3~4/RELEASE_X86_64 x86_64\r\n```\r\n\r\n### Output of `java -version`\r\n\r\n```\r\nopenjdk version \"17.0.3\" 2022-04-19 OpenJDK Runtime Environment Temurin-17.0.3+7 (build 17.0.3+7) OpenJDK 64-Bit Server VM Temurin-17.0.3+7 (build 17.0.3+7, mixed mode, sharing)\r\n```\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n`2.9.2.Final`\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n```\r\nApache Maven 3.8.4 (9b656c72d54e5bacbed989b64718c159fe39b537) Maven home: /Users/wjglerum/.m2/wrapper/dists/apache-maven-3.8.4-bin/52ccbt68d252mdldqsfsn03jlf/apache-maven-3.8.4 Java version: 17.0.3, vendor: Eclipse Adoptium, runtime: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home Default locale: en_NL, platform encoding: US-ASCII OS name: \"mac os x\", version: \"12.4\", arch: \"x86_64\", family: \"mac\"\r\n```\r\n\r\n### Additional information\r\n\r\nDid I miss any documentation here? Or is there something else needed to make this work?",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25884/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25884/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
