{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38202",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38202/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38202/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38202/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38202",
  "id": 2082463963,
  "node_id": "I_kwDOCFbutM58H-Db",
  "number": 38202,
  "title": "Provide JUnit extension to capture output streams in QuarkusTest",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 0,
  "created_at": "2024-01-15T17:46:10Z",
  "updated_at": "2024-01-16T07:14:05Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\n\nSpring provides a handy JUnit extension called `OutputCaptureExtension`  to capture System.out and System.err in tests. See their [docs ](https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/test/system/OutputCaptureExtension.html) and [implementation](https://github.com/spring-projects/spring-boot/blob/main/spring-boot-project/spring-boot-tools/spring-boot-test-support/src/main/java/org/springframework/boot/testsupport/system/OutputCaptureExtension.java). \r\n\r\nIt would be great if Quarkus would provide a similar solution. We already tried porting the spring implementation to my quarkus application. However, after adding many `--add-opens` for xstream it unfortunately does not work with `@QuarkusTest` because it results in an StackoverflowError. I am not sure what exactly the problem is, I just noticed that there is some special handling for xstream in [QuarkusTestExtension](https://github.com/quarkusio/quarkus/blob/3.4.3/test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java) so maybe the extension has to be provided by quarkus itself.\r\n\r\nBackground: We are trying to test log output which is based on [quarkus-logging-json](https://github.com/quarkiverse/quarkus-logging-json). We tried using the [InMemoryLogHandler ](https://github.com/quarkusio/quarkus/blob/136b4d8ae9f19bfac8d4a13065085d3ff62dc19d/test-framework/junit5-internal/src/main/java/io/quarkus/test/InMemoryLogHandler.java#L12) approach but it does not seem to provide access to the fully formatted json output. We also tested https://github.com/Hakky54/log-captor and https://github.com/Hakky54/console-captor, but they seem not to work for our use case.\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38202/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38202/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
