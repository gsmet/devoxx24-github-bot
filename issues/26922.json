{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26922",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26922/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26922/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26922/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26922",
  "id": 1317835195,
  "node_id": "I_kwDOCFbutM5OjJG7",
  "number": 26922,
  "title": "smallrye jwt returns Response despite exception being caught",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/206",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/206",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/206/labels",
    "id": 8420367,
    "node_id": "MI_kwDOCFbutM4AgHwP",
    "number": 206,
    "title": "2.14.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 224,
    "state": "closed",
    "created_at": "2022-09-14T06:18:10Z",
    "updated_at": "2023-05-15T13:54:56Z",
    "due_on": null,
    "closed_at": "2022-10-26T12:52:36Z"
  },
  "comments": 22,
  "created_at": "2022-07-26T07:44:51Z",
  "updated_at": "2022-11-25T12:45:52Z",
  "closed_at": "2022-10-12T09:21:37Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI have a simple quarkus reactive resteasy server\r\n\r\n```java\r\n@Path(\"/\")\r\n@ApplicationScoped\r\npublic class Hello {\r\n\r\n    @GET\r\n    @Path(\"hello\")\r\n    @RolesAllowed({\"roleYouNeed\"})\r\n    @Blocking\r\n    public Uni<Response> hello(){\r\n        return Uni.createFrom().item(Response.ok(\"hello\").build());\r\n    }\r\n}\r\n        \r\n```\r\n\r\nFollowing the documentation found here I create several exception mappers to return a response body which elaborates on the status code. This one for example works when you do not provide a JWT token to a request that needs it:\r\n\r\n```java\r\n@Provider//register as JAXRS provider\r\n@Priority(1)//override the build-int mapper(which has 5001 prio)\r\n@Slf4j\r\npublic class UnauthorizedExceptionMapper implements ExceptionMapper<UnauthorizedException> {\r\n    @Override\r\n    public Response toResponse(UnauthorizedException exception) {\r\n        log.warn(\"There was an incoming request that did not have the correct Authorization\");\r\n        return Response.status(Response.Status.UNAUTHORIZED)\r\n                .entity(new ErrorResponseObject().addErrorsItem(new ErrorResponseObjectErrorsInner()\r\n                        .code(String.valueOf(Response.Status.UNAUTHORIZED.getStatusCode()))\r\n                        .detail(\"Unauthorized\")))\r\n                .build();\r\n    }\r\n\r\n}\r\n```\r\n\r\nThis works as expected on my endpoint that uses quarkus-smallrye-jwt with the annotation `@RolesAllowed({\"roleYouNeed\"})`\r\n\r\nWhen someone sends a token that is truly worthless however a JWTParse Exception occurs and a different exception is raised, the `AuthenticationFailedException`\r\n\r\nTo catch this one I created \r\n\r\n```java\r\n@Provider\r\n@Priority(1)\r\n@Slf4j\r\npublic class AuthenticationExceptionMapper implements ExceptionMapper<AuthenticationFailedException> {\r\n    @Override\r\n    public Response toResponse(AuthenticationFailedException exception) {\r\n        log.warn(\"There was an incoming request that did not have the correct Authorization\");\r\n        return Response.status(Response.Status.UNAUTHORIZED)\r\n                .entity(new ErrorResponseObject().addErrorsItem(new ErrorResponseObjectErrorsInner()\r\n                        .code(String.valueOf(Response.Status.UNAUTHORIZED.getStatusCode()))\r\n                        .detail(\"Unauthorized\")))\r\n                .build();\r\n    }\r\n}\r\n```\r\n\r\nThis does catch the exception and my warning is logged: `[com.ene.odp.exc.AuthenticationExceptionMapper] (vert.x-eventloop-thread-0) There was an incoming request that did not have the correct Authorization\r\n`. The problem here is that a response has already been returned and I see the following error occurring:\r\n\r\n```\r\n2022-07-25 16:22:03,812 ERROR [org.jbo.res.rea.com.cor.AbstractResteasyReactiveContext] (vert.x-eventloop-thread-1) Request failed: java.io.IOException: java.io.IOException: Failed to write\r\n        at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveOutputStream.close(ResteasyReactiveOutputStream.java:272)\r\n        at io.quarkus.resteasy.reactive.jackson.runtime.serialisers.BasicServerJacksonMessageBodyWriter.writeResponse(BasicServerJacksonMessageBodyWriter.java:44)\r\n        at org.jboss.resteasy.reactive.server.core.ServerSerialisers.invokeWriter(ServerSerialisers.java:207)\r\n        at org.jboss.resteasy.reactive.server.core.serialization.DynamicEntityWriter.write(DynamicEntityWriter.java:104)\r\n        at org.jboss.resteasy.reactive.server.handlers.ResponseWriterHandler.handle(ResponseWriterHandler.java:31)\r\n        at org.jboss.resteasy.reactive.server.handlers.ResponseWriterHandler.handle(ResponseWriterHandler.java:15)\r\n        at org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:141)\r\n        at org.jboss.resteasy.reactive.server.vertx.VertxResteasyReactiveRequestContext$1$1.handle(VertxResteasyReactiveRequestContext.java:73)\r\n        at org.jboss.resteasy.reactive.server.vertx.VertxResteasyReactiveRequestContext$1$1.handle(VertxResteasyReactiveRequestContext.java:70)\r\n        at io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:100)\r\n        at io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:63)\r\n        at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:38)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:503)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\nCaused by: java.io.IOException: Failed to write\r\n        at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveOutputStream.write(ResteasyReactiveOutputStream.java:109)\r\n        at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveOutputStream.writeBlocking(ResteasyReactiveOutputStream.java:224)\r\n        at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveOutputStream.close(ResteasyReactiveOutputStream.java:270)\r\n        ... 18 more\r\nCaused by: java.lang.IllegalStateException: Response has already been written\r\n        at io.vertx.core.http.impl.Http1xServerResponse.checkValid(Http1xServerResponse.java:675)\r\n        at io.vertx.core.http.impl.Http1xServerResponse.writeQueueFull(Http1xServerResponse.java:274)\r\n        at io.quarkus.vertx.http.runtime.filters.AbstractResponseWrapper.writeQueueFull(AbstractResponseWrapper.java:486)\r\n        at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveOutputStream.awaitWriteable(ResteasyReactiveOutputStream.java:116)\r\n        at org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveOutputStream.write(ResteasyReactiveOutputStream.java:82)\r\n```\r\n\r\nWhy is the response already being returned while I catch this exception? How can I make sure nothing is returned except what I return from the `AuthenticationExceptionMapper`?\n\n### Expected behavior\n\nWhen I catch the exception in my AuthenticationExceptionMapper no response is returned except one that I return from the mapper. \n\n### Actual behavior\n\nThe smallrye-jwt extension returns a 401 before I can return an adequate response from my exception mapper\n\n### How to Reproduce?\n\nCreate a simple server with an endpoint that uses the smallrye-jwt extension. Create an extension mapper that catches the AuthenticationFailedException and then call the endpoint with some gibberish Authorization: Bearer <Token>. \n\n### Output of `uname -a` or `ver`\n\n21.0.1 Darwin Kernel Version 21.0.1: Tue Sep 14 20:56:24 PDT 2021; root:xnu-8019.30.61~4/RELEASE_ARM64_T6000 arm64\n\n### Output of `java -version`\n\nOpenJDK 64-Bit Server VM GraalVM CE 22.1.0 (build 17.0.3+7-jvmci-22.1-b06, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.9.0.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\napache-maven-3.8.4\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26922/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26922/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
