{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27482",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27482/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27482/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27482/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27482",
  "id": 1349422124,
  "node_id": "I_kwDOCFbutM5Qbows",
  "number": 27482,
  "title": "Expose potential extension points on authorization code flow-related provider clients",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/201",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/201",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/201/labels",
    "id": 8316083,
    "node_id": "MI_kwDOCFbutM4AfuSz",
    "number": 201,
    "title": "2.13.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 257,
    "state": "closed",
    "created_at": "2022-08-17T08:31:42Z",
    "updated_at": "2024-07-09T02:26:14Z",
    "due_on": null,
    "closed_at": "2022-09-14T20:11:06Z"
  },
  "comments": 8,
  "created_at": "2022-08-24T13:08:33Z",
  "updated_at": "2022-08-27T02:46:59Z",
  "closed_at": "2022-08-26T21:53:35Z",
  "active_lock_reason": null,
  "body": "### Description\n\nOur self-hosted authorization server is based largely upon basic authorization code flow backed by OIDC, but slightly modified the \"code -> token\" process as several non-standard parameters are required, which are primarily headers and bodies for signature submission intended for customized client authentication based on methods other than the standard ones like base/post/jwt or secret_key_jwt, for the exchange of id/access/refresh tokens.\r\nThis whole process is not at all universal in terms of keycloak or other well-known providers, but the ability of extention/decoration of the authorization code flow would be of benefit.\r\nThank you for your time :))\n\n### Implementation ideas\n\nIn `io.quarkus.oidc.runtime.OidcProviderClient#getHttpResponse(String, MultiMap)`, it seems that headers and bodies are not somewhat customizable, I wonder if it's feasible to enable passage of customized header/body values to the http client, through configuration properties.\r\nOr is it possible to enable decoration of the whole `io.quarkus.oidc.runtime.CodeAuthenticationMechanism`, through conditional injection of user-defined `OidcProviderClient`s.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27482/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27482/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
