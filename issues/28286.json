{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28286",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28286/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28286/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28286/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/28286",
  "id": 1390712180,
  "node_id": "I_kwDOCFbutM5S5JV0",
  "number": 28286,
  "title": "@Retry and @Transactional -> @RetrieableTransactional",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1633508165,
      "node_id": "MDU6TGFiZWwxNjMzNTA4MTY1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/narayana",
      "name": "area/narayana",
      "color": "0366d6",
      "default": false,
      "description": "Transactions / Narayana"
    },
    {
      "id": 2236032526,
      "node_id": "MDU6TGFiZWwyMjM2MDMyNTI2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/fault-tolerance",
      "name": "area/fault-tolerance",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2022-09-29T11:29:36Z",
  "updated_at": "2022-11-03T06:06:47Z",
  "closed_at": "2022-11-03T06:06:47Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nOn I transaction error, I would like to retry the transaction, if it did fail because of an optimistic lock exception.\r\n\r\nFirst thought obviously is to do it this way:\r\n```\r\n@Transactional\r\n@Retry(OptimisticLockException.class)\r\nvoid myMethodDoingSomeDBStuff(){\r\n  ...\r\n}\r\n```\r\nThis sadly does not work, as the `@Retry` interceptor is beeing processed before the `@Transactional` interceptor is finishing. This means, I cannot retry on a exception which originates of a failed transaction. I could wrap this method with another bean to make it work, but this seems odd.\r\n\r\nI also could change the global priority of the `@Retry` interceptor, but I really don't want to open the pandoras box.\r\n\r\nAs I haven't found another way to solve this (please correct me if there is), it leads me to want a cross over of both: `@RetrieableTransactional` that implements an interceptor that wraps both of them, but in the order\r\n1. Transactional interceptor\r\n2. Retry interceptor\r\n\r\nDoes this sound reasonable?\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28286/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28286/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
