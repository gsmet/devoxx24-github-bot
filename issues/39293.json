{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39293",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39293/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39293/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39293/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/39293",
  "id": 2176113787,
  "node_id": "I_kwDOCFbutM6BtNx7",
  "number": 39293,
  "title": "Quarkus OIDC Client: Lazy OIDC Discovery",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2024-03-08T14:07:09Z",
  "updated_at": "2024-03-08T15:27:02Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nWhen using [quarkus-oidc-client](https://quarkus.io/guides/security-openid-connect-client-reference) extension, OIDC discovery is executed on application startup, which causes errors when the OIDC server is down at the time. \r\n\r\nIt would be nice to have an option to enable \"lazy\" discovery which would be executed once OidcClient ist first used.\r\n\r\n\r\n### Implementation ideas\r\n\r\nI am no expert in mutiny but, maybe putting the tokenRequestUri in an Uni could be the solution. On eager OIDC discovery, it would contain the value, on lazy discovery http calls would be triggered (and the result saved using some kind of [shareReplay ](https://www.learnrxjs.io/learn-rxjs/operators/multicasting/sharereplay)mutiny alternative). ",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39293/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39293/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
