{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32688",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32688/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32688/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32688/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/32688",
  "id": 1671361908,
  "node_id": "I_kwDOCFbutM5jnvV0",
  "number": 32688,
  "title": "Mailer - Add the ability to configure a list of approved recipients",
  "labels": [
    {
      "id": 2955096556,
      "node_id": "MDU6TGFiZWwyOTU1MDk2NTU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/mailer",
      "name": "area/mailer",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/245",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/245",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/245/labels",
    "id": 9272809,
    "node_id": "MI_kwDOCFbutM4AjX3p",
    "number": 245,
    "title": "3.1.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 1,
    "closed_issues": 189,
    "state": "closed",
    "created_at": "2023-04-12T07:42:31Z",
    "updated_at": "2024-04-17T06:04:35Z",
    "due_on": null,
    "closed_at": "2023-05-17T12:28:33Z"
  },
  "comments": 10,
  "created_at": "2023-04-17T14:47:45Z",
  "updated_at": "2023-05-15T11:54:26Z",
  "closed_at": "2023-05-15T11:53:46Z",
  "active_lock_reason": null,
  "body": "### Discussed in https://github.com/quarkusio/quarkus/discussions/32685\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **canidae** April 17, 2023</sup>\r\nPrior to Quarkus 3.0.0.Final I could extend MutinyMailerImpl to implement a whitelisting of email recipients. Unfortunately, a [recent change](https://github.com/quarkusio/quarkus/commit/fb2affe542af486181755282763023c411865a42) broke this, and I don't see an easy way to reimplement my whitelisting with the latest iteration of the mailer.\r\n\r\nThis was implemented as a library used by 20 or so internal projects who all simply would `@Inject ReactiveMailer` as if they used `quarkus-mailer` directly, but with a whitelisting feature. Whitelisting is a useful feature for us, as we'd like to limit who we may send mails to during QA-testing (where the mock mailbox is not sufficient as we'd still like to send mails to some select recipients, but prevent accidentally sending to i.e. customers due to inadequately washed test data).\r\n\r\nPreferably I'd like to see whitelisting as a feature in `quarkus-mailer`, but it seems like this isn't a feature requested by many other people. Thus my question is if I can easily modify the code below to work with Quarkus 3.0.0.Final.\r\n\r\nCode:\r\n```java\r\n@Alternative\r\n@Priority(1)\r\n@ApplicationScoped\r\npublic class WhitelistMailerImpl extends MutinyMailerImpl {\r\n    @Inject\r\n    Logger log;\r\n\r\n    @ConfigProperty(name = \"mailer.whitelist.enabled\")\r\n    Optional<Boolean> whitelistEnabled;\r\n\r\n    @ConfigProperty(name = \"mailer.whitelist.emails\")\r\n    Optional<List<String>> whitelistEmails;\r\n\r\n    @Override\r\n    public Uni<Void> send(Mail... mails) {\r\n        if (!whitelistEnabled.orElse(!LaunchMode.current().isDevOrTest()))\r\n            return super.send(mails);\r\n\r\n        var allowedMails = new ArrayList<Mail>();\r\n        for (var mail : mails) {\r\n            var to = filterWhitelisted(mail.getTo());\r\n            var cc = filterWhitelisted(mail.getCc());\r\n            var bcc = filterWhitelisted(mail.getBcc());\r\n            if (to.isEmpty() && cc.isEmpty() && bcc.isEmpty()) {\r\n                log.warnf(\"A mail to %s, cc %s, bcc %s with subject '%s' was not sent. Whitelisting is enabled and there were \" +\r\n                        \"no whitelisted email addresses in the mail.\", mail.getTo(), mail.getCc(), mail.getBcc(), mail.getSubject());\r\n            } else {\r\n                mail.setTo(to);\r\n                mail.setCc(cc);\r\n                mail.setBcc(bcc);\r\n                allowedMails.add(mail);\r\n            }\r\n        }\r\n        return allowedMails.isEmpty() ? Uni.createFrom().voidItem() : super.send(allowedMails.toArray(Mail[]::new));\r\n    }\r\n\r\n    private List<String> filterWhitelisted(List<String> emails) {\r\n        var allowedRecipients = whitelistEmails.orElse(Collections.emptyList());\r\n        var keep = new ArrayList<String>();\r\n        for (var email : emails) {\r\n            for (var regex : allowedRecipients) {\r\n                if (email.matches(regex)) {\r\n                    keep.add(email);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return keep;\r\n    }\r\n}\r\n```</div>",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32688/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32688/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
