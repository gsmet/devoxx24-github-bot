{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42710",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42710/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42710/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42710/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/42710",
  "id": 2481386381,
  "node_id": "I_kwDOCFbutM6T5vON",
  "number": 42710,
  "title": "Introduce AuthorizationPolicy annotation",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/345",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/345",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/345/labels",
    "id": 11440331,
    "node_id": "MI_kwDOCFbutM4ArpDL",
    "number": 345,
    "title": "3.16 - main",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 110,
    "state": "open",
    "created_at": "2024-08-14T07:55:40Z",
    "updated_at": "2024-09-02T12:40:31Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 6,
  "created_at": "2024-08-22T17:47:22Z",
  "updated_at": "2024-08-28T21:08:12Z",
  "closed_at": "2024-08-28T21:08:09Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nWe have briefly discussed the idea with Michal @michalvavrik.\r\n\r\nSo we have `@RolesAllowed` and `@PermissionsAllowed` annotations. We also have `HttpSecurityPolicy` beans.\r\n\r\nIn some cases it could be useful to have general authorization checks registered as annotations, to bind policy checks to specific JAX-RS methods, but without having to introduce some kind of expression language, the way it is done for example, in Spring's `@PreAuthorize`.\r\n\r\n\r\n\r\n### Implementation ideas\r\n\r\nOne idea is to do `@AuthorizationPolicy(policy=CustomHttpSecurityPolicy.class)`  where `CustomHttpSecurityPolicy` is a custom `HttpSecurityPolicy` class without CDI annotatioons, which can also take extra request parameters in the constructor, similarly to how a custom permission class can.\r\n\r\nOr, `@AuthorizationPolicy(name=\"custom-policy\")` which points to a CDI named custom `HttpSecurityPolicy` class (CDI `@Name` would be the only CDI annotation used by the custom policy class).\r\n\r\nIn this case, it is really about making it easy to bind a specific `HttpSecurityPolicy` to a specific JAX-RS method, without having to resort to the HTTP policy configuration.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42710/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42710/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
