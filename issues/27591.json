{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27591",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27591/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27591/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27591/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27591",
  "id": 1355596895,
  "node_id": "I_kwDOCFbutM5QzMRf",
  "number": 27591,
  "title": "Support annotation @PostConstruct (and similar) for reactive code",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1273042002,
      "node_id": "MDU6TGFiZWwxMjczMDQyMDAy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/reactive",
      "name": "area/reactive",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/215",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/215",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/215/labels",
    "id": 8592808,
    "node_id": "MI_kwDOCFbutM4Agx2o",
    "number": 215,
    "title": "2.14.0.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 31,
    "state": "closed",
    "created_at": "2022-10-28T17:09:02Z",
    "updated_at": "2022-11-03T19:16:40Z",
    "due_on": null,
    "closed_at": "2022-11-02T11:44:04Z"
  },
  "comments": 6,
  "created_at": "2022-08-30T11:14:38Z",
  "updated_at": "2022-10-28T17:14:54Z",
  "closed_at": "2022-10-27T13:08:53Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nWhen writing reactive code, it's not possible to use `@PostConstruct` correctly:\r\n```java\r\n    @PostConstruct\r\n    public Uni<Void> init() {\r\n       return doSomething();\r\n    }\r\n```\r\n\r\nThis doesn't work and if users want to call a reactive method and be sure that it's executed before returning,\r\nthey have to block and wait:\r\n```java\r\n    @PostConstruct\r\n    public void init() {\r\n       doSomenthing().await().indefinitely();\r\n    }\r\n```\r\n\r\nThere are [some implementation details](https://github.com/quarkusio/quarkus/pull/26551#issuecomment-1231334195) that make this issue hard to solve:\r\n> `@PostConstruct` callbacks are invoked during bean creation and the CDI API for bean construction is not async and therefore it does not help much. In other words, we can't properly support @PostConstruct Uni<Void> init() until we have an async bean construction API.\r\n\r\nNote that returning a `Uni` is not the only solution and we could accept a parameter for synchronization. For example:\r\n```java\r\n    @PostConstruct\r\n    public void init(CompletableFuture<Object> future) {\r\n       doSomenthing()\r\n           .subscribe().with( future::complete, future::completeExceptionally );\r\n    }\r\n```\r\n\r\nAlthough we don't use this approach in other places.\r\n\r\nOther resources:\r\n* [The StackOveflow question of the user asking about it](https://stackoverflow.com/questions/73000578/using-transaction-in-postconstruct)\r\n* [The previous PR where we briefly discuss this](https://github.com/quarkusio/quarkus/pull/26551#issuecomment-1231308629)\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27591/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27591/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
