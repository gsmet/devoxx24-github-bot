{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27339",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27339/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27339/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27339/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27339",
  "id": 1341851776,
  "node_id": "I_kwDOCFbutM5P-wiA",
  "number": 27339,
  "title": "Hibernate RX no longer works as it did for a Picocli application",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346627,
      "node_id": "MDU6TGFiZWw5ODUzNDY2Mjc=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/wontfix",
      "name": "triage/wontfix",
      "color": "ffffff",
      "default": false,
      "description": "This will not be worked on"
    },
    {
      "id": 2122256208,
      "node_id": "MDU6TGFiZWwyMTIyMjU2MjA4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-reactive",
      "name": "area/hibernate-reactive",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3232344833,
      "node_id": "MDU6TGFiZWwzMjMyMzQ0ODMz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/picocli",
      "name": "area/picocli",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 12,
  "created_at": "2022-08-17T14:27:21Z",
  "updated_at": "2023-07-21T11:39:04Z",
  "closed_at": "2023-07-21T11:38:57Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nPreviously I had built a simple CLI application for initializing a standard set of records for testing in an environment. Records were initialized through SQL queries. When the first version was built early this year I was using Quarkus 2.7 and was able to build everything out using the Hiberate RX and Picocli extensions. However now that I've tried upgraded to the latest Quarkus version a few times over the last few months (2.9 then 2.11) I now encounter a run-time error that stops this once running code in its tracks. My command for initializing a SQL dataset is no longer able to run it's stateful transaction without encountering an error about not having a safe Vert.x sub-context.\n\n### Expected behavior\n\nQueries should run and complete as they did before.\n\n### Actual behavior\n\nThis exception is throw as soon as the `sessionFactory.withTransaction` method is invoked:\r\n```\r\nio.smallrye.mutiny.CompositeException: Multiple exceptions caught:\r\n\t[Exception 0] java.lang.IllegalStateException: The current operation requires a safe (isolated) Vert.x sub-context, but the current context hasn't been flagged as such. You can still use Hibernate Reactive, you just need to avoid using the methods which implicitly require accessing the stateful context, such as MutinySessionFactory#withTransaction and #withSession.\r\n\t[Exception 1] java.lang.IllegalStateException: The current operation requires a safe (isolated) Vert.x sub-context, but the current context hasn't been flagged as such. You can still use Hibernate Reactive, you just need to avoid using the methods which implicitly require accessing the stateful context, such as MutinySessionFactory#withTransaction and #withSession.\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemOrFailureConsume$UniOnItemOrFailureConsumeProcessor.invokeCallback(UniOnItemOrFailureConsume.java:59)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemOrFailureConsume$UniOnItemOrFailureConsumeProcessor.onFailure(UniOnItemOrFailureConsume.java:45)\r\n\tat io.smallrye.mutiny.operators.uni.UniOperatorProcessor.onFailure(UniOperatorProcessor.java:54)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor.invokeEventHandler(UniOnItemConsume.java:82)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor.onItem(UniOnItemConsume.java:42)\r\n\tat io.smallrye.mutiny.operators.uni.builders.UniCreateFromKnownItem$KnownItemSubscription.forward(UniCreateFromKnownItem.java:38)\r\n\tat io.smallrye.mutiny.operators.uni.builders.UniCreateFromKnownItem$KnownItemSubscription.access$100(UniCreateFromKnownItem.java:26)\r\n\tat io.smallrye.mutiny.operators.uni.builders.UniCreateFromKnownItem.subscribe(UniCreateFromKnownItem.java:23)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemConsume.subscribe(UniOnItemConsume.java:30)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni.subscribe(UniOnItemTransformToUni.java:25)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemOrFailureConsume.subscribe(UniOnItemOrFailureConsume.java:24)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemOrFailureFlatMap.subscribe(UniOnItemOrFailureFlatMap.java:27)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.performInnerSubscription(UniOnItemTransformToUni.java:81)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.onItem(UniOnItemTransformToUni.java:57)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransform$UniOnItemTransformProcessor.onItem(UniOnItemTransform.java:43)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.onItem(UniOnItemTransformToUni.java:60)\r\n\tat io.smallrye.mutiny.operators.uni.UniOperatorProcessor.onItem(UniOperatorProcessor.java:46)\r\n\tat io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemSupplier.subscribe(UniCreateFromItemSupplier.java:29)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap.subscribe(UniOnFailureFlatMap.java:31)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.performInnerSubscription(UniOnItemTransformToUni.java:81)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.onItem(UniOnItemTransformToUni.java:57)\r\n\tat io.smallrye.mutiny.operators.uni.UniOperatorProcessor.onItem(UniOperatorProcessor.java:46)\r\n\tat io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage$CompletionStageUniSubscription.forwardResult(UniCreateFromCompletionStage.java:63)\r\n\tat java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)\r\n\tat java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)\r\n\tat io.vertx.core.Future.lambda$toCompletionStage$2(Future.java:360)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.Mapping.onSuccess(Mapping.java:40)\r\n\tat io.vertx.core.impl.future.FutureBase.lambda$emitSuccess$0(FutureBase.java:54)\r\n\tat io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:86)\r\n\tat io.vertx.core.impl.DuplicatedContext.execute(DuplicatedContext.java:163)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:51)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n\tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:41)\r\n\tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:23)\r\n\tat io.vertx.sqlclient.impl.pool.SqlConnectionPool$1PoolRequest.handle(SqlConnectionPool.java:208)\r\n\tat io.vertx.sqlclient.impl.pool.SqlConnectionPool$1PoolRequest.handle(SqlConnectionPool.java:198)\r\n\tat io.vertx.sqlclient.impl.pool.SqlConnectionPool$1PoolRequest.handle(SqlConnectionPool.java:178)\r\n\tat io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)\r\n\tat io.vertx.core.impl.ContextBase.emit(ContextBase.java:239)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl.emit(SimpleConnectionPool.java:704)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2.run(SimpleConnectionPool.java:338)\r\n\tat io.vertx.core.net.impl.pool.CombinerExecutor.submit(CombinerExecutor.java:50)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool.execute(SimpleConnectionPool.java:245)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool.lambda$connect$2(SimpleConnectionPool.java:257)\r\n\tat io.vertx.sqlclient.impl.pool.SqlConnectionPool$2.lambda$connect$0(SqlConnectionPool.java:120)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.Mapping.onSuccess(Mapping.java:40)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.jav[23m1)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.Promise.complete(Promise.java:66)\r\n\tat io.vertx.sqlclient.impl.ConnectionFactoryBase.lambda$doConnectWithRetry$2(ConnectionFactoryBase.java:111)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n\tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:41)\r\n\tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:23)\r\n\tat io.vertx.sqlclient.impl.command.CommandResponse.fire(CommandResponse.java:46)\r\n\tat io.vertx.sqlclient.impl.SocketConnectionBase.handleMessage(SocketConnectionBase.java:287)\r\n\tat io.vertx.sqlclient.impl.SocketConnectionBase.lambda$init$0(SocketConnectionBase.java:100)\r\n\tat io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)\r\n\tat io.vertx.core.impl.ContextBase.emit(ContextBase.java:239)\r\n\tat io.vertx.core.net.impl.NetSocketImpl.handleMessage(NetSocketImpl.java:394)\r\n\tat io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:155)\r\n\tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\tat io.vertx.mysqlclient.impl.codec.MySQLEncoder.handleCommandResponse(MySQLEncoder.java:63)\r\n\tat io.vertx.mysqlclient.impl.codec.InitialHandshakeCommandCodec.handleAuthentication(InitialHandshakeCommandCodec.java:170)\r\n\tat io.vertx.mysqlclient.impl.codec.InitialHandshakeCommandCodec.decodePayload(InitialHandshakeCommandCodec.java:63)\r\n\tat io.vertx.mysqlclient.impl.codec.MySQLDecoder.decodePacket(MySQLDecoder.java:78)\r\n\tat io.vertx.mysqlclient.impl.codec.MySQLDecoder.decode(MySQLDecoder.java:66)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n\tSuppressed: java.lang.IllegalStateException: The current operation requires a safe (isolated) Vert.x sub-context, but the current context hasn't been flagged as such. You can still use Hibernate Reactive, you just need to avoid using the methods which implicitly require accessing the stateful context, such as MutinySessionFactory#withTransaction and #withSession.\r\n\t\tat io.quarkus.vertx.core.runtime.context.VertxContextSafetyToggle.checkIsSafe(VertxContextSafetyToggle.java:89)\r\n\t\tat io.quarkus.vertx.core.runtime.context.VertxContextSafetyToggle.validateContextIfExists(VertxContextSafetyToggle.java:72)\r\n\t\tat io.quarkus.hibernate.reactive.runtime.customized.CheckingVertxContext.remove(CheckingVertxContext.java:52)\r\n\t\tat org.hibernate.reactive.mutiny.impl.MutinySessionFactoryImpl.lambda$withSession$19(MutinySessionFactoryImpl.java:253)\r\n\t\tat io.smallrye.mutiny.Uni.lambda$eventually$1(Uni.java:573)\r\n\t\tat io.smallrye.context.impl.wrappers.SlowContextualBiConsumer.accept(SlowContextualBiConsumer.java:21)\r\n\t\tat io.smallrye.mutiny.operators.uni.UniOnItemOrFailureConsume$UniOnItemOrFailureConsumeProcessor.invokeCallback(UniOnItemOrFailureConsume.java:55)\r\n\t\t... 122 more\r\nCaused by: java.lang.IllegalStateException: The current operation requires a safe (isolated) Vert.x sub-context, but the current context hasn't been flagged as such. You can still use Hibernate Reactive, you just need to avoid using the methods which implicitly require accessing the stateful context, such as MutinySessionFactory#withTransaction and #withSession.\r\n\tat io.quarkus.vertx.core.runtime.context.VertxContextSafetyToggle.checkIsSafe(VertxContextSafetyToggle.java:89)\r\n\tat io.quarkus.vertx.core.runtime.context.VertxContextSafetyToggle.validateContextIfExists(VertxContextSafetyToggle.java:72)\r\n\tat io.quarkus.hibernate.reactive.runtime.customized.CheckingVertxContext.put(CheckingVertxContext.java:40)\r\n\tat org.hibernate.reactive.mutiny.impl.MutinySessionFactoryImpl.lambda$withSession$17(MutinySessionFactoryImpl.java:251)\r\n\tat io.smallrye.mutiny.groups.UniOnItem.lambda$invoke$0(UniOnItem.java:59)\r\n\tat io.smallrye.context.impl.wrappers.SlowContextualConsumer.accept(SlowContextualConsumer.java:21)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor.invokeEventHandler(UniOnItemConsume.java:77)\r\n\t... 119 more\r\n```\n\n### How to Reproduce?\n\nI've tried to strip things down to a simple conceptual example:\r\n\r\n*Primary Maven Dependencies*\r\n\r\n```\r\n<dependency>\r\n  <groupId>io.quarkus</groupId>\r\n  <artifactId>quarkus-picocli</artifactId>\r\n</dependency>\r\n<dependency>\r\n  <groupId>io.quarkus</groupId>\r\n  <artifactId>quarkus-hibernate-reactive</artifactId>\r\n</dependency>\r\n<dependency>\r\n  <groupId>io.quarkus</groupId>\r\n  <artifactId>quarkus-reactive-mysql-client</artifactId>\r\n</dependency>\r\n```\r\n\r\n*Picocli Command Class*\r\n\r\n```\r\npackage com.anon.site;\r\n\r\nimport javax.enterprise.context.control.ActivateRequestContext;\r\nimport javax.inject.Inject;\r\nimport javax.transaction.Transactional;\r\n\r\nimport org.hibernate.reactive.mutiny.Mutiny;\r\nimport org.jboss.logging.Logger;\r\n\r\nimport picocli.CommandLine.Command;\r\nimport picocli.CommandLine.Option;\r\nimport picocli.CommandLine.Parameters;\r\n\r\n@Command(name = \"create\", description = \"Creates new users in the application by inserting SQL records.\")\r\npublic class CreateCommand implements Runnable {\r\n\r\n    @Parameters(index = \"0\", description = \"Username of the new user.\")\r\n    String username;\r\n\r\n    @Option(names = {\"-d\", \"--description\"}, description = \"Personal description of the new user.\", defaultValue = \"Quite type.\")\r\n    String description;\r\n\r\n    @Inject\r\n    Mutiny.SessionFactory sessionFactory;\r\n\r\n    @Override\r\n    @Transactional\r\n    @ActivateRequestContext\r\n    public void run() {\r\n        sessionFactory.withTransaction((session, transaction) -> {\r\n            return session.find(User.class, username)\r\n                .map(user -> {\r\n                    if (user == null) {\r\n                        user = new User();\r\n                        user.setUserName(username);\r\n                    }\r\n\r\n                    user.setDescription(description);\r\n                    return setting;\r\n                })\r\n                .flatMap(setting -> session.persist(setting));\r\n        })\r\n        .await().indefinitely();\r\n    }\r\n\r\n}\r\n\r\n```\n\n### Output of `uname -a` or `ver`\n\nLinux user 5.15.0-46-generic #49-Ubuntu SMP Thu Aug 4 18:03:25 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"17.0.4\" 2022-07-19 LTS OpenJDK Runtime Environment Corretto-17.0.4.8.1 (build 17.0.4+8-LTS) OpenJDK 64-Bit Server VM Corretto-17.0.4.8.1 (build 17.0.4+8-LTS, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.11.2\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.5\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27339/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27339/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
