{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35920",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35920/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35920/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35920/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35920",
  "id": 1895082397,
  "node_id": "I_kwDOCFbutM5w9Kmd",
  "number": 35920,
  "title": "Unable to add additional handling when OIDC provider is not available",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/288",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/288",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/288/labels",
    "id": 10189838,
    "node_id": "MI_kwDOCFbutM4Am3wO",
    "number": 288,
    "title": "3.7.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 432,
    "state": "closed",
    "created_at": "2023-11-15T08:06:53Z",
    "updated_at": "2024-05-17T12:27:49Z",
    "due_on": null,
    "closed_at": "2024-01-17T13:52:08Z"
  },
  "comments": 3,
  "created_at": "2023-09-13T18:58:11Z",
  "updated_at": "2023-12-17T22:05:04Z",
  "closed_at": "2023-12-17T22:05:00Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI am trying to add additional handling for my app when upon startup it isn't able to connect to my OIDC provider. \r\nHowever, when trying to pass a @Observes StartupEvent, the OIDC discovery has already been performed - whether it failed or not. \r\nIs there a way to have this that when it isn't able to connect to my OIDC provider, I can invoke a customized handling? For example, \r\nsending message up to a messaging stream, customize logging or system.exit or something else...\r\n\r\n![image](https://github.com/quarkusio/quarkus/assets/77258047/2bc7b2c0-f8fd-4975-a0c8-5ad978fb598d)\r\n\n\n### Expected behavior\n\nUpon getting the 'Discovery has failed' or the exception: io.quarkus.oidc.common.runtime.OidcEndpointAccessException, I should be able to have a way to catch and invoke a customized handling either sending message up to a messaging stream, customize logging or system.exit or something else...\n\n### Actual behavior\n\nUnable to catch the exception and attempt through @Observes StartupEvent is already after the OIDC discovery stage.\n\n### How to Reproduce?\n\nReproduce:\r\n\r\nSteps to reproduce the behavior:\r\n1. Configure quarkus app that uses OIDC provider - with jwt or none. \r\n2. Pass in an unreachable OIDC provider url. \r\n3. Start app, logs will show similar to the attached image above.\n\n### Output of `uname -a` or `ver`\n\n22.04.1-Ubuntu\n\n### Output of `java -version`\n\nOracle GraalVM 17.0.8+9.1\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\nQuarkus 3.2.4.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35920/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35920/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
