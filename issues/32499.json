{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32499",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32499/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32499/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32499/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/32499",
  "id": 1659296437,
  "node_id": "I_kwDOCFbutM5i5tq1",
  "number": 32499,
  "title": "Kubernetes client thread block",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1654772125,
      "node_id": "MDU6TGFiZWwxNjU0NzcyMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kubernetes",
      "name": "area/kubernetes",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/244",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/244",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/244/labels",
    "id": 9248154,
    "node_id": "MI_kwDOCFbutM4AjR2a",
    "number": 244,
    "title": "3.0.0.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 69,
    "state": "closed",
    "created_at": "2023-04-05T07:44:54Z",
    "updated_at": "2023-06-01T22:54:36Z",
    "due_on": null,
    "closed_at": "2023-04-12T12:23:31Z"
  },
  "comments": 14,
  "created_at": "2023-04-07T23:48:16Z",
  "updated_at": "2023-04-20T10:02:27Z",
  "closed_at": "2023-04-20T09:59:40Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI'm currently experimenting with kubernetes client and grapqhl. Basically what I'm trying to do is create a namespace, pod, deployment, or whatever you want based on request. But I'm experiencing an issue when I'm using Uni as a response for Graphql response. If I try the same code without Uni it works perfectly fine but the moment I put the method as async then it starts throwing this error (Error is thrown a couple of times):\r\n\r\n```\r\n [io.ver.cor.imp.BlockedThreadChecker] (vertx-blocked-thread-checker) Thread Thread[vert.x-eventloop-thread-7,5,main] has been blocked for 2384 ms, time limit is 2000 ms: io.vertx.core.VertxException: Thread blocked\r\n\tat java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)\r\n\tat java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)\r\n\tat java.base@17.0.6/java.util.concurrent.CompletableFuture$Signaller.block(CompletableFuture.java:1866)\r\n\tat java.base@17.0.6/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)\r\n\tat java.base@17.0.6/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)\r\n\tat java.base@17.0.6/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1939)\r\n\tat java.base@17.0.6/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.OperationSupport.waitForResult(OperationSupport.java:528)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.OperationSupport.handleResponse(OperationSupport.java:566)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.OperationSupport.handlePatch(OperationSupport.java:443)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.OperationSupport.handlePatch(OperationSupport.java:420)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.BaseOperation.handlePatch(BaseOperation.java:717)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperation.lambda$patch$2(HasMetadataOperation.java:219)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperation$$Lambda$813/0x000000080108f860.apply(Unknown Source)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperation.patch(HasMetadataOperation.java:224)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperation.patch(HasMetadataOperation.java:239)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.BaseOperation.serverSideApply(BaseOperation.java:1136)\r\n\tat io.fabric8.kubernetes.client.dsl.internal.BaseOperation.serverSideApply(BaseOperation.java:93)\r\n\tat io.fabric8.kubernetes.client.extension.ResourceAdapter.serverSideApply(ResourceAdapter.java:325)\r\n\tat com.company.backplane.conductor.service.DeploymentServiceImpl.deployApplication(DeploymentServiceImpl.java:72)\r\n\tat com.company.backplane.conductor.service.DeploymentServiceImpl_ClientProxy.deployApplication(Unknown Source)\r\n\tat java.base@17.0.6/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base@17.0.6/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base@17.0.6/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base@17.0.6/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat io.smallrye.graphql.execution.datafetcher.helper.ReflectionInvoker.invoke(ReflectionInvoker.java:93)\r\n\tat io.quarkus.smallrye.graphql.runtime.spi.datafetcher.QuarkusUniDataFetcher.handleUserMethodCallNonBlocking(QuarkusUniDataFetcher.java:44)\r\n\tat io.quarkus.smallrye.graphql.runtime.spi.datafetcher.QuarkusUniDataFetcher.handleUserMethodCall(QuarkusUniDataFetcher.java:26)\r\n\tat io.quarkus.smallrye.graphql.runtime.spi.datafetcher.AbstractAsyncDataFetcher.invokeAndTransform(AbstractAsyncDataFetcher.java:38)\r\n\tat io.smallrye.graphql.execution.datafetcher.AbstractDataFetcher.get(AbstractDataFetcher.java:63)\r\n\tat graphql.execution.instrumentation.dataloader.DataLoaderDispatcherInstrumentation.lambda$instrumentDataFetcher$0(DataLoaderDispatcherInstrumentation.java:86)\r\n\tat graphql.execution.instrumentation.dataloader.DataLoaderDispatcherInstrumentation$$Lambda$1043/0x000000080121ba88.get(Unknown Source)\r\n\tat graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:282)\r\n\tat graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:211)\r\n\tat graphql.execution.ExecutionStrategy.resolveField(ExecutionStrategy.java:183)\r\n\tat graphql.execution.AsyncSerialExecutionStrategy.lambda$execute$1(AsyncSerialExecutionStrategy.java:47)\r\n\tat graphql.execution.AsyncSerialExecutionStrategy$$Lambda$1029/0x0000000801211c48.apply(Unknown Source)\r\n\tat graphql.execution.Async.eachSequentiallyImpl(Async.java:191)\r\n\tat graphql.execution.Async.eachSequentially(Async.java:180)\r\n\tat graphql.execution.AsyncSerialExecutionStrategy.execute(AsyncSerialExecutionStrategy.java:42)\r\n\tat graphql.execution.Execution.executeOperation(Execution.java:159)\r\n\tat graphql.execution.Execution.execute(Execution.java:105)\r\n\tat graphql.GraphQL.execute(GraphQL.java:645)\r\n\tat graphql.GraphQL.lambda$parseValidateAndExecute$11(GraphQL.java:564)\r\n\tat graphql.GraphQL$$Lambda$1018/0x0000000801214fd0.apply(Unknown Source)\r\n\tat java.base@17.0.6/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)\r\n\tat java.base@17.0.6/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2309)\r\n\tat graphql.GraphQL.parseValidateAndExecute(GraphQL.java:559)\r\n\tat graphql.GraphQL.executeAsync(GraphQL.java:527)\r\n\tat io.smallrye.graphql.execution.ExecutionService.lambda$writeAsync$0(ExecutionService.java:209)\r\n\tat io.smallrye.graphql.execution.ExecutionService$$Lambda$979/0x0000000801202ac8.get(Unknown Source)\r\n\tat io.smallrye.context.impl.wrappers.SlowContextualSupplier.get(SlowContextualSupplier.java:21)\r\n\tat io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage.subscribe(UniCreateFromCompletionStage.java:24)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.groups.UniSubscribe.withSubscriber(UniSubscribe.java:51)\r\n\tat io.smallrye.mutiny.groups.UniSubscribe.with(UniSubscribe.java:110)\r\n\tat io.smallrye.mutiny.groups.UniSubscribe.with(UniSubscribe.java:88)\r\n\tat io.smallrye.graphql.execution.ExecutionService.writeAsync(ExecutionService.java:211)\r\n\tat io.smallrye.graphql.execution.ExecutionService.execute(ExecutionService.java:191)\r\n\tat io.smallrye.graphql.execution.ExecutionService.executeAsync(ExecutionService.java:119)\r\n\tat io.quarkus.smallrye.graphql.runtime.SmallRyeGraphQLExecutionHandler.doRequest(SmallRyeGraphQLExecutionHandler.java:305)\r\n\tat io.quarkus.smallrye.graphql.runtime.SmallRyeGraphQLExecutionHandler.handlePost(SmallRyeGraphQLExecutionHandler.java:121)\r\n\tat io.quarkus.smallrye.graphql.runtime.SmallRyeGraphQLExecutionHandler.doHandle(SmallRyeGraphQLExecutionHandler.java:82)\r\n\tat io.quarkus.smallrye.graphql.runtime.SmallRyeGraphQLAbstractHandler.handleWithIdentity(SmallRyeGraphQLAbstractHandler.java:95)\r\n\tat io.quarkus.smallrye.graphql.runtime.SmallRyeGraphQLAbstractHandler.handle(SmallRyeGraphQLAbstractHandler.java:76)\r\n\tat io.quarkus.smallrye.graphql.runtime.SmallRyeGraphQLAbstractHandler.handle(SmallRyeGraphQLAbstractHandler.java:30)\r\n\tat io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1284)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:141)\r\n\tat io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.doEnd(BodyHandlerImpl.java:358)\r\n\tat io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.end(BodyHandlerImpl.java:335)\r\n\tat io.vertx.ext.web.handler.impl.BodyHandlerImpl$$Lambda$946/0x00000008011ed8b0.handle(Unknown Source)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:264)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:246)\r\n\tat io.vertx.core.http.impl.HttpEventHandler.handleEnd(HttpEventHandler.java:76)\r\n\tat io.vertx.core.http.impl.Http1xServerRequest.onEnd(Http1xServerRequest.java:581)\r\n\tat io.vertx.core.http.impl.Http1xServerRequest.lambda$pendingQueue$1(Http1xServerRequest.java:130)\r\n\tat io.vertx.core.http.impl.Http1xServerRequest$$Lambda$943/0x00000008011e8f28.handle(Unknown Source)\r\n\tat io.vertx.core.streams.impl.InboundBuffer.handleEvent(InboundBuffer.java:239)\r\n\tat io.vertx.core.streams.impl.InboundBuffer.write(InboundBuffer.java:129)\r\n\tat io.vertx.core.http.impl.Http1xServerRequest.handleEnd(Http1xServerRequest.java:562)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection$$Lambda$948/0x00000008011edf20.handle(Unknown Source)\r\n\tat io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:76)\r\n\tat io.vertx.core.impl.DuplicatedContext.execute(DuplicatedContext.java:153)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.onEnd(Http1xServerConnection.java:191)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.onContent(Http1xServerConnection.java:181)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.handleOther(Http1xServerConnection.java:161)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:149)\r\n\tat io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:157)\r\n\tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)\r\n\tat io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base@17.0.6/java.lang.Thread.run(Thread.java:833)\r\n```\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Actual behavior\r\n\r\n_No response_\r\n\r\n### How to Reproduce?\r\n\r\nReproducer:\r\n\r\n1. Create a new project\r\n2. Create class DeploymentService for example\r\n3. Insert this java code:\r\n```java\r\n@GraphQLApi\r\n@Startup\r\n@ApplicationScoped\r\npublic class DeploymentServiceImpl {\r\n\r\n    private static final String NAMESPACE = \"this-is-a-test\";\r\n\r\n    private final Logger logger = LoggerFactory.getLogger(DeploymentServiceImpl.class);\r\n\r\n    @Inject\r\n    KubernetesClient kubernetesClient;\r\n\r\n    @PostConstruct\r\n    public void postConstruct() {\r\n        Uni.createFrom().item(1).onItem().delayIt().by(Duration.ofSeconds(5)).onItem().invoke(this::init).subscribe().with(\r\n                item -> logger.info(\"Kubernetes client initialized\"),\r\n                throwable -> logger.error(\"Error while initializing kubernetes client\", throwable)\r\n        );\r\n    }\r\n\r\n    public void init() {\r\n        logger.info(\"Kubernetes client: {}\", kubernetesClient.hashCode());\r\n        Namespace ns = new NamespaceBuilder().withNewMetadata().withName(NAMESPACE).addToLabels(\"this\", \"rocks\").endMetadata()\r\n                .build();\r\n        logger.info(\"Created namespace: {}\", kubernetesClient.resource(ns).serverSideApply());\r\n        kubernetesClient.namespaces().withName(NAMESPACE).delete();\r\n        logger.info(\"Done.\");\r\n    }\r\n\r\n    @Mutation\r\n    public Uni<DeploymentStatusResponse> deployApplication(@Id String applicationId) throws InterruptedException {\r\n        logger.info(\"Kubernetes client: {}\", kubernetesClient.hashCode());\r\n        \r\n        logger.info(\"Current thread: {}\", Thread.currentThread().getName());\r\n        logger.info(\"All threads: {}\", Thread.getAllStackTraces().keySet());\r\n\r\n        Namespace ns = new NamespaceBuilder().withNewMetadata().withName(NAMESPACE).addToLabels(\"this\", \"rocks\").endMetadata()\r\n                .build();\r\n\r\n        kubernetesClient.resource(ns).serverSideApply();\r\n\r\n        System.out.println(\"testNamespace = \" + ns);\r\n        return Uni.createFrom().item(new DeploymentStatusResponse());\r\n    }\r\n}\r\n```\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\njava version \"17.0.5\" 2022-10-18 LTS\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n3.0.0.Beta1\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nGradle 8.0.2\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32499/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32499/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
