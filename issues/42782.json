{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42782",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42782/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42782/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42782/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/42782",
  "id": 2488791408,
  "node_id": "I_kwDOCFbutM6UV_Fw",
  "number": 42782,
  "title": "Lookup of trusted proxies by hostname broken due to DNS issues in Vert.x",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1320737519,
      "node_id": "MDU6TGFiZWwxMzIwNzM3NTE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/vertx",
      "name": "area/vertx",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2024-08-27T09:31:50Z",
  "updated_at": "2024-08-27T12:54:50Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nAs part of https://github.com/quarkusio/quarkus/issues/29888 (cc: @michalvavrik) a check was added for the address of the proxy which the proxy uses to connect to Quarkus.\r\n\r\nWhen using the option `quarkus.http.proxy.trusted-proxies`, it allows passing in a hostname that is then resolved via a DNS lookup. While this is expected to be slower and not recommended, I found that there is behavior in Vert.x 4.x that make is impossible to work with some DNS servers with the current implementation. I also see obstacles in mixed IPv4/IPv6 environments, CNAMEs and multiple IP addresses assigned to a host. \n\n### Expected behavior\n\nFor an incoming request the host name should be resolved to an IP address to be checked against the incoming IP address.\r\n\r\nThe description doesn't provide much how IPv4 and IPv6 are handled here. One could expect that remote IPv4 remote addresses are matched against host's resolved IPv4 addresses, and IPv6 remote addresses are matched against host's resolved IPv6 addresses. Also CNAME handling could be expected. \n\n### Actual behavior\n\nWith Vert.x 4.x, a one DNS query asking for both A and AAAA records will be sent. Only some DNS servers support it, while other don't. This was first reported here in the lase commend to this Vert.x issue: https://github.com/eclipse-vertx/vert.x/issues/5035#issuecomment-1973039058\r\n\r\nApparently the behavior changed in Vert.x 5.x and will now send two separate queries, which is expected to work with all DNS servers.\r\n\r\nIn my case, the DNS queries lead always lead to timeouts after several seconds as a reply was never received, so my Quarkus application practically stopped. \r\n\r\nLooking at the code, the `DnsClient.lookup()` will return \"The first found\". So if a hostname has both an IPv4 and IPv6 address, only one of them will be matched independent if the remote IP address is an IPv4 or an IPv6 address.\r\n\r\nWhile there is no description on how hostnames are handled, there seems to be no handling of multiple A and AAAA entries for a hostname, and no handling of CNAMEs. \r\n\r\n\r\n\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\nInstead of `lookup()`, the methods `resolveA()` and `resolveAAAA()` could be better suited to resolve all IP addresses of a host depending if the caller is using an IPv4 or IPv6 address. Still this leaves the CNAME handling on the table to handled as well. \r\n\r\nIn the context of Keycloak where I'm currently evaluating this, I might not expose the functionality of passing in a host name either temporarily (given the open issues I see above), or permanently given the performance impacts the DNS look will have even if it succeeds until a Keycloak user shows a use case where this should be supported.\r\n\r\nSo from the perspective of Keycloak, I would be ok if the functionality to pass in a hostname would be deprecated and eventually dropped. \r\n\r\nThere is a discussion related to the same Quarkus option on a different subject here: #42760",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42782/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42782/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
