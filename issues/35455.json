{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35455",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35455/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35455/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35455/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35455",
  "id": 1860740605,
  "node_id": "I_kwDOCFbutM5u6KX9",
  "number": 35455,
  "title": "Simplify and Document how to customize the \"wait-for\" image when using init tasks on kubernetes",
  "labels": [
    {
      "id": 1617558663,
      "node_id": "MDU6TGFiZWwxNjE3NTU4NjYz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/epic",
      "name": "kind/epic",
      "color": "28a846",
      "default": false,
      "description": "Large issue with links to sub-issues"
    },
    {
      "id": 1654772125,
      "node_id": "MDU6TGFiZWwxNjU0NzcyMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kubernetes",
      "name": "area/kubernetes",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2323889171,
      "node_id": "MDU6TGFiZWwyMzIzODg5MTcx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/jbang",
      "name": "area/jbang",
      "color": "0052cc",
      "default": false,
      "description": "Issues related to when using jbang.dev with Quarkus"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/274",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/274",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/274/labels",
    "id": 9889574,
    "node_id": "MI_kwDOCFbutM4Alucm",
    "number": 274,
    "title": "3.5.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 229,
    "state": "closed",
    "created_at": "2023-09-06T06:54:19Z",
    "updated_at": "2023-11-01T08:32:25Z",
    "due_on": null,
    "closed_at": "2023-10-11T12:10:19Z"
  },
  "comments": 2,
  "created_at": "2023-08-22T07:00:06Z",
  "updated_at": "2023-09-26T17:59:21Z",
  "closed_at": "2023-09-26T17:59:20Z",
  "active_lock_reason": null,
  "body": "### Context\r\n\r\nWhen using an init task (Liquibase, Flyway, or soon Kafka and AMQP), Quarkus generates multiple resources:\r\n\r\n- a pod containing two containers: the application and an init-container waiting for the init job to run\r\n- a job running the application container using specific parameters to run the init tasks.\r\n\r\nNote that each init task runs in a separate job and introduces another init container in the application pod.\r\n\r\nBy default, Quarkus init-container uses the `https://github.com/groundnuty/k8s-wait-for/` image to wait for the job execution.\r\nThe init container runs that image with the following command line argument: `job <name of the job>`.\r\nAlso, Quarkus generates a service account, adding the view-jobs roles (batch -> job -> get) to allow the init container to check the job execution status.\r\n\r\n### Problem\r\n\r\nThe image used by default is not following our image recommendation and, at the moment, contains two critical CVEs and 11 high CVEs (and a myriad of minors and lows). \r\n\r\nFortunately, it's possible to customize the image. However, the process is a bit cumbersome. \r\nFirst, you need to provide an image following the exact same \"way\" to run and not requiring any more permission than \"batch->jobs->GET\" (so you cannot list the jobs). Then, you need to configure for each init task:\r\n\r\n```\r\nquarkus.kubernetes.init-tasks.coffeeshop-service-kafka-topic-init.image=quay.io/cescoffi/wait-for-job\r\n```\r\n\r\nThe `coffeeshop-service-kafka-topic-init` mixes the task name and the application name. As reported in #35436, an end user can't guess this name (without reading the Quarkus code).\r\n\r\nAlso, you need to comply with the launch parameter of the container and the granted permissions.\r\n\r\n### Some parts of the solution\r\n\r\nI came up with a containerized JBang script replacing the \"wait-for\" image:\r\n\r\n```java\r\n///usr/bin/env jbang \"$0\" \"$@\" ; exit $?\r\n//DEPS info.picocli:picocli:4.6.3\r\n//DEPS io.fabric8:kubernetes-client:6.8.1\r\n\r\nimport picocli.CommandLine;\r\nimport picocli.CommandLine.Command;\r\nimport picocli.CommandLine.Parameters;\r\n\r\nimport java.util.concurrent.Callable;\r\n\r\nimport io.fabric8.kubernetes.api.model.batch.v1.Job;\r\nimport io.fabric8.kubernetes.client.KubernetesClient;\r\nimport io.fabric8.kubernetes.client.KubernetesClientBuilder;\r\n\r\n@Command(name = \"WaitForJob\", mixinStandardHelpOptions = true, version = \"WaitForJob 0.1\", description = \"WaitForJob made with jbang\")\r\nclass WaitForJob implements Callable<Integer> {\r\n\r\n    @Parameters(index = \"0\", description = \"The `job` string\")\r\n    private String ignored;\r\n\r\n    @Parameters(index = \"1\", description = \"The job name (mandatory)\")\r\n    private String name;\r\n\r\n    public static void main(String... args) {\r\n        int exitCode = new CommandLine(new WaitForJob()).execute(args);\r\n        System.exit(exitCode);\r\n    }\r\n\r\n    @Override\r\n    public Integer call() throws Exception {\r\n        if (name == null || name.isBlank()) {\r\n            throw new IllegalArgumentException(\"The job name must be set\");\r\n        }\r\n\r\n        KubernetesClient client = new KubernetesClientBuilder().build();\r\n\r\n        long begin = System.currentTimeMillis();\r\n        // Wait for 10 min before given up\r\n        while (System.currentTimeMillis() - begin < 10 * 60 * 1000) {\r\n            Job job = client.batch().v1().jobs().withName(name).get();            \r\n            if (job == null) {\r\n                System.out.println(\"Job \" + name + \" not found\");\r\n            } else {                \r\n                if (job.getStatus().getActive() != null && job.getStatus().getActive() == 1) {\r\n                    System.out.println(\"Job \" + name + \" found: active: \" + job.getStatus().getActive() + \", succeeded: \"\r\n                        + job.getStatus().getSucceeded() + \", failed: \" + job.getStatus().getFailed());\r\n                    return 0;\r\n                }\r\n                System.out.println(\"Job \" + name + \" found: active: \" + job.getStatus().getActive() + \", succeeded: \"\r\n                        + job.getStatus().getSucceeded() + \", failed: \" + job.getStatus().getFailed());\r\n            }\r\n            Thread.sleep(2000);\r\n        }\r\n        System.out.println(\"Job still not executed correctly - exiting\");\r\n        return -1;\r\n    }\r\n}\r\n```\r\n\r\n```dockerfile\r\n# syntax=docker/dockerfile:1.4\r\n\r\n# Step 1 - build a jbang application\r\nFROM jbangdev/jbang-action as builder\r\nWORKDIR /\r\n\r\nCOPY ./WaitForJob.java /\r\n\r\nRUN chmod +x WaitForJob.java && mkdir out\r\nRUN jbang export portable -O output/waitForJob.jar WaitForJob.java\r\n\r\n# Step 2 - build the image that will wait for the job to be executed.\r\nFROM registry.access.redhat.com/ubi9/openjdk-17-runtime:1.15\r\n\r\nCOPY --from=builder /out /out\r\nENTRYPOINT [\"java\", \"-jar\", \"out/waitForJob.jar\"]\r\n```\r\n\r\nOnce built and deployed, you can replace the init container image.\r\n\r\n\r\n### Pending issues\r\n\r\n- [x] - #35436 about the property name\r\n- [x] - it should be possible to replace the image using a single global parameter\r\n- [ ] - it's not possible to configure the additional permission that the container needs (like the list permission)\r\n- [ ] - it's not possible to configure the image pull strategy for that image (you cannot set it to always)\r\n- [ ] - it's not possible to configure how the container is launched (\"job <name of the job>\")",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35455/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35455/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
