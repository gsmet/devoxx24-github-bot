{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39351",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39351/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39351/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39351/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/39351",
  "id": 2181190283,
  "node_id": "I_kwDOCFbutM6CAlKL",
  "number": 39351,
  "title": "Feature Request: Immediate Exception Handling for Unreachable Kafka Broker",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1654772125,
      "node_id": "MDU6TGFiZWwxNjU0NzcyMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kubernetes",
      "name": "area/kubernetes",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1658790125,
      "node_id": "MDU6TGFiZWwxNjU4NzkwMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kafka",
      "name": "area/kafka",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 8,
  "created_at": "2024-03-12T09:56:01Z",
  "updated_at": "2024-03-13T13:52:16Z",
  "closed_at": "2024-03-13T13:01:07Z",
  "active_lock_reason": null,
  "body": "### Description\n\nHello, Quarkus team,\r\nI've been working with the quarkus-smallrye-reactive-messaging-kafka extension and would like to discuss an enhancement that could greatly improve handling and control of Kafka messaging within Quarkus.\r\nCurrently, the SmallRye Reactive Messaging Kafka extension defaults to resilience through automatic retries when a Kafka broker is unreachable due to network issues or broker downtime. While this is generally effective, it does not cover all use cases and can introduce issues in some scenarios.\r\nTo illustrate this, let's consider an application that sends messages to Kafka:\r\n\r\n```\r\n@Path(\"/publish\")\r\npublic class MessageResource {\r\n\r\n    @Channel(\"message-topic\") \r\n    Emitter<Message> emitter;\r\n\r\n    @POST\r\n    @Consumes(MediaType.APPLICATION_JSON)\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    public String publish(Message message) {\r\n        emitter.send(message);\r\n        return \"Message sent successfully!\";\r\n    }\r\n}\r\n```\r\n\r\nIn this example, if the Kafka broker is unreachable, the emitter.send(message) line would not immediately fail. Instead, it would hold the messages in memory and continually retry, which could lead to significant issues because:\r\nThe application could be evicted by an orchestrator (like Kubernetes) at any time due to resource constraints or during normal operations, such as rolling updates. This eviction could lead to significant data loss if there are unsent messages held in memory.\r\nThe current setup offers no inherent ability to manage failure in message publishing. If an immediate exception were thrown when the broker is unreachable, it would trigger a failure mechanism, thus enhancing the robustness and reliability of the application.\r\nHaving the ability to choose between immediate exception or retries when the Kafka broker is unreachable would increase the flexibility and control developers have over their message-producing applications.\r\n\r\nThank you for considering this feature request\r\nBest Regards,\r\n\r\n\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39351/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39351/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
