{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33832",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33832/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33832/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33832/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33832",
  "id": 1742153499,
  "node_id": "I_kwDOCFbutM5n1ycb",
  "number": 33832,
  "title": "Panache adding @XmlTransient to fields breaks (de)serialization in RestAssured",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1273026134,
      "node_id": "MDU6TGFiZWwxMjczMDI2MTM0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/panache",
      "name": "area/panache",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/250",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/250",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/250/labels",
    "id": 9407630,
    "node_id": "MI_kwDOCFbutM4Aj4yO",
    "number": 250,
    "title": "3.2.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 244,
    "state": "closed",
    "created_at": "2023-05-17T07:29:12Z",
    "updated_at": "2023-11-15T13:59:38Z",
    "due_on": null,
    "closed_at": "2023-06-21T13:08:09Z"
  },
  "comments": 3,
  "created_at": "2023-06-05T16:43:54Z",
  "updated_at": "2023-06-08T12:37:37Z",
  "closed_at": "2023-06-08T12:37:32Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nIf I define an entity like so:\r\n\r\n```java\r\n@Entity\r\n@XmlRootElement(name = \"myentity\")\r\npublic class MyEntity extends PanacheEntity {\r\n    public String field;\r\n\r\n    public String getField() {\r\n        return field;\r\n    }\r\n\r\n    public void setField(String field) {\r\n        this.field = field;\r\n    }\r\n}\r\n```\r\n\r\nAnd use RestEasy classic with Jackson serialization in my resource:\r\n\r\n```java\r\n    @GET\r\n    @Path(\"/{id}\")\r\n    @Produces(MediaType.APPLICATION_JSON)\r\n    public MyEntity get(@PathParam(\"id\") Long id) {\r\n        return MyEntity.findById(id);\r\n    }\r\n```\r\n\r\nAnd try to use RestAssured's serialization in my tests:\r\n\r\n```java\r\n        MyEntity deserializedEntity = given()\r\n                .when().get(\"/hello/1\")\r\n                .then()\r\n                .statusCode(200)\r\n                .extract().body().as(MyEntity.class);\r\n        assertThat(deserializedEntity).isNotNull();\r\n        assertThat(deserializedEntity.getField()).isEqualTo(\"field-1\");\r\n```\r\n\r\nThen everything on the server side will work fine, but RestAssured's serialization will always return an empty instance (all fields null).\r\n\r\nNOTE: This example is admittedly contrived, but relevant because we have [similar code in our integration tests](https://github.com/quarkusio/quarkus/blob/af90b6301dd96c4ff03adc0b9dd20da400155fc3/integration-tests/hibernate-orm-tenancy/connection-resolver/src/main/java/io/quarkus/it/hibernate/multitenancy/fruit/Fruit.java) that starts failing because of this bug in another PR of mine (#32876, that PR attempts to make Panache work on private fields as well).\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Actual behavior\r\n\r\n_No response_\r\n\r\n### How to Reproduce?\r\n\r\nSee https://github.com/yrodiere/quarkus-playground/tree/panache-xml-transient\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n_No response_\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\nI have reasons to believe the problem is related to Panache adding `@XmlTransient` automatically to public fields it transforms:\r\n\r\n```java\r\n@Entity\r\n@XmlRootElement(\r\n   name = \"myentity\"\r\n)\r\n@EnhancementInfo(\r\n   version = \"6.2.1.Final\"\r\n)\r\npublic class MyEntity extends PanacheEntity implements ManagedEntity, PersistentAttributeInterceptable, SelfDirtinessTracker {\r\n   @XmlTransient\r\n   protected String field;\r\n\r\n   // [...]\r\n\r\n   public String getField() {\r\n      return this.$$_hibernate_read_field();\r\n   }\r\n\r\n   public void setField(String field) {\r\n      this.$$_hibernate_write_field(field);\r\n   }\r\n\r\n   // [...]\r\n}\r\n```\r\n\r\nMaybe the serialization that RestAssured relies on does not handle `@XmlTransient` correctly... Regardless, I think `@XmlAccessorType(PROPERTY)` would better fit Panache's intent, and may not cause this bug?\r\n\r\nI'll try that and send a PR.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33832/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33832/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
