{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38337",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38337/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38337/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38337/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38337",
  "id": 2094430771,
  "node_id": "I_kwDOCFbutM581noz",
  "number": 38337,
  "title": "query error in ftsearch() when not wrapping with \"\"",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2024-01-22T17:42:19Z",
  "updated_at": "2024-01-22T20:39:12Z",
  "closed_at": "2024-01-22T20:39:10Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nAccording the resolution of the issue #38330, I removed the wrapping \"\" on the query in th call of ftsearch() function.\r\n\r\nI have a now a new error and the call still doesn't work\r\n\r\n### Expected behavior\r\n\r\nAfter this call : \r\n```\r\nString query = \"@voie:{\"+idVoie+\"} @pk:[\"+pkDebut+\" \"+pkFin+\"]\";\r\nStringBuilder retour = new StringBuilder(\"\");\r\nSearchQueryResponse result = searchc.ftSearch(index, query);\r\n```\r\n\r\nI expect to receive the key corresponding to the query.\r\n\r\n### Actual behavior\r\n\r\nThis call provide the following error : \r\n\r\n> 2024-01-22 18:39:35,648 ERROR [io.qua.ver.htt.run.QuarkusErrorHandler] (executor-thread-1) HTTP Request to /referentiel/check failed, error id: 4e11f30b-e282-4d12-8b29-fff3090e8a1b-2: java.lang.RuntimeException: Multi is a Map\r\n> \tat io.vertx.redis.client.impl.types.MultiType.get(MultiType.java:114)\r\n> \tat io.vertx.mutiny.redis.client.Response.get(Response.java:189)\r\n> \tat io.quarkus.redis.runtime.datasource.ReactiveSearchCommandsImpl.decodeSearchQueryResult(ReactiveSearchCommandsImpl.java:188)\r\n> \tat io.quarkus.redis.runtime.datasource.ReactiveSearchCommandsImpl.lambda$ftSearch$7(ReactiveSearchCommandsImpl.java:181)\r\n> \tat io.smallrye.context.impl.wrappers.SlowContextualFunction.apply(SlowContextualFunction.java:21)\r\n> \tat io.smallrye.mutiny.operators.uni.UniOnItemTransform$UniOnItemTransformProcessor.onItem(UniOnItemTransform.java:36)\r\n> \tat io.smallrye.mutiny.vertx.AsyncResultUni.lambda$subscribe$1(AsyncResultUni.java:35)\r\n> \tat io.smallrye.mutiny.vertx.DelegatingHandler.handle(DelegatingHandler.java:25)\r\n> \tat io.quarkus.redis.runtime.client.ObservableRedis.lambda$send$1(ObservableRedis.java:54)\r\n> \tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n> \tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n> \tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n> \tat io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)\r\n> \tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n> \tat io.vertx.core.impl.future.FutureImpl.addListener(FutureImpl.java:196)\r\n> \tat io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)\r\n> \tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n> \tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n> \tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n> \tat io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n> \tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n> \tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n> \tat io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)\r\n> \tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n> \tat io.vertx.core.impl.future.SucceededFuture.addListener(SucceededFuture.java:88)\r\n> \tat io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)\r\n> \tat io.vertx.core.impl.future.FutureImpl$ListenerArray.onSuccess(FutureImpl.java:262)\r\n> \tat io.vertx.core.impl.future.FutureBase.lambda$emitSuccess$0(FutureBase.java:54)\r\n> \tat io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:86)\r\n> \tat io.vertx.core.impl.DuplicatedContext.execute(DuplicatedContext.java:184)\r\n> \tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:51)\r\n> \tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n> \tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n> \tat io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n> \tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:41)\r\n> \tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:23)\r\n> \tat io.vertx.core.net.impl.pool.Endpoint.lambda$getConnection$0(Endpoint.java:52)\r\n> \tat io.vertx.redis.client.impl.RedisConnectionManager$RedisEndpoint.lambda$requestConnection$0(RedisConnectionManager.java:438)\r\n> \tat io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)\r\n> \tat io.vertx.core.impl.EventLoopContext.lambda$emit$1(EventLoopContext.java:62)\r\n> \tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)\r\n> \tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)\r\n> \tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n> \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)\r\n> \tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n> \tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n> \tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n> \tat java.base/java.lang.Thread.run(Thread.java:833)\r\n\r\n\r\n### How to Reproduce?\r\n\r\nYou can find the reproducer here : \r\n`https://github.com/stephane-drogou/redis-search-example`\r\n\r\nOn this repository : https://github.com/stephane-drogou/redis-search-example.git\r\n\r\nI update it by removing the wrapping \"\"\r\n\r\nTo reproduce it you have to do the following commandsd in redis-cli : \r\n```\r\nft.create idx:voiture on hash prefix 1 voiture:dyn: schema pk numeric sortable voie tag sortable\r\nhmset voiture:dyn:001 pk 10 voie c8l2\r\nhmset voiture:dyn:002 pk 22 voie c8l2\r\nhmset voiture:dyn:003 pk 10 voie c9l2\r\nhmset voiture:dyn:004 pk 14 voie c8l2\r\n```\r\n\r\nThen the code corresponds to the following command : \r\n`ft.search idx:voiture \"@voie:{c8l2} @pk:[8 16]\"`\r\n\r\nIt provides a REST endpoint to be tested : `/referentiel/check`\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n_No response_\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38337/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38337/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
