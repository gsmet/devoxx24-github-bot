{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25378",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25378/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25378/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25378/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25378",
  "id": 1225963714,
  "node_id": "I_kwDOCFbutM5JErjC",
  "number": 25378,
  "title": "Can't hook app into Red Hat managed apicurio service",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1654772125,
      "node_id": "MDU6TGFiZWwxNjU0NzcyMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kubernetes",
      "name": "area/kubernetes",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/193",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/193",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/193/labels",
    "id": 8159705,
    "node_id": "MI_kwDOCFbutM4AfIHZ",
    "number": 193,
    "title": "2.10.2.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 41,
    "state": "closed",
    "created_at": "2022-07-04T14:37:59Z",
    "updated_at": "2023-02-21T15:10:00Z",
    "due_on": null,
    "closed_at": "2022-07-06T12:17:12Z"
  },
  "comments": 6,
  "created_at": "2022-05-04T20:58:02Z",
  "updated_at": "2022-07-04T14:42:02Z",
  "closed_at": "2022-06-29T17:53:00Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI'm trying to \"hook\" my application into the Red Hat managed service registry/kafka by following [this blog post](https://developers.redhat.com/articles/2022/03/23/quarkus-superheroes-managed-services-save-day).\r\n\r\nThe Quarkus superheroes app runs fine against the apicurio instance that gets deployed if you run `oc apply -f https://raw.githubusercontent.com/quarkusio/quarkus-super-heroes/main/deploy/k8s/java17-openshift.yml`, but once trying to follow the guide and connect to the managed services, the app blows up with the following exception.\r\n\r\n[The blog post](https://developers.redhat.com/articles/2022/03/23/quarkus-superheroes-managed-services-save-day) was written with Quarkus `2.7.3`. I tried with Quarkus `2.7.5` and its still broken, with each Quarkus version up to and including `2.8.2`.\r\n\r\nThe app does seem to successfully create the schema within the managed service registry instance.\r\n\r\n```\r\n20:22:34 ERROR [io.sm.re.me.kafka] (smallrye-kafka-producer-thread-0) SRMSG18260: Unable to recover from the serialization failure (topic: fights), configure a SerializationFailureHandler to recover from errors.: java.lang.RuntimeException: java.util.concurrent.ExecutionException: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"references\" (class io.apicurio.registry.rest.v2.beans.ArtifactMetaData), not marked as ignorable (15 known properties: \"modifiedBy\", \"createdOn\", \"modifiedOn\", \"name\", \"state\", \"properties\", \"contentId\", \"version\", \"type\", \"id\", \"description\", \"globalId\", \"createdBy\", \"groupId\", \"labels\"])\r\n at [Source: (byte[])\"{\"name\":\"Fight\",\"createdBy\":\"service-account-srvc-acct-10e65eb4-bbe3-4e65-ab1f-9e336da98c2b\",\"createdOn\":\"2022-05-04T20:22:34+0000\",\"modifiedBy\":\"service-account-srvc-acct-10e65eb4-bbe3-4e65-ab1f-9e336da98c2b\",\"modifiedOn\":\"2022-05-04T20:22:34+0000\",\"id\":\"fights-value\",\"version\":\"1\",\"type\":\"AVRO\",\"globalId\":1,\"state\":\"ENABLED\",\"contentId\":1,\"references\":[]}\"; line: 1, column: 358] (through reference chain: io.apicurio.registry.rest.v2.beans.ArtifactMetaData[\"references\"])\r\n\tat io.apicurio.rest.client.util.ConcurrentUtil.get(ConcurrentUtil.java:29)\r\n\tat io.apicurio.rest.client.util.ConcurrentUtil.get(ConcurrentUtil.java:13)\r\n\tat io.apicurio.rest.client.util.ConcurrentUtil.result(ConcurrentUtil.java:40)\r\n\tat io.apicurio.rest.client.VertxHttpClient.sendRequest(VertxHttpClient.java:122)\r\n\tat io.apicurio.registry.rest.client.impl.RegistryClientImpl.createArtifact(RegistryClientImpl.java:236)\r\n\tat io.apicurio.registry.rest.client.RegistryClient.createArtifact(RegistryClient.java:139)\r\n\tat io.apicurio.registry.resolver.DefaultSchemaResolver.lambda$handleAutoCreateArtifact$2(DefaultSchemaResolver.java:189)\r\n\tat io.apicurio.registry.resolver.ERCache.lambda$getValue$0(ERCache.java:132)\r\n\tat io.apicurio.registry.resolver.ERCache.retry(ERCache.java:171)\r\n\tat io.apicurio.registry.resolver.ERCache.getValue(ERCache.java:131)\r\n\tat io.apicurio.registry.resolver.ERCache.getByContent(ERCache.java:116)\r\n\tat io.apicurio.registry.resolver.DefaultSchemaResolver.handleAutoCreateArtifact(DefaultSchemaResolver.java:187)\r\n\tat io.apicurio.registry.resolver.DefaultSchemaResolver.resolveSchema(DefaultSchemaResolver.java:90)\r\n\tat io.apicurio.registry.serde.AbstractKafkaSerializer.serialize(AbstractKafkaSerializer.java:83)\r\n\tat io.smallrye.reactive.messaging.kafka.fault.SerializerWrapper.lambda$serialize$1(SerializerWrapper.java:56)\r\n\tat io.smallrye.reactive.messaging.kafka.fault.SerializerWrapper.wrapSerialize(SerializerWrapper.java:81)\r\n\tat io.smallrye.reactive.messaging.kafka.fault.SerializerWrapper.serialize(SerializerWrapper.java:56)\r\n\tat org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:945)\r\n\tat org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:905)\r\n\tat io.smallrye.reactive.messaging.kafka.impl.ReactiveKafkaProducer.lambda$send$3(ReactiveKafkaProducer.java:111)\r\n\tat io.smallrye.context.impl.wrappers.SlowContextualConsumer.accept(SlowContextualConsumer.java:21)\r\n\tat io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter.subscribe(UniCreateWithEmitter.java:22)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniRunSubscribeOn.lambda$subscribe$0(UniRunSubscribeOn.java:27)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\nCaused by: java.util.concurrent.ExecutionException: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"references\" (class io.apicurio.registry.rest.v2.beans.ArtifactMetaData), not marked as ignorable (15 known properties: \"modifiedBy\", \"createdOn\", \"modifiedOn\", \"name\", \"state\", \"properties\", \"contentId\", \"version\", \"type\", \"id\", \"description\", \"globalId\", \"createdBy\", \"groupId\", \"labels\"])\r\n at [Source: (byte[])\"{\"name\":\"Fight\",\"createdBy\":\"service-account-srvc-acct-10e65eb4-bbe3-4e65-ab1f-9e336da98c2b\",\"createdOn\":\"2022-05-04T20:22:34+0000\",\"modifiedBy\":\"service-account-srvc-acct-10e65eb4-bbe3-4e65-ab1f-9e336da98c2b\",\"modifiedOn\":\"2022-05-04T20:22:34+0000\",\"id\":\"fights-value\",\"version\":\"1\",\"type\":\"AVRO\",\"globalId\":1,\"state\":\"ENABLED\",\"contentId\":1,\"references\":[]}\"; line: 1, column: 358] (through reference chain: io.apicurio.registry.rest.v2.beans.ArtifactMetaData[\"references\"])\r\n\tat java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)\r\n\tat java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2073)\r\n\tat io.apicurio.rest.client.util.ConcurrentUtil.get(ConcurrentUtil.java:21)\r\n\t... 26 more\r\nCaused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"references\" (class io.apicurio.registry.rest.v2.beans.ArtifactMetaData), not marked as ignorable (15 known properties: \"modifiedBy\", \"createdOn\", \"modifiedOn\", \"name\", \"state\", \"properties\", \"contentId\", \"version\", \"type\", \"id\", \"description\", \"globalId\", \"createdBy\", \"groupId\", \"labels\"])\r\n at [Source: (byte[])\"{\"name\":\"Fight\",\"createdBy\":\"service-account-srvc-acct-10e65eb4-bbe3-4e65-ab1f-9e336da98c2b\",\"createdOn\":\"2022-05-04T20:22:34+0000\",\"modifiedBy\":\"service-account-srvc-acct-10e65eb4-bbe3-4e65-ab1f-9e336da98c2b\",\"modifiedOn\":\"2022-05-04T20:22:34+0000\",\"id\":\"fights-value\",\"version\":\"1\",\"type\":\"AVRO\",\"globalId\":1,\"state\":\"ENABLED\",\"contentId\":1,\"references\":[]}\"; line: 1, column: 358] (through reference chain: io.apicurio.registry.rest.v2.beans.ArtifactMetaData[\"references\"])\r\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)\r\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1127)\r\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1989)\r\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1700)\r\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1678)\r\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:319)\r\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:176)\r\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:322)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3707)\r\n\tat io.apicurio.rest.client.response.ResponseHandler.handle(ResponseHandler.java:50)\r\n\tat io.apicurio.rest.client.response.ResponseHandler.handle(ResponseHandler.java:18)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.handleDispatchResponse(HttpContext.java:400)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.execute(HttpContext.java:387)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.next(HttpContext.java:365)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.fire(HttpContext.java:332)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.dispatchResponse(HttpContext.java:294)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.lambda$null$8(HttpContext.java:550)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:100)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:63)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:38)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t... 1 more\r\n```\r\n\r\nFollow the steps in https://developers.redhat.com/articles/2022/03/23/quarkus-superheroes-managed-services-save-day",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25378/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25378/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
