{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20003",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20003/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20003/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20003/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20003",
  "id": 991115816,
  "node_id": "MDU6SXNzdWU5OTExMTU4MTY=",
  "number": 20003,
  "title": "Missing session id in Resteasy Reactive",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346627,
      "node_id": "MDU6TGFiZWw5ODUzNDY2Mjc=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/wontfix",
      "name": "triage/wontfix",
      "color": "ffffff",
      "default": false,
      "description": "This will not be worked on"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 5,
  "created_at": "2021-09-08T13:03:36Z",
  "updated_at": "2022-03-09T12:36:51Z",
  "closed_at": "2022-03-09T12:36:46Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWe're basically missing two bits when using Resteasy Reactive:\r\n1. Session ID in the requests\r\n2. How to programmatically invalidate sessions\r\n\r\nWith Resteasy + Undertow, in order to invalidate sessions, we could do something like:\r\n\r\n```\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.ws.rs.PUT;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.core.Context;\r\n\r\n@Path(\"/session\")\r\npublic class SessionResource {\r\n    @PUT\r\n    @Path(\"/invalidate\")\r\n    public void invalidate(final @Context HttpServletRequest req) {\r\n        req.getSession().invalidate();\r\n    }\r\n}\r\n```\r\n\r\nAnd then, we could get the session ID in the HTTP response. Example using Restassured:\r\n\r\n```\r\nResponse first = app.given().get(\"/cat/customFindDistinctivePrimitive/2\");\r\nString sessionId = first.sessionId();\r\n```\r\n\r\nHowever, with Resteasy Reactive, this is no longer possible:\r\n- The session ID is not generated. (In undertow, it was done [here](https://github.com/quarkusio/quarkus/blob/57177330363224f0c58b1420084139538e6f85aa/extensions/undertow/runtime/src/main/java/io/quarkus/undertow/runtime/UndertowDeploymentRecorder.java#L166))\r\n- To invalidate the session, \"javax.servlet\" dependency is not part of the Resteasy Reactive dependency, so the class HttpServletRequest is missing. Is there some way to achieve the same?\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20003/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20003/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
