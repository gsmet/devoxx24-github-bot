{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40805",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40805/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40805/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40805/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/40805",
  "id": 2311492406,
  "node_id": "I_kwDOCFbutM6JxpM2",
  "number": 40805,
  "title": "During IT: Redis host not configured ",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 5085228218,
      "node_id": "LA_kwDOCFbutM8AAAABLxpsug",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/needs-feedback",
      "name": "triage/needs-feedback",
      "color": "FDE078",
      "default": false,
      "description": "We are waiting for feedback."
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 12,
  "created_at": "2024-05-22T21:13:55Z",
  "updated_at": "2024-08-05T13:03:59Z",
  "closed_at": "2024-08-05T13:03:59Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI'm attempting to add integration tests to a project, but I can't get it when extension `container-image-docker` is installed.\r\n\r\nIt errors with ` Redis host not configured - you must either configure 'quarkus.redis.hosts` or 'quarkus.redis.host-provider-name' and have a bean providing the hosts programmatically.`\r\n\r\n----\r\n\r\nTesting against the mock `@QuarkusTest` tests runs fine: `./mvnw verify`\r\n\r\n```\r\n[INFO] -------------------------------------------------------                                                                                                                                             \r\n[INFO]  T E S T S                                                                                                                                                                                          \r\n[INFO] -------------------------------------------------------                                                                                                                                             \r\n[INFO] |                                                                                                                                                                                                   \r\n[INFO] +-- Data REST Resource\r\n[INFO] | +-- [OK] Endpoint: GET /data - 0.777 ss\r\n[INFO] |\r\n[INFO] +-- Hello REST Resource\r\n[INFO] | +-- [OK] Endpoint: GET /hello - 0.018 ss\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0\r\n```\r\n\r\nTesting again integration `@QuarkusIntegrationTest` with plugin `container-image-docker` runs:  `./mvnw verify -Dnative -Dquarkus.container-image.build=true`:\r\n\r\n```\r\n❯ ./mvnw verify -Dnative -Dquarkus.container-image.build=true                                                                                                                                              \r\nWarning: JAVA_HOME environment variable is not set.                                                                                                                                                        \r\n[INFO] Scanning for projects...                                                                                                                                                                            \r\n[INFO] \r\n[INFO] ------------< com.johnmanko:quarkus-redis-service-example >-------------\r\n[INFO] Building quarkus-redis-service-example 1.0.0-SNAPSHOT\r\n[INFO]   from pom.xml\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- resources:3.3.1:resources (default-resources) @ quarkus-redis-service-example ---\r\n[INFO] Copying 1 resource from src/main/resources to target/classes\r\n[INFO] \r\n[INFO] --- quarkus:3.10.0:generate-code (default) @ quarkus-redis-service-example ---\r\n[INFO] \r\n[INFO] --- compiler:3.12.1:compile (default-compile) @ quarkus-redis-service-example ---\r\n[INFO] Nothing to compile - all classes are up to date.\r\n[INFO] \r\n[INFO] --- quarkus:3.10.0:generate-code-tests (default) @ quarkus-redis-service-example ---\r\n[INFO] \r\n[INFO] --- resources:3.3.1:testResources (default-testResources) @ quarkus-redis-service-example ---\r\n[INFO] skip non existing resourceDirectory /path/to/projects/github/quarkus-redis-service-example/src/test/resources\r\n[INFO] \r\n[INFO] --- compiler:3.12.1:testCompile (default-testCompile) @ quarkus-redis-service-example ---\r\n[INFO] Nothing to compile - all classes are up to date.\r\n[INFO] \r\n[INFO] --- surefire:3.2.5:test (default-test) @ quarkus-redis-service-example ---\r\n[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider\r\n[INFO] \r\n[INFO] -------------------------------------------------------\r\n[INFO]  T E S T S\r\n[INFO] -------------------------------------------------------\r\n[INFO] |\r\n[INFO] +-- Data REST Resource\r\n[INFO] | +-- [OK] Endpoint: GET /data - 0.788 ss\r\n[INFO] |\r\n[INFO] +-- Hello REST Resource\r\n[INFO] | +-- [OK] Endpoint: GET /hello - 0.019 ss\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO] \r\n[INFO] \r\n[INFO] --- jar:3.3.0:jar (default-jar) @ quarkus-redis-service-example ---\r\n[INFO] Building jar: /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT.jar\r\n[INFO] \r\n[INFO] --- quarkus:3.10.0:build (default) @ quarkus-redis-service-example ---\r\n[WARNING] [io.quarkus.config] Unrecognized configuration key \"quarkus.container-image.build\" was provided; it will be ignored; verify that the dependency extension for this configuration is set or that you did not make a typo\r\n[WARNING] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Cannot find the `native-image` in the GRAALVM_HOME, JAVA_HOME and System PATH. Install it using `gu install native-image` Attempting to fall back to container build.\r\n[INFO] [io.quarkus.deployment.pkg.steps.JarResultBuildStep] Building native image source jar: /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT-native-image-source-jar/quarkus-redis-service-example-1.0.0-SNAPSHOT-runner.jar\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Building native image from /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT-native-image-source-jar/quarkus-redis-service-example-1.0.0-SNAPSHOT-runner.jar\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildContainerRunner] Using docker to run the native image builder\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildContainerRunner] Pulling builder image 'quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21'\r\njdk-21: Pulling from quarkus/ubi-quarkus-mandrel-builder-image\r\nDigest: sha256:9c134352bb0fcc04f6de0bbbda0d32b27b61d564b7c3140d09687269dc57e197\r\nStatus: Image is up to date for quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21\r\nquay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21\r\n\r\nWhat's Next?\r\n  1. Sign in to your Docker account → docker login\r\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Running Quarkus native-image plugin on MANDREL 23.1.3.1 JDK 21.0.3+9-LTS\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] docker run --env LANG=C --rm --user 0 -v /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT-native-image-source-jar:/project:z --name build-native-KspLE quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21 -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dlogging.initial-configurator.min-level=500 -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=3 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Duser.language=en -J-Duser.country=US -J-Dfile.encoding=UTF-8 --features=io.quarkus.runner.Feature,io.quarkus.runtime.graal.DisableLoggingFeature -J--add-exports=java.security.jgss/sun.security.krb5=ALL-UNNAMED -J--add-opens=java.base/java.text=ALL-UNNAMED -J--add-opens=java.base/java.io=ALL-UNNAMED -J--add-opens=java.base/java.lang.invoke=ALL-UNNAMED -J--add-opens=java.base/java.util=ALL-UNNAMED -H:+UnlockExperimentalVMOptions -H:BuildOutputJSONFile=quarkus-redis-service-example-1.0.0-SNAPSHOT-runner-build-output-stats.json -H:-UnlockExperimentalVMOptions --strict-image-heap -H:+UnlockExperimentalVMOptions -H:+AllowFoldMethods -H:-UnlockExperimentalVMOptions -J-Djava.awt.headless=true --no-fallback --link-at-build-time -H:+UnlockExperimentalVMOptions -H:+ReportExceptionStackTraces -H:-UnlockExperimentalVMOptions -H:-AddAllCharsets --enable-url-protocols=http,https --enable-monitoring=heapdump -H:+UnlockExperimentalVMOptions -H:-UseServiceLoaderFeature -H:-UnlockExperimentalVMOptions -J--add-exports=org.graalvm.nativeimage/org.graalvm.nativeimage.impl=ALL-UNNAMED --exclude-config io\\.netty\\.netty-codec /META-INF/native-image/io\\.netty/netty-codec/generated/handlers/reflect-config\\.json --exclude-config io\\.netty\\.netty-handler /META-INF/native-image/io\\.netty/netty-handler/generated/handlers/reflect-config\\.json quarkus-redis-service-example-1.0.0-SNAPSHOT-runner -jar quarkus-redis-service-example-1.0.0-SNAPSHOT-runner.jar\r\n========================================================================================================================\r\nGraalVM Native Image: Generating 'quarkus-redis-service-example-1.0.0-SNAPSHOT-runner' (executable)...\r\n========================================================================================================================\r\nFor detailed information and explanations on the build output, visit:\r\nhttps://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/BuildOutput.md\r\n------------------------------------------------------------------------------------------------------------------------\r\n[1/8] Initializing...                                                                                    (4.2s @ 0.16GB)\r\n Java version: 21.0.3+9-LTS, vendor version: Mandrel-23.1.3.1-Final\r\n Graal compiler: optimization level: 2, target machine: x86-64-v3\r\n C compiler: gcc (redhat, x86_64, 8.5.0)\r\n Garbage collector: Serial GC (max heap size: 80% of RAM)\r\n 3 user-specific feature(s):\r\n - com.oracle.svm.thirdparty.gson.GsonFeature\r\n - io.quarkus.runner.Feature: Auto-generated class by Quarkus from the existing extensions\r\n - io.quarkus.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase\r\n------------------------------------------------------------------------------------------------------------------------\r\n 3 experimental option(s) unlocked:\r\n - '-H:+AllowFoldMethods' (origin(s): command line)\r\n - '-H:BuildOutputJSONFile' (origin(s): command line)\r\n - '-H:-UseServiceLoaderFeature' (origin(s): command line)\r\n------------------------------------------------------------------------------------------------------------------------\r\nBuild resources:\r\n - 16.92GB of memory (61.7% of 27.42GB system memory, determined at start)\r\n - 8 thread(s) (100.0% of 8 available processor(s), determined at start)\r\n[2/8] Performing analysis...  [*****]                                                                   (21.6s @ 1.01GB)\r\n   12,590 reachable types   (87.0% of   14,475 total)\r\n   18,290 reachable fields  (58.8% of   31,112 total)\r\n   65,127 reachable methods (54.4% of  119,809 total)\r\n    3,930 types,   137 fields, and 3,591 methods registered for reflection\r\n       61 types,    61 fields, and    55 methods registered for JNI access\r\n        4 native libraries: dl, pthread, rt, z\r\n[3/8] Building universe...                                                                               (4.4s @ 1.43GB)\r\n[4/8] Parsing methods...      [**]                                                                       (2.2s @ 1.88GB)\r\n[5/8] Inlining methods...     [***]                                                                      (1.3s @ 1.36GB)\r\n[6/8] Compiling methods...    [****]                                                                    (16.7s @ 1.67GB)\r\n[7/8] Layouting methods...    [**]                                                                       (3.4s @ 1.35GB)\r\n[8/8] Creating image...       [**]                                                                       (4.7s @ 1.88GB)\r\n  26.14MB (47.30%) for code area:    42,246 compilation units\r\n  28.73MB (51.99%) for image heap:  326,006 objects and 56 resources\r\n 403.43kB ( 0.71%) for other data\r\n  55.27MB in total\r\n------------------------------------------------------------------------------------------------------------------------\r\nTop 10 origins of code area:                                Top 10 object types in image heap:\r\n  12.76MB java.base                                            8.39MB byte[] for code metadata\r\n   1.92MB c.f.jackson.core.jackson-databind-2.17.0.jar         4.34MB byte[] for java.lang.String\r\n   1.38MB svm.jar (Native Image)                               3.14MB java.lang.Class\r\n   1.17MB q.0.0-SNAPSHOT-runner.jar                            2.96MB java.lang.String\r\n   1.05MB modified-io.vertx.vertx-core-4.5.7.jar               1.06MB byte[] for general heap data\r\n 591.41kB com.fasterxml.jackson.core.jackson-core-2.17.0.jar   1.06MB com.oracle.svm.core.hub.DynamicHubCompanion\r\n 512.42kB io.netty.netty-buffer-4.1.108.Final.jar            748.35kB byte[] for reflection metadata\r\n 504.89kB io.netty.netty-common-4.1.108.Final.jar            589.57kB java.lang.String[]\r\n 439.36kB io.netty.netty-codec-http-4.1.108.Final.jar        489.23kB java.util.HashMap$Node\r\n 409.14kB io.netty.netty-transport-4.1.108.Final.jar         457.34kB c.o.svm.core.hub.DynamicHub$ReflectionMetadata\r\n   5.14MB for 90 more packages                                 5.56MB for 3175 more object types\r\n------------------------------------------------------------------------------------------------------------------------\r\nRecommendations:\r\n HEAP: Set max heap for improved and more predictable memory usage.\r\n CPU:  Enable more CPU features with '-march=native' for improved performance.\r\n------------------------------------------------------------------------------------------------------------------------\r\n                        4.9s (8.2% of total time) in 76 GCs | Peak RSS: 3.53GB | CPU load: 6.18\r\n------------------------------------------------------------------------------------------------------------------------\r\nProduced artifacts:\r\n /project/quarkus-redis-service-example-1.0.0-SNAPSHOT-runner (executable)\r\n /project/quarkus-redis-service-example-1.0.0-SNAPSHOT-runner-build-output-stats.json (build_info)\r\n========================================================================================================================\r\nFinished generating 'quarkus-redis-service-example-1.0.0-SNAPSHOT-runner' in 59.2s.\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] docker run --env LANG=C --rm --user 0 -v /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT-native-image-source-jar:/project:z --entrypoint /bin/bash quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21 -c objcopy --strip-debug quarkus-redis-service-example-1.0.0-SNAPSHOT-runner\r\n[INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 65344ms\r\n[INFO] \r\n[INFO] --- failsafe:3.2.5:integration-test (default) @ quarkus-redis-service-example ---\r\n[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider\r\n[INFO] \r\n[INFO] -------------------------------------------------------\r\n[INFO]  T E S T S\r\n[INFO] -------------------------------------------------------\r\n[INFO] Running com.johnmanko.service.data.DataEndpointResourceIT\r\nExecuting \"/path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT-runner -Dquarkus.http.port=8081 -Dquarkus.http.ssl-port=8444 -Dtest.url=http://localhost:8081 -Dquarkus.log.file.path=/path/to/projects/github/quarkus-redis-service-example/target/quarkus.log -Dquarkus.log.file.enable=true -Dquarkus.log.category.\"io.quarkus\".level=INFO -Dquarkus.container-image.build=true\"\r\n__  ____  __  _____   ___  __ ____  ______ \r\n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ \r\n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\   \r\n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/   \r\n2024-05-22 16:55:41,021 WARN  [io.qua.config] (main) Unrecognized configuration key \"quarkus.container-image.build\" was provided; it will be ignored; verify that the dependency extension for this configuration is set or that you did not make a typo\r\n2024-05-22 16:55:41,026 INFO  [io.quarkus] (main) quarkus-redis-service-example 1.0.0-SNAPSHOT native (powered by Quarkus 3.10.0) started in 0.014s. Listening on: http://0.0.0.0:8081\r\n2024-05-22 16:55:41,027 INFO  [io.quarkus] (main) Profile prod activated. \r\n2024-05-22 16:55:41,027 INFO  [io.quarkus] (main) Installed features: [cdi, redis-client, rest, rest-jackson, smallrye-context-propagation, vertx]\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.577 s -- in com.johnmanko.service.data.DataEndpointResourceIT\r\n[INFO] Running com.johnmanko.service.data.HelloEndpointResourceIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 s -- in com.johnmanko.service.data.HelloEndpointResourceIT\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO] \r\n[INFO] \r\n[INFO] --- failsafe:3.2.5:verify (default) @ quarkus-redis-service-example ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  01:17 min\r\n[INFO] Finished at: 2024-05-22T16:55:42-04:00\r\n[INFO] ------------------------------------------------------------------------\r\n                                                               \r\n```\r\n\r\nNow, adding the following extension and rerunning the IT native tests:\r\n\r\n```shell\r\n❯ quarkus extension add container-image-docker                                                                                                                                                             \r\n[SUCCESS] ✅  Extension io.quarkus:quarkus-container-image-docker has been installed                                                                                                                        \r\n ```\r\n\r\n```shell\r\n./mvnw verify -Dnative -Dquarkus.container-image.build=true \r\n```\r\n\r\n```\r\nWarning: JAVA_HOME environment variable is not set.                                                                                                                                                        \r\n[INFO] Scanning for projects...                                                                                                                                                                            \r\n[INFO] \r\n[INFO] ------------< com.johnmanko:quarkus-redis-service-example >-------------\r\n[INFO] Building quarkus-redis-service-example 1.0.0-SNAPSHOT\r\n[INFO]   from pom.xml\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- resources:3.3.1:resources (default-resources) @ quarkus-redis-service-example ---\r\n[INFO] Copying 1 resource from src/main/resources to target/classes\r\n[INFO] \r\n[INFO] --- quarkus:3.10.0:generate-code (default) @ quarkus-redis-service-example ---\r\n[INFO] \r\n[INFO] --- compiler:3.12.1:compile (default-compile) @ quarkus-redis-service-example ---\r\n[INFO] Nothing to compile - all classes are up to date.\r\n[INFO] \r\n[INFO] --- quarkus:3.10.0:generate-code-tests (default) @ quarkus-redis-service-example ---\r\n[INFO] \r\n[INFO] --- resources:3.3.1:testResources (default-testResources) @ quarkus-redis-service-example ---\r\n[INFO] skip non existing resourceDirectory /path/to/projects/github/quarkus-redis-service-example/src/test/resources\r\n[INFO] \r\n[INFO] --- compiler:3.12.1:testCompile (default-testCompile) @ quarkus-redis-service-example ---\r\n[INFO] Nothing to compile - all classes are up to date.\r\n[INFO] \r\n[INFO] --- surefire:3.2.5:test (default-test) @ quarkus-redis-service-example ---\r\n[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider\r\n[INFO] \r\n[INFO] -------------------------------------------------------\r\n[INFO]  T E S T S\r\n[INFO] -------------------------------------------------------\r\n[INFO] |\r\n[INFO] +-- Data REST Resource\r\n[INFO] | +-- [OK] Endpoint: GET /data - 0.837 ss\r\n[INFO] |\r\n[INFO] +-- Hello REST Resource\r\n[INFO] | +-- [OK] Endpoint: GET /hello - 0.025 ss\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO] \r\n[INFO] \r\n[INFO] --- jar:3.3.0:jar (default-jar) @ quarkus-redis-service-example ---\r\n[INFO] Building jar: /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT.jar\r\n[INFO] \r\n[INFO] --- quarkus:3.10.0:build (default) @ quarkus-redis-service-example ---\r\n[WARNING] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Cannot find the `native-image` in the GRAALVM_HOME, JAVA_HOME and System PATH. Install it using `gu install native-image` Attempting to fall back to container build.\r\n[INFO] [io.quarkus.deployment.pkg.steps.JarResultBuildStep] Building native image source jar: /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT-native-image-source-jar/quarkus-redis-service-example-1.0.0-SNAPSHOT-runner.jar\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Building native image from /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT-native-image-source-jar/quarkus-redis-service-example-1.0.0-SNAPSHOT-runner.jar\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildContainerRunner] Using docker to run the native image builder\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildContainerRunner] Pulling builder image 'quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21'\r\njdk-21: Pulling from quarkus/ubi-quarkus-mandrel-builder-image\r\nDigest: sha256:9c134352bb0fcc04f6de0bbbda0d32b27b61d564b7c3140d09687269dc57e197\r\nStatus: Image is up to date for quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21\r\nquay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21\r\n\r\nWhat's Next?\r\n  1. Sign in to your Docker account → docker login\r\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildStep] Running Quarkus native-image plugin on MANDREL 23.1.3.1 JDK 21.0.3+9-LTS\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] docker run --env LANG=C --rm --user 0 -v /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT-native-image-source-jar:/project:z --name build-native-GdKgZ quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21 -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dlogging.initial-configurator.min-level=500 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=3 -J-Duser.language=en -J-Duser.country=US -J-Dfile.encoding=UTF-8 --features=io.quarkus.runner.Feature,io.quarkus.runtime.graal.DisableLoggingFeature -J--add-exports=java.security.jgss/sun.security.krb5=ALL-UNNAMED -J--add-opens=java.base/java.text=ALL-UNNAMED -J--add-opens=java.base/java.io=ALL-UNNAMED -J--add-opens=java.base/java.lang.invoke=ALL-UNNAMED -J--add-opens=java.base/java.util=ALL-UNNAMED -H:+UnlockExperimentalVMOptions -H:BuildOutputJSONFile=quarkus-redis-service-example-1.0.0-SNAPSHOT-runner-build-output-stats.json -H:-UnlockExperimentalVMOptions --strict-image-heap -H:+UnlockExperimentalVMOptions -H:+AllowFoldMethods -H:-UnlockExperimentalVMOptions -J-Djava.awt.headless=true --no-fallback --link-at-build-time -H:+UnlockExperimentalVMOptions -H:+ReportExceptionStackTraces -H:-UnlockExperimentalVMOptions -H:-AddAllCharsets --enable-url-protocols=http,https --enable-monitoring=heapdump -H:+UnlockExperimentalVMOptions -H:-UseServiceLoaderFeature -H:-UnlockExperimentalVMOptions -J--add-exports=org.graalvm.nativeimage/org.graalvm.nativeimage.impl=ALL-UNNAMED --exclude-config io\\.netty\\.netty-codec /META-INF/native-image/io\\.netty/netty-codec/generated/handlers/reflect-config\\.json --exclude-config io\\.netty\\.netty-handler /META-INF/native-image/io\\.netty/netty-handler/generated/handlers/reflect-config\\.json quarkus-redis-service-example-1.0.0-SNAPSHOT-runner -jar quarkus-redis-service-example-1.0.0-SNAPSHOT-runner.jar\r\n========================================================================================================================\r\nGraalVM Native Image: Generating 'quarkus-redis-service-example-1.0.0-SNAPSHOT-runner' (executable)...\r\n========================================================================================================================\r\nFor detailed information and explanations on the build output, visit:\r\nhttps://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/BuildOutput.md\r\n------------------------------------------------------------------------------------------------------------------------\r\n[1/8] Initializing...                                                                                    (4.2s @ 0.16GB)\r\n Java version: 21.0.3+9-LTS, vendor version: Mandrel-23.1.3.1-Final\r\n Graal compiler: optimization level: 2, target machine: x86-64-v3\r\n C compiler: gcc (redhat, x86_64, 8.5.0)\r\n Garbage collector: Serial GC (max heap size: 80% of RAM)\r\n 3 user-specific feature(s):\r\n - com.oracle.svm.thirdparty.gson.GsonFeature\r\n - io.quarkus.runner.Feature: Auto-generated class by Quarkus from the existing extensions\r\n - io.quarkus.runtime.graal.DisableLoggingFeature: Disables INFO logging during the analysis phase\r\n------------------------------------------------------------------------------------------------------------------------\r\n 3 experimental option(s) unlocked:\r\n - '-H:+AllowFoldMethods' (origin(s): command line)\r\n - '-H:BuildOutputJSONFile' (origin(s): command line)\r\n - '-H:-UseServiceLoaderFeature' (origin(s): command line)\r\n------------------------------------------------------------------------------------------------------------------------\r\nBuild resources:\r\n - 16.86GB of memory (61.5% of 27.42GB system memory, determined at start)\r\n - 8 thread(s) (100.0% of 8 available processor(s), determined at start)\r\n[2/8] Performing analysis...  [*****]                                                                   (21.9s @ 0.98GB)\r\n   12,590 reachable types   (87.0% of   14,474 total)\r\n   18,290 reachable fields  (58.8% of   31,112 total)\r\n   65,132 reachable methods (54.4% of  119,820 total)\r\n    3,930 types,   137 fields, and 3,591 methods registered for reflection\r\n       61 types,    61 fields, and    55 methods registered for JNI access\r\n        4 native libraries: dl, pthread, rt, z\r\n[3/8] Building universe...                                                                               (3.4s @ 1.57GB)\r\n[4/8] Parsing methods...      [**]                                                                       (2.3s @ 1.52GB)\r\n[5/8] Inlining methods...     [***]                                                                      (1.3s @ 1.84GB)\r\n[6/8] Compiling methods...    [****]                                                                    (17.2s @ 1.61GB)\r\n[7/8] Layouting methods...    [**]                                                                       (3.6s @ 1.41GB)\r\n[8/8] Creating image...       [***]                                                                      (5.3s @ 1.33GB)\r\n  26.15MB (47.30%) for code area:    42,252 compilation units\r\n  28.74MB (51.98%) for image heap:  326,110 objects and 56 resources\r\n 404.32kB ( 0.71%) for other data\r\n  55.28MB in total\r\n------------------------------------------------------------------------------------------------------------------------\r\nTop 10 origins of code area:                                Top 10 object types in image heap:\r\n  12.76MB java.base                                            8.39MB byte[] for code metadata\r\n   1.92MB c.f.jackson.core.jackson-databind-2.17.0.jar         4.34MB byte[] for java.lang.String\r\n   1.38MB svm.jar (Native Image)                               3.14MB java.lang.Class\r\n   1.18MB q.0.0-SNAPSHOT-runner.jar                            2.96MB java.lang.String\r\n   1.05MB modified-io.vertx.vertx-core-4.5.7.jar               1.06MB byte[] for general heap data\r\n 591.41kB com.fasterxml.jackson.core.jackson-core-2.17.0.jar   1.06MB com.oracle.svm.core.hub.DynamicHubCompanion\r\n 512.44kB io.netty.netty-buffer-4.1.108.Final.jar            748.41kB byte[] for reflection metadata\r\n 504.96kB io.netty.netty-common-4.1.108.Final.jar            589.77kB java.lang.String[]\r\n 439.36kB io.netty.netty-codec-http-4.1.108.Final.jar        490.27kB java.util.HashMap$Node\r\n 409.13kB io.netty.netty-transport-4.1.108.Final.jar         457.34kB c.o.svm.core.hub.DynamicHub$ReflectionMetadata\r\n   5.14MB for 90 more packages                                 5.56MB for 3175 more object types\r\n------------------------------------------------------------------------------------------------------------------------\r\nRecommendations:\r\n HEAP: Set max heap for improved and more predictable memory usage.\r\n CPU:  Enable more CPU features with '-march=native' for improved performance.\r\n------------------------------------------------------------------------------------------------------------------------\r\n                        4.8s (8.0% of total time) in 153 GCs | Peak RSS: 3.53GB | CPU load: 6.18\r\n------------------------------------------------------------------------------------------------------------------------\r\nProduced artifacts:\r\n /project/quarkus-redis-service-example-1.0.0-SNAPSHOT-runner (executable)\r\n /project/quarkus-redis-service-example-1.0.0-SNAPSHOT-runner-build-output-stats.json (build_info)\r\n========================================================================================================================\r\nFinished generating 'quarkus-redis-service-example-1.0.0-SNAPSHOT-runner' in 59.9s.\r\n[INFO] [io.quarkus.deployment.pkg.steps.NativeImageBuildRunner] docker run --env LANG=C --rm --user 0 -v /path/to/projects/github/quarkus-redis-service-example/target/quarkus-redis-service-example-1.0.0-SNAPSHOT-native-image-source-jar:/project:z --entrypoint /bin/bash quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21 -c objcopy --strip-debug quarkus-redis-service-example-1.0.0-SNAPSHOT-runner\r\n[INFO] Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first\r\n[INFO] Found Docker environment with local Unix socket (unix:///var/run/docker.sock)\r\n[INFO] Docker host IP address is localhost\r\n[INFO] Connected to docker: \r\n  Server Version: 26.1.2\r\n  API Version: 1.45\r\n  Operating System: Ubuntu 23.10\r\n  Total Memory: 64225 MB\r\n[INFO] Image pull policy will be performed by: DefaultPullPolicy()\r\n[INFO] Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')\r\n[INFO] Checking the system...\r\n[INFO] ✔︎ Docker server version should be at least 1.6.0\r\n[INFO] [io.quarkus.container.image.docker.deployment.DockerProcessor] Starting (local) container image build for native binary using docker.\r\n[INFO] [io.quarkus.container.image.docker.deployment.DockerProcessor] Executing the following command to build docker image: 'docker build -f /path/to/projects/github/quarkus-redis-service-example/src/main/docker/Dockerfile.native -t john/quarkus-redis-service-example:1.0.0-SNAPSHOT /path/to/projects/github/quarkus-redis-service-example'\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #0 building with \"desktop-linux\" instance using docker driver\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #1 [internal] load build definition from Dockerfile.native\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #1 transferring dockerfile: 750B done\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #1 DONE 0.0s\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #2 [internal] load .dockerignore\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #2 transferring context: 115B done\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #2 DONE 0.0s\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #3 [internal] load metadata for registry.access.redhat.com/ubi8/ubi-minimal:8.9\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #3 DONE 0.5s\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #4 [1/4] FROM registry.access.redhat.com/ubi8/ubi-minimal:8.9@sha256:2fa47fa9df7b98e2776f447855699c01d06c3271b2d7259b8b314084580cf591\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #4 DONE 0.0s\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #5 [internal] load build context\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #5 transferring context: 57.83MB 0.3s done\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #5 DONE 0.4s\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #6 [2/4] WORKDIR /work/\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #6 CACHED\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #7 [3/4] RUN chown 1001 /work     && chmod \"g+rwX\" /work     && chown 1001:root /work\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #7 CACHED\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #8 [4/4] COPY --chown=1001:root target/*-runner /work/application\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #8 DONE 0.1s\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #9 exporting to image\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #9 exporting layers\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #9 exporting layers 0.2s done\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #9 writing image sha256:7e5e14ee3ff2170731e3e99b7d4ea65b4c994906f475e0d9eed97f92c2136ce8 done\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #9 naming to docker.io/john/quarkus-redis-service-example:1.0.0-SNAPSHOT done\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] #9 DONE 0.2s\r\n[INFO] [io.quarkus.deployment.util.ExecUtil] \r\n[INFO] [io.quarkus.deployment.util.ExecUtil] What's Next?\r\n[INFO] [io.quarkus.deployment.util.ExecUtil]   1. Sign in to your Docker account → docker login\r\n[INFO] [io.quarkus.deployment.util.ExecUtil]   2. View a summary of image vulnerabilities and recommendations → docker scout quickview\r\n[INFO] [io.quarkus.container.image.docker.deployment.DockerProcessor] Built container image john/quarkus-redis-service-example:1.0.0-SNAPSHOT\r\n\r\n[INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 67669ms\r\n[INFO] \r\n[INFO] --- failsafe:3.2.5:integration-test (default) @ quarkus-redis-service-example ---\r\n[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider\r\n[INFO] \r\n[INFO] -------------------------------------------------------\r\n[INFO]  T E S T S\r\n[INFO] -------------------------------------------------------\r\n[INFO] Running com.johnmanko.service.data.DataEndpointResourceIT\r\n2024-05-22 17:00:45,789 WARN  [org.tes.doc.DockerClientProviderStrategy] (main) Can't instantiate a strategy from org.testcontainers.dockerclient.UnixSocketClientProviderStrategy (ClassNotFoundException). This probably means that cached configuration refers to a client provider class that is not available in this version of Testcontainers. Other strategies will be tried instead.\r\n2024-05-22 17:00:45,790 ERROR [org.tes.doc.DockerClientProviderStrategy] (main) Could not find a valid Docker environment. Please check configuration. Attempted configurations were:\r\nAs no valid configuration was found, execution cannot continue.\r\nSee https://java.testcontainers.org/on_failure.html for more details.\r\n2024-05-22 17:00:46,554 INFO  [io.qua.tes.com.DefaultDockerContainerLauncher] (main) Executing \"docker run --name quarkus-integration-test-Dlbxl -i --rm -p 8081:8081 -p 8444:8444 --net=quarkus-integration-test-wZJCa --env QUARKUS_LOG_CATEGORY__IO_QUARKUS__LEVEL=INFO --env QUARKUS_HTTP_PORT=8081 --env QUARKUS_HTTP_SSL_PORT=8444 --env TEST_URL=http://localhost:8081 --env QUARKUS_CONTAINER_IMAGE_BUILD=true john/quarkus-redis-service-example:1.0.0-SNAPSHOT\"\r\nWaited 60 seconds for target/quarkus.log to contain info about the listening port and protocol but no such info was found. Check if the options quarkus.log.level and quarkus.log.file.level are at least INFO (or more verbose).\r\nFailed to launch the application. The application logs can be found at: /path/to/projects/github/quarkus-redis-service-example/target/quarkus.log\r\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 62.45 s <<< FAILURE! -- in com.johnmanko.service.data.DataEndpointResourceIT\r\n[ERROR] com.johnmanko.service.data.DataEndpointResourceIT.postLock -- Time elapsed: 0.007 s <<< ERROR!\r\njava.lang.RuntimeException: java.lang.IllegalStateException: Unable to determine the status of the running process. See the above logs for details\r\n        at io.quarkus.test.junit.QuarkusIntegrationTestExtension.throwBootFailureException(QuarkusIntegrationTestExtension.java:372)\r\n        at io.quarkus.test.junit.QuarkusIntegrationTestExtension.beforeEach(QuarkusIntegrationTestExtension.java:117)\r\n        at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)\r\n        at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)\r\nCaused by: java.lang.IllegalStateException: Unable to determine the status of the running process. See the above logs for details\r\n        at io.quarkus.test.common.LauncherUtil.waitForCapturedListeningData(LauncherUtil.java:102)\r\n        at io.quarkus.test.common.DefaultDockerContainerLauncher.start(DefaultDockerContainerLauncher.java:179)\r\n        at io.quarkus.test.junit.IntegrationTestUtil.startLauncher(IntegrationTestUtil.java:195)\r\n        at io.quarkus.test.junit.QuarkusIntegrationTestExtension.doProcessStart(QuarkusIntegrationTestExtension.java:300)\r\n        at io.quarkus.test.junit.QuarkusIntegrationTestExtension.ensureStarted(QuarkusIntegrationTestExtension.java:169)\r\n        at io.quarkus.test.junit.QuarkusIntegrationTestExtension.postProcessTestInstance(QuarkusIntegrationTestExtension.java:327)\r\n        at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n        at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n        at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)\r\n        at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n        at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n        at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n        at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n        at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n        at java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n        ... 1 more\r\n\r\n[INFO] Running com.johnmanko.service.data.HelloEndpointResourceIT\r\n[WARNING] Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.003 s -- in com.johnmanko.service.data.HelloEndpointResourceIT\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[ERROR] Errors: \r\n[ERROR]   DataEndpointResourceIT.postLock » Runtime java.lang.IllegalStateException: Unable to determine the status of the running process. See the above logs for details\r\n[INFO] \r\n[ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 1\r\n[INFO] \r\n[INFO] \r\n[INFO] --- failsafe:3.2.5:verify (default) @ quarkus-redis-service-example ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  02:20 min\r\n[INFO] Finished at: 2024-05-22T17:01:46-04:00\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-failsafe-plugin:3.2.5:verify (default) on project quarkus-redis-service-example: \r\n[ERROR] \r\n[ERROR] Please refer to /path/to/projects/github/quarkus-redis-service-example/target/failsafe-reports for the individual test results.\r\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\r\n[ERROR] -> [Help 1]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR] \r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\r\n    \r\n```\r\n\r\n```\r\n❯ more ./target/quarkus.log                                                                                                                                                                                \r\nRedis host not configured - you must either configure 'quarkus.redis.hosts` or 'quarkus.redis.host-provider-name' and have a bean providing the hosts programmatically.                                    \r\njava.lang.RuntimeException: Failed to start quarkus                                                                                                                                                        \r\n        at io.quarkus.runner.ApplicationImpl.doStart(Unknown Source)\r\n        at io.quarkus.runtime.Application.start(Application.java:101)\r\n        at io.quarkus.runtime.ApplicationLifecycleManager.run(ApplicationLifecycleManager.java:111)\r\n        at io.quarkus.runtime.Quarkus.run(Quarkus.java:71)\r\n        at io.quarkus.runtime.Quarkus.run(Quarkus.java:44)\r\n        at io.quarkus.runtime.Quarkus.run(Quarkus.java:124)\r\n        at io.quarkus.runner.GeneratedMain.main(Unknown Source)\r\nCaused by: io.quarkus.runtime.configuration.ConfigurationException: Redis host not configured - you must either configure 'quarkus.redis.hosts` or 'quarkus.redis.host-provider-name' and have a bean provi\r\nding the hosts programmatically.\r\n        at io.quarkus.redis.runtime.client.VertxRedisClientFactory.create(VertxRedisClientFactory.java:61)\r\n        at io.quarkus.redis.runtime.client.RedisClientRecorder.lambda$_initialize$1(RedisClientRecorder.java:96)\r\n        at java.base@21.0.3/java.util.HashMap.computeIfAbsent(HashMap.java:1228)\r\n        at io.quarkus.redis.runtime.client.RedisClientRecorder._initialize(RedisClientRecorder.java:94)\r\n        at io.quarkus.redis.runtime.client.RedisClientRecorder.initialize(RedisClientRecorder.java:63)\r\n        at io.quarkus.deployment.steps.RedisDatasourceProcessor$init1511358714.deploy_0(Unknown Source)\r\n        at io.quarkus.deployment.steps.RedisDatasourceProcessor$init1511358714.deploy(Unknown Source)\r\n        ... 7 more\r\n\r\n```\n\n### Expected behavior\n\nI would expect that a Redis instance would started and  `quarkus.redis.hosts` set accordingly for the integration tests.\n\n### Actual behavior\n\nIs fails on ITs.\n\n### How to Reproduce?\n\n1. Grab project with exact code/config I was testing with: https://github.com/johnmanko/quarkus-redis-service-example\r\n\r\n2. Run: `./mvnw verify -Dnative -Dquarkus.container-image.build=true`\n\n### Output of `uname -a` or `ver`\n\n6.5.0-35-generic\n\n### Output of `java -version`\n\nopenjdk version \"22-ea\" 2024-03-19\n\n### Mandrel or GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n3.10.2\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.9.6\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/40805/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/40805/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
