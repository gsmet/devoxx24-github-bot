{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32295",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32295/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32295/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32295/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/32295",
  "id": 1649043969,
  "node_id": "I_kwDOCFbutM5iSmoB",
  "number": 32295,
  "title": "Config mapping for `java.util.Map`s that also have an \"unnamed\" entry",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1273030910,
      "node_id": "MDU6TGFiZWwxMjczMDMwOTEw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/config",
      "name": "area/config",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/250",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/250",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/250/labels",
    "id": 9407630,
    "node_id": "MI_kwDOCFbutM4Aj4yO",
    "number": 250,
    "title": "3.2.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 244,
    "state": "closed",
    "created_at": "2023-05-17T07:29:12Z",
    "updated_at": "2023-11-15T13:59:38Z",
    "due_on": null,
    "closed_at": "2023-06-21T13:08:09Z"
  },
  "comments": 6,
  "created_at": "2023-03-31T09:43:47Z",
  "updated_at": "2023-06-13T11:34:24Z",
  "closed_at": "2023-06-13T11:34:18Z",
  "active_lock_reason": null,
  "body": "### Description\n\nIn several extensions, we need to provide named configuration sections, while still allowing a \"default\", unnamed section with the same prefix.\r\n\r\nE.g. for Hibernate Search/ORM we have a concept of persistence units, configured with the prefix `quarkus.hibernate-search-orm`.\r\n\r\nThere's a default persistence unit, configured like this:\r\n\r\n```\r\nquarkus.hibernate-search-orm.elasticsearch.version=7\r\n```\r\n\r\nAnd there are (optional) named persistence units, configured like this:\r\n\r\n```\r\nquarkus.hibernate-search-orm.\"user\".elasticsearch.version=7\r\nquarkus.hibernate-search-orm.\"inventory\".elasticsearch.version=7\r\n```\r\n\r\nWe usually end up implementing this as two separate methods, plus another one to aggregate the whole thing by hand:\r\n\r\n```java\r\n    @WithParentName\r\n    HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit defaultPersistenceUnit();\r\n    @WithParentName\r\n    Map<String, HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit> persistenceUnits();\r\n\r\n    default Map<String, HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit> getAllPersistenceUnitConfigsAsMap() {\r\n        Map<String, HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit> map = new TreeMap<>();\r\n        HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit defaultPersistenceUnit = defaultPersistenceUnit();\r\n\r\n        if (defaultPersistenceUnit != null) {\r\n            map.put(PersistenceUnitUtil.DEFAULT_PERSISTENCE_UNIT_NAME, defaultPersistenceUnit);\r\n        }\r\n        map.putAll(persistenceUnits());\r\n        return map;\r\n    }\r\n```\r\n\r\nAnd then in extension code we do something like:\r\n\r\n```\r\n// When we need the config of a specific persistence unit (generally the default one):\r\nvar defaultConfig = config.getAllPersistenceUnitConfigsAsMap().get(PersistenceUnitUtil.DEFAULT_PERSISTENCE_UNIT_NAME);\r\n\r\n// When we just need to check whether a PU is configured (generally the default one):\r\nconfig.getAllPersistenceUnitConfigsAsMap().containsKey(PersistenceUnitUtil.DEFAULT_PERSISTENCE_UNIT_NAME);\r\n\r\n// When we need to iterate over every configured persistence unit:\r\nfor (var entry : config.getAllPersistenceUnitConfigsAsMap().entrySet()) {\r\n   // ...\r\n}\r\n```\r\n\r\nSince that's a rather frequent use case, maybe we could introduce a shortcut that would directly put the \"root\"/default entry in the map, with a provided key? \r\n\r\nIt would be nice to introduce this before we migrate all extensions to `@ConfigMapping`, so we can simplify extension config while we migrate.\r\n\r\nSee also https://github.com/quarkusio/quarkus/pull/32276/files#r1154222403\n\n### Implementation ideas\n\nE.g.:\r\n\r\n```java\r\n    @WithParentName\r\n    @WithRootEntry(key = PersistenceUnitUtil.DEFAULT_PERSISTENCE_UNIT_NAME)\r\n    Map<String, HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit> persistenceUnits();\r\n```\r\n\r\n`@WithRootEntry` here would mean \"with the same prefix, we also allow configuring a map entry without a name, with the same structure\". And `key = ...` would mean \"I want the unnamed map entry to be added to the map with this key, which I don't expect to conflict with named entries\".",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32295/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32295/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
