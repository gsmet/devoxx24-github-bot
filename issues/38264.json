{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38264",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38264/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38264/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38264/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38264",
  "id": 2087033328,
  "node_id": "I_kwDOCFbutM58ZZnw",
  "number": 38264,
  "title": "transitive @Transactional binding not supported by io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/302",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/302",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/302/labels",
    "id": 10458697,
    "node_id": "MI_kwDOCFbutM4An5ZJ",
    "number": 302,
    "title": "3.7.0",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 51,
    "state": "closed",
    "created_at": "2024-01-23T17:04:43Z",
    "updated_at": "2024-01-24T18:38:28Z",
    "due_on": null,
    "closed_at": "2024-01-24T12:34:43Z"
  },
  "comments": 2,
  "created_at": "2024-01-17T21:40:18Z",
  "updated_at": "2024-01-23T17:07:45Z",
  "closed_at": "2024-01-19T04:42:35Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWith `@InterceptorBinding` annotations, like `@Transactional`, I should be able to declare others `@InterceptorBinding` that inherit the binding by transitivity. See https://jakarta.ee/specifications/interceptors/2.0/interceptors-spec-2.0#interceptor_binding_types_with_additional_interceptor_bindings.\r\n\r\nHowever, if I define my own interceptor binding  like so:\r\n\r\n```java\r\n@Inherited\r\n@InterceptorBinding\r\n@Target({ElementType.TYPE, ElementType.METHOD})\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Transactional\r\npublic @interface MyTransactionalBinding {\r\n}\r\n```\r\n\r\nthen it works for setting up the tranasction on the transaction boundary method, but if a nested call on another transactional bean that throws is annotated, this fails with an error \" ARJUNA016107: Expected an @Transactional annotation at class and/or method level\": \r\n\r\n```java\r\n@ApplicationScoped\r\npublic class MyTransactionalBean {\r\n\r\n    @Inject\r\n    MyUnsafeTransactionalBean myUnsafeTransactionalBean;\r\n\r\n    @MyTransactionalBinding\r\n    public void test2() throws SystemException {\r\n        Transaction transaction = tm.getTransaction();\r\n        if (transaction == null) {\r\n            throw new AssertionError(\"No tranasction\");\r\n        }\r\n\r\n       try {\r\n            myUnsafeTransactionalBean.test2();\r\n            throw new AssertionError(\"nothing thrown\");\r\n        } catch (TransactionalSafeException e) {\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@ApplicationScoped\r\npublic class MyUnsafeTransactionalBean {\r\n    @MyTransactionalBinding\r\n    public void test2() {\r\n        throw new TransactionalSafeException(\"test\");\r\n    }\r\n}\r\n```\r\n\r\n\n\n### Expected behavior\n\nUsing own interceptor bindings providing `@Tranasctional` works in all cases\n\n### Actual behavior\n\nException thrown at io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase#getTransactional:\r\n\r\n```java\r\n    private Transactional getTransactional(InvocationContext ic) {\r\n        Set<Annotation> bindings = InterceptorBindings.getInterceptorBindings(ic);\r\n        for (Annotation i : bindings) {\r\n            if (i.annotationType() == Transactional.class) {\r\n                return (Transactional) i;\r\n            }\r\n        }\r\n        throw new RuntimeException(jtaLogger.i18NLogger.get_expected_transactional_annotation());\r\n    }\r\n```\r\n\r\n```\r\njava.lang.RuntimeException: ARJUNA016107: Expected an @Transactional annotation at class and/or method level\r\n\t\tat io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase.getTransactional(TransactionalInterceptorBase.java:87)\r\n\t\tat io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase.handleExceptionNoThrow(TransactionalInterceptorBase.java:359)\r\n\t\tat io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase.handleException(TransactionalInterceptorBase.java:392)\r\n\t\tat io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase.invokeInOurTx(TransactionalInterceptorBase.java:139)\r\n\t\tat io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase.invokeInOurTx(TransactionalInterceptorBase.java:107)\r\n\t\tat io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorRequired.doIntercept(TransactionalInterceptorRequired.java:38)\r\n\t\tat io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase.intercept(TransactionalInterceptorBase.java:61)\r\n\t\tat io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorRequired.intercept(TransactionalInterceptorRequired.java:32)\r\n\t\tat io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorRequired_Bean.intercept(Unknown Source)\r\n\t\tat io.quarkus.arc.impl.InterceptorInvocation.invoke(InterceptorInvocation.java:42)\r\n\t\tat io.quarkus.arc.impl.AroundInvokeInvocationContext.perform(AroundInvokeInvocationContext.java:30)\r\n\t\tat io.quarkus.arc.impl.InvocationContexts.performAroundInvoke(InvocationContexts.java:27)\r\n\t\tat org.example.MyUnsafeTransactionalBean_Subclass.test2(Unknown Source)\r\n\t\tat org.example.MyUnsafeTransactionalBean_ClientProxy.test2(Unknown Source)\r\n\t\tat org.example.MyTransactionalBean.test4(MyTransactionalBean.java:49)\r\n\t\tat org.example.MyTransactionalBean_ClientProxy.test4(Unknown Source)\r\n\t\tat org.example.GreetingResource.hello(GreetingResource.java:36)\r\n\t\tat org.example.GreetingResource$quarkusrestinvoker$hello_2615aa2773bd5be3c69078450e792903e1eacee1.invoke(Unknown Source)\r\n\t\tat org.jboss.resteasy.reactive.server.handlers.InvocationHandler.handle(InvocationHandler.java:29)\r\n\t\tat io.quarkus.resteasy.reactive.server.runtime.QuarkusResteasyReactiveRequestContext.invokeHandler(QuarkusResteasyReactiveRequestContext.java:141)\r\n\t\tat org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:147)\r\n\t\tat io.quarkus.vertx.core.runtime.VertxCoreRecorder$14.runWith(VertxCoreRecorder.java:582)\r\n\t\tat org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)\r\n\t\tat org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)\r\n\t\tat org.jboss.threads.DelegatingRunnable.run(DelegatingRunnable.java:29)\r\n\t\tat org.jboss.threads.ThreadLocalResettingRunnable.run(ThreadLocalResettingRunnable.java:29)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:1583)\r\n```\n\n### How to Reproduce?\n\nRunning the quarkus test in the repo https://github.com/cghislai/cdi-interceptor-transitivity-test reproduces the issue\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38264/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38264/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
