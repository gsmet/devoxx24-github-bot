{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34568",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34568/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34568/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34568/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34568",
  "id": 1790444217,
  "node_id": "I_kwDOCFbutM5quAK5",
  "number": 34568,
  "title": "Vertx Transacations using kotlin coroutines",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 985346626,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjY=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/question",
      "name": "kind/question",
      "color": "d876e3",
      "default": false,
      "description": "Further information is requested"
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 5,
  "created_at": "2023-07-05T22:27:28Z",
  "updated_at": "2024-01-24T16:06:18Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nYou can group multiple `Uni`  operations to create a transaction using reactive-sql. The interoperability with kotlin suggest  to use `awaitSuspending` to converter a Uni to a coroutine. \r\n\r\nHowever this break the composition for transactions, per example:\r\n\r\nUsing Uni:\r\n\r\n```kotlin\r\nclass Foo repository {\r\n   fun foo() = Uni\r\n}\r\n\r\nclass Bar repository {\r\n   fun bar() = Uni\r\n}\r\n\r\nval txs = client.transaction {\r\n    foo.flatMap { bar }\r\n}\r\n```\r\n\r\nHowever if my repository is using suspend function:\r\n\r\n```kotlin\r\nclass Foo repository {\r\n   suspend fun foo() = Uni.awaitSuspending()\r\n}\r\n\r\nclass Bar repository {\r\n   suspend  fun bar() = Uni.awaitSuspending()\r\n}\r\n\r\n// It's not possible to compose the operatio anymore because I have a suspend function not a Uni\r\n\r\n```\r\n\r\nObs: I know that I might just return Uni to compose the operation, but I think kotlin should have a first class support to use coroutines instead of Uni.\r\n\r\n\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34568/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34568/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
