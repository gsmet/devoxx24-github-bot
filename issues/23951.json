{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23951",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23951/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23951/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23951/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23951",
  "id": 1149683019,
  "node_id": "I_kwDOCFbutM5EhsVL",
  "number": 23951,
  "title": "Resteasy reactive client does not create specific WebApplicationException",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2022-02-24T19:48:02Z",
  "updated_at": "2022-02-25T05:58:03Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen a rest api returns a 4xx or 5xx status code, Resteasy reactive client creates a generic WebApplicationException\r\n\r\nI must register the following ```ResponseExceptionMapper<RuntimeException>``` to get the expected behavior.  Please consider adding this code to ```org.jboss.resteasy.microprofile.client.DefaultResponseExceptionMapper```:\r\n\r\n```java\r\npackage com.example.client.jaxrs;\r\n\r\nimport java.util.function.Function;\r\nimport javax.inject.Singleton;\r\nimport javax.ws.rs.BadRequestException;\r\nimport javax.ws.rs.ClientErrorException;\r\nimport javax.ws.rs.ForbiddenException;\r\nimport javax.ws.rs.InternalServerErrorException;\r\nimport javax.ws.rs.NotAcceptableException;\r\nimport javax.ws.rs.NotAllowedException;\r\nimport javax.ws.rs.NotAuthorizedException;\r\nimport javax.ws.rs.NotFoundException;\r\nimport javax.ws.rs.NotSupportedException;\r\nimport javax.ws.rs.RedirectionException;\r\nimport javax.ws.rs.ServerErrorException;\r\nimport javax.ws.rs.ServiceUnavailableException;\r\nimport javax.ws.rs.WebApplicationException;\r\nimport javax.ws.rs.core.Response;\r\nimport org.eclipse.microprofile.rest.client.ext.ResponseExceptionMapper;\r\n\r\n@Singleton\r\npublic class ClientExceptionMapper implements ResponseExceptionMapper<RuntimeException> {\r\n\r\n  private static Function<Response, ServerErrorException> serverExceptionConstructor(int status) {\r\n    switch (status) {\r\n      case 500:\r\n        return InternalServerErrorException::new;\r\n      case 503:\r\n        return ServiceUnavailableException::new;\r\n      default:\r\n        return ServerErrorException::new;\r\n    }\r\n  }\r\n\r\n  private static Function<Response, ClientErrorException> clientExceptionConstructor(int status) {\r\n    switch (status) {\r\n      case 400:\r\n        return BadRequestException::new;\r\n      case 401:\r\n        return NotAuthorizedException::new;\r\n      case 403:\r\n        return ForbiddenException::new;\r\n      case 404:\r\n        return NotFoundException::new;\r\n      case 405:\r\n        return NotAllowedException::new;\r\n      case 406:\r\n        return NotAcceptableException::new;\r\n      case 415:\r\n        return NotSupportedException::new;\r\n      default:\r\n        return ClientErrorException::new;\r\n    }\r\n  }\r\n\r\n  private static Function<Response, ? extends WebApplicationException> webApplicationException(\r\n      int status) {\r\n\r\n    if (status < 600) {\r\n      if (status >= 500) {\r\n        return serverExceptionConstructor(status);\r\n      }\r\n      if (status >= 400) {\r\n        return clientExceptionConstructor(status);\r\n      }\r\n      if (status >= 300) {\r\n        return RedirectionException::new;\r\n      }\r\n    }\r\n    return WebApplicationException::new;\r\n  }\r\n\r\n  @Override\r\n  public RuntimeException toThrowable(Response response) {\r\n    int status = response.getStatus();\r\n    if (status < 100 || status >= 300) {\r\n      return webApplicationException(status).apply(response);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n```\n\n### Expected behavior\n\nProduce a specific WebApplicationException such as ForbiddenException for 403 or NotFoundException for 404.  This is the behavior of classic Resteasy client.\n\n### Actual behavior\n\nResteasy reactive client creates a generic WebApplicationException with the correct status code.\n\n### How to Reproduce?\n\nInvoke any web service that returns a 4xx or 5xx status code\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23951/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23951/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
