{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25818",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25818/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25818/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25818/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25818",
  "id": 1249947464,
  "node_id": "I_kwDOCFbutM5KgK9I",
  "number": 25818,
  "title": "Vert.x Context doesn't get propagated when using Infrastructure.getDefaultWorkerPool()",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2236476067,
      "node_id": "MDU6TGFiZWwyMjM2NDc2MDY3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/mutiny",
      "name": "area/mutiny",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3700813587,
      "node_id": "LA_kwDOCFbutM7cle8T",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/context-propagation",
      "name": "area/context-propagation",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/192",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/192",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/192/labels",
    "id": 8103255,
    "node_id": "MI_kwDOCFbutM4Ae6VX",
    "number": 192,
    "title": "2.10.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 89,
    "state": "closed",
    "created_at": "2022-06-21T16:11:11Z",
    "updated_at": "2023-01-13T10:16:25Z",
    "due_on": null,
    "closed_at": "2022-06-29T11:08:49Z"
  },
  "comments": 31,
  "created_at": "2022-05-26T19:14:29Z",
  "updated_at": "2022-06-28T12:54:27Z",
  "closed_at": "2022-06-23T06:52:26Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nVert.x Context doesn't get propagated when using `Infrastructure.getDefaultWorkerPool()`\r\n\r\nWhenever you use reactive programming and you run Mutiny with `runSubscriptionOn(Infrastructure.getDefaultWorkerPool()` Vert.x context doesn't get propagated, whereas with `Infrastructure.getDefaultExecutor()` does get propagated.\r\n\r\nThis impacts OpenTelemetry, MDC and any other people/feature that uses Vert.x context for something, since context data is stored inside Vert.x Context and it doesn't get propagated.\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nUsing `Infrastructure.getDefaultWorkerPool()` with Mutiny should behave the same as with `Infrastructure.getDefaultExecutor()` and Vert.x Context should be set\r\n\r\n### Actual behavior\r\n\r\nUsing `Infrastructure.getDefaultWorkerPool()` Vert.x Context is null\r\n\r\n### How to Reproduce?\r\n\r\n_OPENTELEMETRY IS ONLY BEING USED AS AN EXAMPLE AND REPRODUCER, THE ISSUE IS NOT RESTRICTED TO IT_\r\n\r\nhttps://github.com/luneo7/opentelemetry-reproducer\r\n\r\nJust run `./mvnw clean test` and you will see that Vert.x Context doesn't get propagated so OTEL span doesn't have the right parent id when using worker pool.\r\n\r\nWhen doing `curl http://localhost:8080/hello-worker-pool` you will see that two distinct spans are created:\r\n\r\n![Screenshot 2022-05-26 at 13-44-28 Jaeger UI](https://user-images.githubusercontent.com/8834774/170560638-da8f5389-9729-42a7-a3bb-a58aa015fbd2.png)\r\n\r\nWhen doing `curl http://localhost:8080/hello-default-executor` you will see that the spans are created correctly and there are two spans that correlates to each other:\r\n\r\n![Screenshot 2022-05-26 at 13-46-38 Jaeger UI](https://user-images.githubusercontent.com/8834774/170561015-3141edfe-58d8-466b-a563-766b7c9f9131.png)\r\n\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.9.2.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25818/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25818/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
