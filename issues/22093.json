{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22093",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22093/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22093/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22093/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/22093",
  "id": 1076403360,
  "node_id": "I_kwDOCFbutM5AKJyg",
  "number": 22093,
  "title": "Apicurio with Kafka ProtoBuf serde not working in native mode",
  "labels": [
    {
      "id": 985346621,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjE=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/duplicate",
      "name": "triage/duplicate",
      "color": "cfd3d7",
      "default": false,
      "description": "This issue or pull request already exists"
    },
    {
      "id": 1658790125,
      "node_id": "MDU6TGFiZWwxNjU4NzkwMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kafka",
      "name": "area/kafka",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 12,
  "created_at": "2021-12-10T04:05:14Z",
  "updated_at": "2021-12-13T09:45:33Z",
  "closed_at": "2021-12-13T09:45:33Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nCurrently, when we config to use ProtobufKafkaSerializer ( io.apicurio.registry.serde.protobuf.ProtobufKafkaSerializer ), it work normal in JVM Mode, but it has error when start in Native Mode\r\n\r\n2021-12-09 07:13:14,661 ERROR [io.qua.run.Application] (main) Failed to start application (with profile prod): java.lang.ClassNotFoundException: io.apicurio.registry.serde.protobuf.ProtobufKafkaSerializer\r\n\tat com.oracle.svm.core.hub.ClassForNameSupport.forName(ClassForNameSupport.java:64)\r\n\tat java.lang.Class.forName(DynamicHub.java:1308)\r\n\tat org.apache.kafka.common.utils.Utils.loadClass(Utils.java:380)\r\n\tat org.apache.kafka.common.utils.Utils.newInstance(Utils.java:369)\r\n\tat io.smallrye.reactive.messaging.kafka.impl.ReactiveKafkaProducer.createSerializer(ReactiveKafkaProducer.java:71)\r\n\tat io.smallrye.reactive.messaging.kafka.impl.ReactiveKafkaProducer.<init>(ReactiveKafkaProducer.java:58)\r\n\tat io.smallrye.reactive.messaging.kafka.impl.ReactiveKafkaProducer.<init>(ReactiveKafkaProducer.java:43)\r\n\tat io.smallrye.reactive.messaging.kafka.impl.KafkaSink.<init>(KafkaSink.java:76)\r\n\tat io.smallrye.reactive.messaging.kafka.KafkaConnector.getSubscriberBuilder(KafkaConnector.java:227)\r\n\tat io.smallrye.reactive.messaging.kafka.KafkaConnector_ClientProxy.getSubscriberBuilder(KafkaConnector_ClientProxy.zig:368)\r\n\tat io.smallrye.reactive.messaging.impl.ConfiguredChannelFactory.createSubscriberBuilder(ConfiguredChannelFactory.java:207)\r\n\tat io.smallrye.reactive.messaging.impl.ConfiguredChannelFactory.register(ConfiguredChannelFactory.java:164)\r\n\tat io.smallrye.reactive.messaging.impl.ConfiguredChannelFactory.initialize(ConfiguredChannelFactory.java:125)\r\n\tat io.smallrye.reactive.messaging.impl.ConfiguredChannelFactory_ClientProxy.initialize(ConfiguredChannelFactory_ClientProxy.zig:189)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:133)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)\r\n\tat io.smallrye.reactive.messaging.extension.MediatorManager.start(MediatorManager.java:189)\r\n\tat io.smallrye.reactive.messaging.extension.MediatorManager_ClientProxy.start(MediatorManager_ClientProxy.zig:220)\r\n\tat io.quarkus.smallrye.reactivemessaging.runtime.SmallRyeReactiveMessagingLifecycle.onApplicationStart(SmallRyeReactiveMessagingLifecycle.java:41)\r\n\tat io.quarkus.smallrye.reactivemessaging.runtime.SmallRyeReactiveMessagingLifecycle_Observer_onApplicationStart_4e8937813d9e8faff65c3c07f88fa96615b70e70.notify(SmallRyeReactiveMessagingLifecycle_Observer_onApplicationStart_4e8937813d9e8faff65c3c07f88fa96615b70e70.zig:111)\r\n\tat io.quarkus.arc.impl.EventImpl$Notifier.notifyObservers(EventImpl.java:300)\r\n\tat io.quarkus.arc.impl.EventImpl$Notifier.notify(EventImpl.java:282)\r\n\tat io.quarkus.arc.impl.EventImpl.fire(EventImpl.java:70)\r\n\tat io.quarkus.arc.runtime.ArcRecorder.fireLifecycleEvent(ArcRecorder.java:128)\r\n\tat io.quarkus.arc.runtime.ArcRecorder.handleLifecycleEvents(ArcRecorder.java:97)\r\n\tat io.quarkus.deployment.steps.LifecycleEventsBuildStep$startupEvent1144526294.deploy_0(LifecycleEventsBuildStep$startupEvent1144526294.zig:87)\r\n\tat io.quarkus.deployment.steps.LifecycleEventsBuildStep$startupEvent1144526294.deploy(LifecycleEventsBuildStep$startupEvent1144526294.zig:40)\r\n\tat io.quarkus.runner.ApplicationImpl.doStart(ApplicationImpl.zig:765)\r\n\tat io.quarkus.runtime.Application.start(Application.java:101)\r\n\tat io.quarkus.runtime.ApplicationLifecycleManager.run(ApplicationLifecycleManager.java:101)\r\n\tat io.quarkus.runtime.Quarkus.run(Quarkus.java:66)\r\n\tat io.quarkus.runtime.Quarkus.run(Quarkus.java:42)\r\n\tat io.quarkus.runtime.Quarkus.run(Quarkus.java:119)\r\n\tat io.quarkus.runner.GeneratedMain.main(GeneratedMain.zig:29)\r\n\r\nOur Pom file : \r\n\r\n <dependencies>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-grpc</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-hibernate-reactive</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-reactive-pg-client</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-smallrye-jwt</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-smallrye-jwt-build</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-arc</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>com.fasterxml.jackson.core</groupId>\r\n      <artifactId>jackson-databind</artifactId>\r\n      <version>${jackson.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>com.fasterxml.jackson.core</groupId>\r\n      <artifactId>jackson-core</artifactId>\r\n      <version>${jackson.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>com.fasterxml.jackson.core</groupId>\r\n      <artifactId>jackson-annotations</artifactId>\r\n      <version>${jackson.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-container-image-jib</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>\r\n    </dependency>\r\n    <!-- https://mvnrepository.com/artifact/io.apicurio/apicurio-registry-utils-serde -->\r\n    <dependency>\r\n      <groupId>io.apicurio</groupId>\r\n      <artifactId>apicurio-registry-common</artifactId>\r\n      <version>${apicurio.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.apicurio</groupId>\r\n      <artifactId>apicurio-registry-serdes-protobuf-serde</artifactId>\r\n      <version>${apicurio.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-resteasy-reactive</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-rest-client</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-junit5</artifactId>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n\r\n\r\nAny helps are appreciate.\r\n\r\nI saw that we have the similar issue before. but it seems it could not apply in this case.\r\n\r\nhttps://github.com/quarkusio/quarkus/issues/13533\n\n### Expected behavior\n\nUse ProtobufKafkaSerializer of Apicurio normally in Native mode\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.1.2-Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22093/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22093/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
