{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26158",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26158/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26158/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26158/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26158",
  "id": 1272174118,
  "node_id": "I_kwDOCFbutM5L09Ym",
  "number": 26158,
  "title": "Report invalid @MultipartForm format",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/189",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189/labels",
    "id": 8065991,
    "node_id": "MI_kwDOCFbutM4AexPH",
    "number": 189,
    "title": "2.11.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 244,
    "state": "closed",
    "created_at": "2022-06-09T10:38:20Z",
    "updated_at": "2023-01-13T10:47:01Z",
    "due_on": null,
    "closed_at": "2022-07-13T14:14:46Z"
  },
  "comments": 2,
  "created_at": "2022-06-15T12:38:58Z",
  "updated_at": "2022-06-17T08:17:51Z",
  "closed_at": "2022-06-17T08:17:46Z",
  "active_lock_reason": null,
  "body": "### Description\n\nIn case a `multipart/form-data` request is handled, for example:\r\n```java\r\n@ApplicationScoped\r\n@Path(\"/uploads\")\r\npublic class UploadsResource {\r\n    @POST\r\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\r\n    @Produces(MediaType.APPLICATION_JSON)\r\n    public Response upload(@MultipartForm UploadDto uploadDto) {\r\n        // do sth\r\n    }\r\n}\r\n```\r\nWith a DTO:\r\n```java\r\n@Getter\r\n@NoArgsConstructor\r\npublic class UploadDto {\r\n    @FormParam(\"format\")\r\n    @PartType(MediaType.APPLICATION_JSON)\r\n    private List<MyEnum> format;\r\n\r\n    @FormParam(\"file\")\r\n    @PartType(MediaType.APPLICATION_OCTET_STREAM)\r\n    private File file;\r\n}\r\n```\r\nIf the `format` is provided correctly, it works as expected, otherwise it fails silently with a 500 - whether the JSON is wrongly formatted or the elements do not respect the `MyEnum` values. But in this case I want to be able to notify the user that the request is wrong, returning a custom message - or at least being able to see in the logs why the request failed.\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26158/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26158/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
