{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22936",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22936/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22936/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22936/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/22936",
  "id": 1105589836,
  "node_id": "I_kwDOCFbutM5B5fZM",
  "number": 22936,
  "title": "Simplify exception handling for REST Client",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/161",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161/labels",
    "id": 7468359,
    "node_id": "MI_kwDOCFbutM4AcfVH",
    "number": 161,
    "title": "2.7.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 334,
    "state": "closed",
    "created_at": "2021-12-08T07:48:18Z",
    "updated_at": "2022-02-03T19:52:11Z",
    "due_on": null,
    "closed_at": "2022-01-19T12:42:36Z"
  },
  "comments": 11,
  "created_at": "2022-01-17T09:29:40Z",
  "updated_at": "2022-01-18T21:25:53Z",
  "closed_at": "2022-01-18T21:25:50Z",
  "active_lock_reason": null,
  "body": "### Description\n\nCurrently the way the to handle exception in REST Client is to register a Provider that implements `ResponseExceptionMapper`.\r\n\r\nAlthough this is very powerful when a user needs to use CDI dependencies for example, it's overly tedious for simple cases where we simply want to throw some sort of exception based on the response.\r\n\r\nAn idea would be to introduce an annotation named `@ClientExceptionMapper` that could be placed on `default` methods of the REST Client interface, something like:\r\n\r\n```java\r\n    @RegisterRestClient(configKey = \"client\")\r\n    @Path(\"/reactive\")\r\n    interface ReactiveRestClient {\r\n        @GET\r\n        String helloGet(@QueryParam(\"name\") String name);\r\n \r\n        @ClientExceptionMapper \r\n        default RuntimeException toException(Response response) {\r\n            // create exception\r\n        }\r\n    }\r\n```\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22936/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22936/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
