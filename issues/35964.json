{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35964",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35964/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35964/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35964/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35964",
  "id": 1899079144,
  "node_id": "I_kwDOCFbutM5xMaXo",
  "number": 35964,
  "title": "OIDC: NPE when accessing IdToken when Bearer access token is sent",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/282",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/282",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/282/labels",
    "id": 10040721,
    "node_id": "MI_kwDOCFbutM4AmTWR",
    "number": 282,
    "title": "2.16.12.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 5,
    "state": "closed",
    "created_at": "2023-10-12T11:50:45Z",
    "updated_at": "2023-11-15T14:05:06Z",
    "due_on": null,
    "closed_at": "2023-10-17T12:04:33Z"
  },
  "comments": 7,
  "created_at": "2023-09-15T21:08:09Z",
  "updated_at": "2023-10-12T11:52:52Z",
  "closed_at": "2023-09-18T11:26:24Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI'm testing out the multitenant solution in my application so I can support both code-flow and bearer token for my JSF UI and REST API code. I want the REST endpoints to be accessible from curl, postman, etc. so I can't use the `hybrid` type.\r\n\r\nMy JSF ui uses the `web-app` service type and my REST apis use the `service` type.\r\n\r\nThings seem to be working ok and I can log in fine in the UI and also use postman to hit my rest endpoints passing an access token in the Authorization header.\r\n\r\nHowever, I have a API method that I wanted to print out the token information that is available to me so I can learn what is actually provided during which calls.\r\n\r\nI think I found a bug, in `JsonWebToken` and `OidcSession` when trying to access expirationDate.\r\n\r\nError:\r\n```\r\n2023-09-15 16:55:21,426 ERROR [io.qua.ver.htt.run.QuarkusErrorHandler] (executor-thread-1) HTTP Request to /api/tokeninfo failed, error id: 225fcb1e-3b82-4731-aec2-b982c3a26469-3: java.lang.NullPointerException: Cannot invoke \"java.lang.Long.longValue()\" because the return value of \"org.eclipse.microprofile.jwt.JsonWebToken.getClaim(org.eclipse.microprofile.jwt.Claims)\" is null\r\n        at org.eclipse.microprofile.jwt.JsonWebToken.getExpirationTime(JsonWebToken.java:98)\r\n        at org.eclipse.microprofile.jwt.OidcJsonWebTokenProducer_ProducerMethod_currentIdToken_fd05e4c440bc560635edfdf219600734450212ad_ClientProxy.getExpirationTime(Unknown Source)\r\n        at org.primefaces.babylon.service.SecurityService.printTokenInfo(SecurityService.java:80)\r\n        at org.primefaces.babylon.service.SecurityService_Subclass.printTokenInfo$$superforward(Unknown Source)\r\n        at org.primefaces.babylon.service.SecurityService_Subclass$$function$$12.apply(Unknown Source)\r\n        at io.quarkus.arc.impl.AroundInvokeInvocationContext.proceed(AroundInvokeInvocationContext.java:73)\r\n        at io.quarkus.arc.impl.AroundInvokeInvocationContext$NextAroundInvokeInvocationContext.proceed(AroundInvokeInvocationContext.java:97)\r\n```\r\n\r\nBelow is the service I am hitting from both the UI and the REST end, and the UI calls via JSF work fine, but the Postman doesn't.\r\n\r\nIt looks like there is some sort of proxy object calls JsonNullWebToken or something that causing the initial null check to pass but then internally it blows up trying to access other information.\r\n\r\nThis happens for both the `OidcSession` and the `JsonWebToken idToken`.\r\n\r\nSince I'm hitting the API with an AccessToken only, I would assume the IdToken would be null, but it is not. Which is why I put the null check in there to try to fix it.\r\n\r\nWhen I call the same method via JSF `#{securityService.printTokenInfo()}` I see all the information print out which I expect.\r\n\r\n```java\r\n@Named\r\n@ApplicationScoped\r\n@PermitAll\r\npublic class SecurityService implements Serializable {\r\n\r\n    @Inject\r\n    Logger log;\r\n\r\n    @Inject\r\n    SecurityIdentity identity;\r\n\r\n    @Inject\r\n    @IdToken\r\n    JsonWebToken idToken;\r\n\r\n    @Inject\r\n    JsonWebToken accessToken;\r\n\r\n    @Inject\r\n    OidcSession session;\r\n\r\n    public boolean isLoggedIn() {\r\n        log.infof(\"User %s is logged in = %s and has roles %s\", identity.getPrincipal().getName(), !identity.isAnonymous(),identity.getRoles() );\r\n        return identity != null && !identity.isAnonymous();\r\n    }\r\n\r\n    public boolean hasRole(String role) {\r\n        return identity.hasRole(role);\r\n    }\r\n\r\n\r\n    public void printTokenInfo() {\r\n        Instant now = Instant.now();\r\n\r\n        Instant accessTokenExpiration = null;\r\n        Instant idTokenExpiration = null;\r\n        Duration accessTokenDuration = null;\r\n        Duration idTokenDuration = null;\r\n        \r\n        if (accessToken != null) {\r\n            accessTokenExpiration = Instant.ofEpochSecond(accessToken.getExpirationTime());\r\n            accessTokenDuration = Duration.between(now, accessTokenExpiration);\r\n\r\n            log.infof(\"Access Token Duration is %d days, %d hours, %d minutes, and %d seconds.\\n\",\r\n                    accessTokenDuration.toDays(),\r\n                    accessTokenDuration.toHoursPart(),\r\n                    accessTokenDuration.toMinutesPart(),\r\n                    accessTokenDuration.toSecondsPart());\r\n        } \r\n        \r\n        if (idToken != null) {\r\n            idTokenExpiration = Instant.ofEpochSecond(idToken.getExpirationTime());\r\n            idTokenDuration = Duration.between(now, idTokenExpiration);\r\n\r\n            log.infof(\"Info Token Duration is %d days, %d hours, %d minutes, and %d seconds.\\n\",\r\n                    idTokenDuration.toDays(),\r\n                    idTokenDuration.toHoursPart(),\r\n                    idTokenDuration.toMinutesPart(),\r\n                    idTokenDuration.toSecondsPart());\r\n        }\r\n\r\n\r\n        if (session != null && session.getIdToken() != null) {\r\n            log.infof(\"Session information for tenant [%s] with username [%s] expires at: [%s] and is valid for [%s] - Groups: %s Claims: %s\",\r\n                    session.getTenantId(), session.getIdToken().getName(),\r\n                    session.expiresAt(), session.validFor(),\r\n                    session.getIdToken().getGroups(), session.getIdToken().getClaimNames());\r\n        }\r\n    }\r\n\r\n    @Path(\"/api/tokeninfo\")\r\n    @GET\r\n    @RolesAllowed(\"web-license-admin\")\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    public Response doNothing() {\r\n        printTokenInfo();\r\n        return Response.ok().build();\r\n    }\r\n}```\r\n\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n3.3.2\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35964/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35964/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
