{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23757",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23757/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23757/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23757/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23757",
  "id": 1139926875,
  "node_id": "I_kwDOCFbutM5D8edb",
  "number": 23757,
  "title": "Cannot add entity to lazy loaded collection with Quarkus Reactive Panache - org.hibernate.LazyInitializationException",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1273026134,
      "node_id": "MDU6TGFiZWwxMjczMDI2MTM0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/panache",
      "name": "area/panache",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1273026509,
      "node_id": "MDU6TGFiZWwxMjczMDI2NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/persistence",
      "name": "area/persistence",
      "color": "FBCA04",
      "default": false,
      "description": "OBSOLETE, DO NOT USE"
    },
    {
      "id": 2122256208,
      "node_id": "MDU6TGFiZWwyMTIyMjU2MjA4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-reactive",
      "name": "area/hibernate-reactive",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 24,
  "created_at": "2022-02-16T12:06:40Z",
  "updated_at": "2022-11-11T19:20:36Z",
  "closed_at": "2022-11-11T18:31:25Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWhen I'm trying to insert into a child collection of type OneToMany, I'm running into this error:\r\n\r\n\r\nI've tried multiple ways of inserting, and all result in the same behavior. Also tried using Mutiny.SessionFactory with no change.\r\n\r\n\r\n```\r\n@Slf4j\r\n@ApplicationScoped\r\npublic class LazyChildrenService {\r\n\r\n    @Inject\r\n    ParentRepository parentRepository;\r\n\r\n    @Inject\r\n    ChildRepository childRepository;\r\n\r\n    public Uni<Parent> saveParentWithLazyChildren() {\r\n        return Panache.withTransaction(() -> parentRepository.findAll().firstResult()\r\n                .onItem().transformToUni(parent -> parentRepository.persist(parent.addLazy(new Child()))\r\n                        .onItem().transform(unused -> parent)));\r\n    }\r\n\r\n    public Uni<Parent> saveLazyChild() {\r\n        return Panache.withTransaction(() -> parentRepository.findAll().firstResult()\r\n                .onItem().transformToUni(parent -> {\r\n                    Child child = new Child();\r\n                    parent.addLazy(child);\r\n                    return childRepository.persist(child)\r\n                            .onItem().transform(unused -> parent);\r\n                }));\r\n    }\r\n\r\n    @ReactiveTransactional\r\n    public Uni<Parent> saveParentWithLazyChildrenAndAnnotation() {\r\n        return parentRepository.findAll().firstResult()\r\n                .onItem().transformToUni(parent -> parentRepository.persist(parent.addLazy(new Child()))\r\n                        .onItem().transform(unused -> parent));\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\nResults in error:\r\n\r\n```\r\norg.hibernate.LazyInitializationException: HR000056: Collection cannot be initialized: com.example.Parent.lazyChildren\r\n\tat org.hibernate.reactive.session.impl.ReactiveSessionImpl.initializeCollection(ReactiveSessionImpl.java:370)\r\n\tat org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork(AbstractPersistentCollection.java:595)\r\n\tat org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)\r\n\tat org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:591)\r\n\tat org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:149)\r\n\tat org.hibernate.collection.internal.AbstractPersistentCollection$3.doWork(AbstractPersistentCollection.java:347)\r\n\tat org.hibernate.collection.internal.AbstractPersistentCollection$3.doWork(AbstractPersistentCollection.java:335)\r\n\tat org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)\r\n\tat org.hibernate.collection.internal.AbstractPersistentCollection.readElementExistence(AbstractPersistentCollection.java:334)\r\n\tat org.hibernate.collection.internal.PersistentSet.add(PersistentSet.java:208)\r\n\tat com.example.Parent.addLazy(Parent.java:28)\r\n\tat com.example.LazyChildrenService.lambda$saveLazyChild$4(LazyChildrenService.java:34)\r\n\tat io.smallrye.context.impl.wrappers.SlowContextualFunction.apply(SlowContextualFunction.java:21)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.performInnerSubscription(UniOnItemTransformToUni.java:68)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.onItem(UniOnItemTransformToUni.java:57)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni$UniOnItemTransformToUniProcessor.onItem(UniOnItemTransformToUni.java:60)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransform$UniOnItemTransformProcessor.onItem(UniOnItemTransform.java:43)\r\n\tat io.smallrye.mutiny.operators.uni.UniOperatorProcessor.onItem(UniOperatorProcessor.java:46)\r\n\tat io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage$CompletionStageUniSubscription.forwardResult(UniCreateFromCompletionStage.java:63)\r\n\tat java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)\r\n\tat java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)\r\n\tat io.vertx.core.Future.lambda$toCompletionStage$2(Future.java:360)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.sqlclient.impl.QueryResultBuilder.tryComplete(QueryResultBuilder.java:102)\r\n\tat io.vertx.sqlclient.impl.QueryResultBuilder.tryComplete(QueryResultBuilder.java:35)\r\n\tat io.vertx.core.Promise.complete(Promise.java:66)\r\n\tat io.vertx.core.Promise.handle(Promise.java:51)\r\n\tat io.vertx.core.Promise.handle(Promise.java:29)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n\tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:41)\r\n\tat io.vertx.sqlclient.impl.TransactionImpl.lambda$wrap$0(TransactionImpl.java:72)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.impl.future.PromiseImpl.onSuccess(PromiseImpl.java:49)\r\n\tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:41)\r\n\tat io.vertx.core.impl.future.PromiseImpl.handle(PromiseImpl.java:23)\r\n\tat io.vertx.sqlclient.impl.command.CommandResponse.fire(CommandResponse.java:46)\r\n\tat io.vertx.sqlclient.impl.SocketConnectionBase.handleMessage(SocketConnectionBase.java:287)\r\n\tat io.vertx.pgclient.impl.PgSocketConnection.handleMessage(PgSocketConnection.java:96)\r\n\tat io.vertx.sqlclient.impl.SocketConnectionBase.lambda$init$0(SocketConnectionBase.java:99)\r\n\tat io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:50)\r\n\tat io.vertx.core.impl.ContextImpl.emit(ContextImpl.java:274)\r\n\tat io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:22)\r\n\tat io.vertx.core.net.impl.NetSocketImpl.handleMessage(NetSocketImpl.java:394)\r\n\tat io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:156)\r\n\tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\tat io.vertx.pgclient.impl.codec.PgEncoder.lambda$write$0(PgEncoder.java:87)\r\n\tat io.vertx.pgclient.impl.codec.PgCommandCodec.handleReadyForQuery(PgCommandCodec.java:139)\r\n\tat io.vertx.pgclient.impl.codec.PgDecoder.decodeReadyForQuery(PgDecoder.java:237)\r\n\tat io.vertx.pgclient.impl.codec.PgDecoder.channelRead(PgDecoder.java:96)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n\r\n```\r\n\r\n### How to Reproduce?\r\n\r\nReproducer: https://github.com/mklueh/quarkus-reproducer-insert-into-lazy-collection\r\n\r\n\r\n### Quarkus version or git rev\r\n\r\n2.7.1\r\n\r\n\r\nAm I missing something crucial or is this a bug?",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23757/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23757/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
