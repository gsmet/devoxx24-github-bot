{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35270",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35270/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35270/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35270/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35270",
  "id": 1842326912,
  "node_id": "I_kwDOCFbutM5tz62A",
  "number": 35270,
  "title": "Multitenant should retry to resolve TenantConnectionResolver if Connection is closed",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346625,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjU=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/invalid",
      "name": "triage/invalid",
      "color": "e4e669",
      "default": false,
      "description": "This doesn't seem right"
    },
    {
      "id": 1425555736,
      "node_id": "MDU6TGFiZWwxNDI1NTU1NzM2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-orm",
      "name": "area/hibernate-orm",
      "color": "0366d6",
      "default": false,
      "description": "Hibernate ORM"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 8,
  "created_at": "2023-08-09T01:53:36Z",
  "updated_at": "2023-08-10T06:31:43Z",
  "closed_at": "2023-08-10T06:31:28Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI have a use case where tenants need to be created dynamically. So I implemented a custom TenantConnectionResolver and it worked as expected.\r\nBut if for some reason I have to remove a tenant, the only way I've found is to call DataSource.close(). Perhaps this still has the active tenant. When try to call again this tenant throws \r\n`ERROR [org.hib.eng.jdb.spi.SqlExceptionHelper] (executor-thread-1) This pool  is closed and does not handle any more connections!`\r\n\r\nLooking at the class [HibernateMultiTenantConnectionProvider](https://github.com/quarkusio/quarkus/blob/main/extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/tenant/HibernateMultiTenantConnectionProvider.java),  in the selectConnectionProvider they must validate if the ConnectionProvider.getConnection().isClosed() before returning.\r\nIn case of error or the tenant no longer exists, remove it from the Map.\r\n\r\n### Expected behavior\r\n\r\nValidate if the connection still working\r\n\r\n```\r\n@Override\r\n    protected ConnectionProvider selectConnectionProvider(final String tenantIdentifier) {\r\n        LOG.debugv(\"selectConnectionProvider(persistenceUnitName={0}, tenantIdentifier={1})\", persistenceUnitName,\r\n                tenantIdentifier);\r\n\r\n        ConnectionProvider provider = providerMap.get(tenantIdentifier);\r\n        //Fix\r\n        if (provider == null || provider.getConnection() == null || provider.getConnection().isClosed()) {\r\n            final ConnectionProvider connectionProvider = resolveConnectionProvider(persistenceUnitName, tenantIdentifier);\r\n            providerMap.put(tenantIdentifier, connectionProvider);\r\n            return connectionProvider;\r\n        }\r\n        return provider;\r\n\r\n    }\r\n```\r\n\r\n### Actual behavior\r\n\r\nIt does not validate if the connection is working\r\n\r\n```\r\n@Override\r\n    protected ConnectionProvider selectConnectionProvider(final String tenantIdentifier) {\r\n        LOG.debugv(\"selectConnectionProvider(persistenceUnitName={0}, tenantIdentifier={1})\", persistenceUnitName,\r\n                tenantIdentifier);\r\n\r\n        ConnectionProvider provider = providerMap.get(tenantIdentifier);\r\n        if (provider == null) {\r\n            final ConnectionProvider connectionProvider = resolveConnectionProvider(persistenceUnitName, tenantIdentifier);\r\n            providerMap.put(tenantIdentifier, connectionProvider);\r\n            return connectionProvider;\r\n        }\r\n        return provider;\r\n\r\n    }\r\n```\r\n\r\n### How to Reproduce?\r\n\r\n1. Clone my repo: [Github](https://github.com/Willian199/sample-multitenacy)\r\n\r\n2. Configure a default Postgresql database and any tenant connection.\r\n\r\n3. Uncomment the dataSource.close() at [TenantService.class](https://github.com/Willian199/sample-multitenacy/blob/master/src/main/java/br/com/will/service/TenantService.java#L82)\r\n\r\n4. Start the server and update an existing tenant\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n20\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n20\r\n\r\n### Quarkus version or git rev\r\n\r\n3.2.3\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35270/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35270/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
