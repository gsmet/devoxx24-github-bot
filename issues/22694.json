{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22694",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22694/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22694/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22694/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/22694",
  "id": 1095420843,
  "node_id": "I_kwDOCFbutM5BSsur",
  "number": 22694,
  "title": "Rest API rest easy reactive: cannot return Buffer as response",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1676631606,
      "node_id": "MDU6TGFiZWwxNjc2NjMxNjA2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/windows",
      "name": "env/windows",
      "color": "edea47",
      "default": false,
      "description": "Impacts Windows machines"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/161",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161/labels",
    "id": 7468359,
    "node_id": "MI_kwDOCFbutM4AcfVH",
    "number": 161,
    "title": "2.7.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 334,
    "state": "closed",
    "created_at": "2021-12-08T07:48:18Z",
    "updated_at": "2022-02-03T19:52:11Z",
    "due_on": null,
    "closed_at": "2022-01-19T12:42:36Z"
  },
  "comments": 5,
  "created_at": "2022-01-06T15:21:13Z",
  "updated_at": "2022-01-07T14:13:01Z",
  "closed_at": "2022-01-07T14:12:58Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nShould it not be possible to return a Buffer as response body?\r\n\r\n```java\r\n  @Path(\"/searchWithBuffer\")\r\n  @POST\r\n  public Uni<Buffer> searchWithBuffer(Buffer buffer)  {   \r\n\r\n   \r\n    Uni<HttpResponse<Buffer>> response = client.postAbs(\"http://localhost:9888/search\")       \r\n      .putHeader(\"Content-Type\", MediaType.APPLICATION_JSON)      \r\n      .putHeader(\"Accept\", MediaType.APPLICATION_JSON) \r\n      .putHeader(\"Cache-Control\", \"no-cache\")        \r\n      .sendBuffer( buffer ) ;          \r\n \r\n      return response.map(HttpResponse::body);\r\n     \r\n  }  \r\n```\r\n\r\n### Expected behavior\r\n\r\nThe body as String in the result. \r\n\r\n\r\n\r\n### Actual behavior\r\n\r\nThe String returned\r\n\r\n```json\r\n{\r\n    \"delegate\": {\r\n        \"bytes\": \"eyJ3aGF0ZXZlciI6InllcyJ9\",\r\n        \"byteBuf\": {\r\n            \"direct\": false,\r\n            \"readOnly\": false,\r\n            \"contiguous\": true,\r\n            \"readable\": true,\r\n            \"writable\": true\r\n        }\r\n    },\r\n    \"bytes\": \"eyJ3aGF0ZXZlciI6InllcyJ9\",\r\n    \"byteBuf\": {\r\n        \"direct\": false,\r\n        \"readOnly\": false,\r\n        \"contiguous\": true,\r\n        \"readable\": true,\r\n        \"writable\": true\r\n    }\r\n}\r\n```\r\n\r\n### How to Reproduce?\r\n\r\n\r\n[example.zip](https://github.com/quarkusio/quarkus/files/7822803/example.zip)\r\n\r\n\r\n1. Run the IT test\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nMicrosoft Windows [Version 10.0.19043.1415]\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"11.0.12\" 2021-07-20 LTS\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.6.1\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.3\r\n\r\n### Additional information\r\n\r\nAnother question\r\n\r\nI want to build merely somesort of proxy between a client and server. I just want to proxy the orginal request body to the server and return the response body back to the client.\r\n\r\nFor the request part. What is the best way to read the request body. As a\r\n\r\n-> Buffer (but then the input is parsed as JSON)\r\n-> Inputstream but this is blocking (reactive). Eventually in memory as well as i need to transform it to a Buffer.\r\n-> byte[] but everything is in memory\r\n\r\ncan i somehow stream it?\r\n\r\nFor the response part.  What is the best way to return the esponse body. As a\r\n\r\n-> Buffer (probably also parses the whole response)\r\n-> Byte[] (in body in memory)\r\n-> Outputstream (how and is blocking)\r\n\r\nhow can i stream the response body back using reast east reactive?\r\n\r\n\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22694/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22694/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
