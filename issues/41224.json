{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41224",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41224/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41224/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41224/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/41224",
  "id": 2354694462,
  "node_id": "I_kwDOCFbutM6MWck-",
  "number": 41224,
  "title": "QuarkusComponentTest -> No ParameterResolver registered for parameter",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/338",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/338",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/338/labels",
    "id": 11237542,
    "node_id": "MI_kwDOCFbutM4Aq3im",
    "number": 338,
    "title": "3.12.1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 56,
    "state": "closed",
    "created_at": "2024-06-26T15:15:26Z",
    "updated_at": "2024-08-14T12:25:05Z",
    "due_on": null,
    "closed_at": "2024-07-03T12:05:01Z"
  },
  "comments": 12,
  "created_at": "2024-06-15T09:28:04Z",
  "updated_at": "2024-07-01T17:53:39Z",
  "closed_at": "2024-06-19T12:08:53Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nAs far as i understand QuarkusComponentTest is just 'mockito-test' with other annotations.\r\nSo QuarkusComponentTest still relies on Mockito.\r\n\r\nSo let's convert a 'mockito-test' into a QuarkusComponentTest\r\n```\r\n@ExtendWith(MockitoExtension.class)\r\nclass ReadFallControllerTest {\r\n\r\n    @InjectMocks\r\n    ReadFallController readFallController;\r\n\r\n    @Mock\r\n    FallRepository fallRepository;\r\n\r\n    @Mock\r\n    FallMapper fallMapper;\r\n\r\n    @Test\r\n    void readFall(@Mock Fall fall, @Mock FallResponse fallResponse) {\r\n        when(fallRepository.findByFallNummerOrThrow(TestData.FALLNUMMER)).thenReturn(fall);\r\n        when(fallMapper.map(fall)).thenReturn(fallResponse);\r\n\r\n        FallResponse result = readFallController.readFall(TestData.FALLNUMMER);\r\n\r\n        assertThat(result, is(fallResponse));\r\n    }\r\n}\r\n```\r\n->\r\n```\r\n@QuarkusComponentTest\r\nclass ReadFallControllerTest {\r\n\r\n    @Inject\r\n    ReadFallController readFallController;\r\n\r\n    @InjectMock\r\n    FallRepository fallRepository;\r\n\r\n    @InjectMock\r\n    FallMapper fallMapper;\r\n\r\n    @Test\r\n    void readFall(@Mock Fall fall, @Mock FallResponse fallResponse) {\r\n        when(fallRepository.findByFallNummerOrThrow(TestData.FALLNUMMER)).thenReturn(fall);\r\n        when(fallMapper.map(fall)).thenReturn(fallResponse);\r\n\r\n        FallResponse result = readFallController.readFall(TestData.FALLNUMMER);\r\n\r\n        assertThat(result, is(fallResponse));\r\n    }\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nA fully initialized mockito - with parameter resolvers.\r\n\r\n### Actual behavior\r\n\r\norg.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter \r\n\r\n### How to Reproduce?\r\n\r\nRun the QuarkusComponentTest\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n_No response_\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\nSame failure with\r\n`void readFall(@InjectMock Fall fall, @InjectMock FallResponse fallResponse) {`",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41224/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41224/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
