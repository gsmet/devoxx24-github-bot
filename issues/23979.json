{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23979",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23979/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23979/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23979/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23979",
  "id": 1150661070,
  "node_id": "I_kwDOCFbutM5ElbHO",
  "number": 23979,
  "title": "Distinct ObjectMappers for RestEasy Reactive / RestEasy Reactive Client",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/255",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/255",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/255/labels",
    "id": 9565017,
    "node_id": "MI_kwDOCFbutM4AkfNZ",
    "number": 255,
    "title": "3.3.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 310,
    "state": "closed",
    "created_at": "2023-06-21T07:35:19Z",
    "updated_at": "2024-05-17T05:53:43Z",
    "due_on": null,
    "closed_at": "2023-08-09T11:23:12Z"
  },
  "comments": 23,
  "created_at": "2022-02-25T16:54:55Z",
  "updated_at": "2023-07-26T14:16:36Z",
  "closed_at": "2023-07-26T14:16:28Z",
  "active_lock_reason": null,
  "body": "### Description\n\nQuarkus allows a program to use specify a custom Jackson ObjectMapper by using CDI producer method or customize the ObjectMapper with ObjectMapperCustomizer instances.\r\n\r\nI need to have different behaviors for RestEasy Reactive Client use and RestEasy Reactive use. Specifically, I want the service implementation to be set with .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, true) and the client to have .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)\r\n\r\n\n\n### Implementation ideas\n\nPerhaps annotate the CDI producer method and the ObjectMapperCustomizer(s) with with a new qualifier:\r\n\r\n```java\r\npackage io.quarkus.jackson.runtime;\r\n\r\nimport java.lang.annotation.ElementType;\r\nimport java.lang.annotation.Retention;\r\nimport java.lang.annotation.RetentionPolicy;\r\nimport java.lang.annotation.Target;\r\nimport javax.inject.Qualifier;\r\nimport javax.ws.rs.RuntimeType;\r\n\r\n@Qualifier\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Target({ElementType.METHOD, ElementType.FIELD, ElementType.PARAMETER, ElementType.TYPE})\r\npublic @interface ObjectMapperUse {\r\n  RuntimeType value();\r\n}\r\n```\r\n\r\nHow much backwards compatibility is required?  Is there a fallback to unqualified producer if qualified producer is unavailable?",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23979/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23979/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
