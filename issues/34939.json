{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34939",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34939/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34939/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34939/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34939",
  "id": 1816986325,
  "node_id": "I_kwDOCFbutM5sTQLV",
  "number": 34939,
  "title": "Support `@TestHTTPResource` with path params",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/255",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/255",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/255/labels",
    "id": 9565017,
    "node_id": "MI_kwDOCFbutM4AkfNZ",
    "number": 255,
    "title": "3.3.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 310,
    "state": "closed",
    "created_at": "2023-06-21T07:35:19Z",
    "updated_at": "2024-05-17T05:53:43Z",
    "due_on": null,
    "closed_at": "2023-08-09T11:23:12Z"
  },
  "comments": 3,
  "created_at": "2023-07-23T04:46:17Z",
  "updated_at": "2023-07-25T16:52:28Z",
  "closed_at": "2023-07-25T16:52:23Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nIt would be nice if `@TestHTTPResource` (as `String`) supports path params, as RESTassured already supports it.\r\nCurrently, the following test throws an exception:\r\n\r\n```\r\n@QuarkusTest\r\npublic class UserTests {\r\n    \r\n    @TestHTTPEndpoint(UserResource.class)\r\n    @TestHTTPResource(\"{userId}/order/{orderId}\")\r\n    String getUserOrderUrl;\r\n    \r\n    @Test\r\n    void testGettingUserOrder() {\r\n        int userId = 123;\r\n        int orderId = 456;\r\n        given().when().get(getUserOrderUrl, userId, orderId)\r\n               .then().statusCode(200);\r\n    }\r\n}\r\n```\r\n\r\n```\r\nCaused by:\r\n    java.net.URISyntaxException: Illegal character in path at index 30: http://localhost:8081/user/v1/{userId}/order/{orderId}\r\n    at java.base/java.net.URI$Parser.fail(URI.java:2963)\r\n    at java.base/java.net.URI$Parser.checkChars(URI.java:3134)\r\n    at java.base/java.net.URI$Parser.parseHierarchical(URI.java:3216)\r\n    at java.base/java.net.URI$Parser.parse(URI.java:3164)\r\n    at java.base/java.net.URI.<init>(URI.java:628)\r\n    at io.quarkus.test.common.http.TestHTTPResourceManager.inject(TestHTTPResourceManager.java:105)\r\n    ... 83 more\r\n```\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34939/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34939/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
