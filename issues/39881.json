{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39881",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39881/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39881/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39881/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/39881",
  "id": 2225467831,
  "node_id": "I_kwDOCFbutM6EpfG3",
  "number": 39881,
  "title": "Allow to customize OIDC token `x5c` certificate chain verification",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/314",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/314",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/314/labels",
    "id": 10677603,
    "node_id": "MI_kwDOCFbutM4Aou1j",
    "number": 314,
    "title": "3.10.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 193,
    "state": "closed",
    "created_at": "2024-03-13T09:10:43Z",
    "updated_at": "2024-08-07T12:18:40Z",
    "due_on": null,
    "closed_at": "2024-04-16T15:31:05Z"
  },
  "comments": 3,
  "created_at": "2024-04-04T13:09:13Z",
  "updated_at": "2024-04-15T20:17:37Z",
  "closed_at": "2024-04-15T20:17:35Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nIf the JWT token contains an inlined X509 certificate chain which must be used to verify this token's signature then this chain is currently verified like this:\r\n1. it is run through the Vert.x Certificate validator which checks the chain is structured correctly and all but the root certificates are signed by the next one in the chain\r\n2. The root certificate must be present in the truststore\r\n3. The leaf certificate must either be present in the truststore or have its common name trusted with the configured property\r\n\r\nThis is not sufficient though for complex deployments so we should let users customize it with `TokenCertificateValidator` (this is probably a better name than `CertificateValidator` as both the incoming and outgoing OIDC requests may have its own TLS level certificates which are verified at the Vert.x level)\r\n\r\nSingle `TokenCertificateValidator` should be enough. If it is registered then steps 1, 2 remain the same but the step 3 will look like this:\r\n\r\n3. If the leaf certificate' common name is trusted with the configured property then confirm the match. Finish with running `TokenCertificateValidator`\r\n\r\n### Implementation ideas\r\n\r\nThis interface will accept a parsed chain as `List<X509Certificate>`, and a token in the encoded form (which if necessary, can be then analyzed like this: `JsonObject claims = OidcUtils.decodeTokenContent(token);`) because the public key to be extracted from this currently verified certificate chain is needed before the token is decoded and parsed.\r\nParsing token `JsonObject` claims immediately will have an extra cost for custom `TokenCertificateValidator`  which only needs to check the certificates",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39881/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39881/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
