{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33775",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33775/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33775/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33775/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33775",
  "id": 1736368517,
  "node_id": "I_kwDOCFbutM5nfuGF",
  "number": 33775,
  "title": "Cannot customize Jackson serializer and deserializer for java.time.Instant",
  "labels": [
    {
      "id": 985346626,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjY=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/question",
      "name": "kind/question",
      "color": "d876e3",
      "default": false,
      "description": "Further information is requested"
    },
    {
      "id": 3267721944,
      "node_id": "MDU6TGFiZWwzMjY3NzIxOTQ0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/jackson",
      "name": "area/jackson",
      "color": "0366d6",
      "default": false,
      "description": "Issues related to Jackson (JSON library)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 8,
  "created_at": "2023-06-01T13:47:02Z",
  "updated_at": "2023-06-01T14:58:41Z",
  "closed_at": "2023-06-01T14:38:12Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI am trying to create a custom Jackson serializer + deserializer for some java.time types in an existing Quarkus 2 API to help break up the migration to Quarkus 3 in smaller less risky deployments. I'm using the `ObjectMapperCustomizer` interface to add my custom serializer + deserializer however during testing I can never seem to get my implementations used. I've even tried maxing out the priority of the customizer in case it was completing with the priority of internal customizers.\n\n### Expected behavior\n\nI'd expect that my custom serializer and deserializer should be preferred across the API when dealing with the `Instant` type.\n\n### Actual behavior\n\nAnother implementation of a serializer and deserializer is used instead.\n\n### How to Reproduce?\n\nIn general it just involves creating a `ObjectMapperCustomizer` that registers a `SimpleModule` with a custom `StdSerializer<Instant>` and `StdDeserializer<Instant>`. I've created a small reproducible repo [here](https://github.com/oaklandcorp-jkaiser/quarkus-jackson-time-repro) to help aid tracking this one down.\n\n### Output of `uname -a` or `ver`\n\nLinux tester 5.19.0-43-generic #44~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Mon May 22 13:39:36 UTC 2 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"17.0.6\" 2023-01-17 LTS OpenJDK Runtime Environment Corretto-17.0.6.10.1 (build 17.0.6+10-LTS) OpenJDK 64-Bit Server VM Corretto-17.0.6.10.1 (build 17.0.6+10-LTS, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.16.4.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\nVery odd but if I add this line after registering my module in `JacksonCustomizer` my serializer seems to get used. Adding calls like `canDeserialize` hasn't helped me hack the use of my deserilizer into play.\r\n\r\n```\r\nobjectMapper.canSerialize(Instant.class);\r\n```\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33775/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33775/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
