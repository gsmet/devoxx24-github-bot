{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32720",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32720/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32720/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32720/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/32720",
  "id": 1672840094,
  "node_id": "I_kwDOCFbutM5jtYOe",
  "number": 32720,
  "title": "Reactive Programmatic Scheduling",
  "labels": [
    {
      "id": 985346626,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjY=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/question",
      "name": "kind/question",
      "color": "d876e3",
      "default": false,
      "description": "Further information is requested"
    },
    {
      "id": 1321590926,
      "node_id": "MDU6TGFiZWwxMzIxNTkwOTI2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/scheduler",
      "name": "area/scheduler",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 7,
  "created_at": "2023-04-18T10:40:07Z",
  "updated_at": "2023-07-31T12:22:37Z",
  "closed_at": "2023-04-19T09:36:32Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nIn a **reactive context**, it is possible to create a scheduled that persists an object:\r\n\r\n```java\r\n    package org.acme.quartz;\r\n    \r\n    import io.quarkus.hibernate.reactive.panache.common.runtime.ReactiveTransactional;\r\n    import io.quarkus.logging.Log;\r\n    import io.quarkus.scheduler.Scheduled;\r\n    import io.smallrye.mutiny.Uni;\r\n    \r\n    import javax.enterprise.context.ApplicationScoped;\r\n    \r\n    @ApplicationScoped\r\n    public class TaskBean {\r\n    \r\n        @ReactiveTransactional\r\n        @Scheduled(every = \"10s\", identity = \"task-job\")\r\n        Uni<Void> schedule() {\r\n            Log.warn(\"Scheduled task\");\r\n            return new Task().persist()\r\n                    .flatMap(result -> Uni.createFrom().voidItem());\r\n        }\r\n    }\r\n```\r\n\r\nBut it is not possible programmatically:\r\n\r\n```java\r\n    package org.acme.quartz;\r\n    \r\n    import io.quarkus.hibernate.reactive.panache.common.runtime.ReactiveTransactional;\r\n    import io.quarkus.logging.Log;\r\n    import io.quarkus.runtime.StartupEvent;\r\n    import io.smallrye.mutiny.Uni;\r\n    import io.smallrye.mutiny.vertx.MutinyHelper;\r\n    import io.vertx.core.Vertx;\r\n    import org.quartz.Job;\r\n    import org.quartz.JobBuilder;\r\n    import org.quartz.JobDetail;\r\n    import org.quartz.JobExecutionContext;\r\n    import org.quartz.Scheduler;\r\n    import org.quartz.SchedulerException;\r\n    import org.quartz.SimpleScheduleBuilder;\r\n    import org.quartz.Trigger;\r\n    import org.quartz.TriggerBuilder;\r\n    \r\n    import javax.enterprise.context.ApplicationScoped;\r\n    import javax.enterprise.context.control.ActivateRequestContext;\r\n    import javax.enterprise.event.Observes;\r\n    import javax.inject.Inject;\r\n    import java.time.Duration;\r\n    import java.time.temporal.ChronoUnit;\r\n    \r\n    @ApplicationScoped\r\n    public class ProgrammaticallyTaskResource {\r\n    \r\n        private static final String TRIGGER_IDENTIFIER_FORMAT = \"%sTrigger\";\r\n    \r\n        public static final String groupId = \"groupId\";\r\n    \r\n        @Inject\r\n        Scheduler quartz;\r\n    \r\n        void onStart(@Observes final StartupEvent event) throws SchedulerException {\r\n            JobDetail job = JobBuilder.newJob(ProgrammaticallyTaskJob.class)\r\n                    .withIdentity(ProgrammaticallyTaskJob.class.getSimpleName(), groupId)\r\n                    .build();\r\n            Trigger trigger = TriggerBuilder.newTrigger()\r\n                    .withIdentity(String.format(\r\n                            TRIGGER_IDENTIFIER_FORMAT,\r\n                            ProgrammaticallyTaskJob.class.getSimpleName()), groupId)\r\n                    .startNow()\r\n                    .withSchedule(\r\n                            SimpleScheduleBuilder.simpleSchedule()\r\n                                    .withIntervalInSeconds(\r\n                                            Long.valueOf(Duration.of(10, ChronoUnit.SECONDS)\r\n                                                            .getSeconds())\r\n                                                    .intValue())\r\n                                    .repeatForever())\r\n                    .build();\r\n            quartz.scheduleJob(job, trigger);\r\n        }\r\n    \r\n        @ReactiveTransactional\r\n        Uni<Void> business() {\r\n            Log.warn(\"ProgrammaticallyTaskResource!\");\r\n            return new Task().persist()\r\n                    .flatMap(result -> Uni.createFrom().voidItem());\r\n        }\r\n    \r\n        // A new instance of ProgrammaticallyTaskJob is created by Quartz for every job execution\r\n        @ActivateRequestContext\r\n        public static class ProgrammaticallyTaskJob implements Job {\r\n    \r\n            @Inject\r\n            Vertx vertx;\r\n    \r\n            @Inject\r\n            ProgrammaticallyTaskResource service;\r\n    \r\n            public void execute(final JobExecutionContext context) {\r\n                service.business()\r\n                        .runSubscriptionOn(MutinyHelper.executor(vertx.getOrCreateContext()))\r\n                        .subscribe().with(result -> Log.error(result));\r\n            }\r\n    \r\n        }\r\n    }\r\n```\r\n\r\nShould exists a class ReactiveJob on quartz module with a different signature of execute? Something like:\r\n\r\n    Uni<Void> execute(JobExecutionContext var1) throws JobExecutionException;\r\n\r\nI attach the PoC with the PoC :)\r\n\r\nBest regards,\r\n\r\n[ReactiveProgrammaticScheduling.zip](https://github.com/quarkusio/quarkus/files/11260798/ReactiveProgrammaticScheduling.zip)\r\n\r\n\r\n### Expected behavior\r\n\r\nIt should be possible to get the same output programmatically\r\n\r\n### Actual behavior\r\n\r\n```posh\r\njava.lang.RuntimeException: java.util.concurrent.TimeoutException\r\n\tat io.quarkus.hibernate.reactive.panache.common.runtime.AbstractJpaOperations.executeInVertxEventLoop(AbstractJpaOperations.java:52)\r\n\tat io.smallrye.mutiny.operators.uni.UniRunSubscribeOn.subscribe(UniRunSubscribeOn.java:25)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniOnItemTransformToUni.subscribe(UniOnItemTransformToUni.java:25)\r\n\tat io.smallrye.mutiny.operators.AbstractUni.subscribe(AbstractUni.java:36)\r\n\tat io.smallrye.mutiny.operators.uni.UniRunSubscribeOn.lambda$subscribe$0(UniRunSubscribeOn.java:27)\r\n\tat io.smallrye.mutiny.vertx.MutinyHelper.lambda$executor$2(MutinyHelper.java:33)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:264)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:246)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: java.util.concurrent.TimeoutException\r\n\tat java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1886)\r\n\tat java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2021)\r\n\tat io.quarkus.hibernate.reactive.panache.common.runtime.AbstractJpaOperations.executeInVertxEventLoop(AbstractJpaOperations.java:50)\r\n\t... 17 more\r\n```\r\n\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nLinux neotolemus 6.2.10-200.fc37.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Apr  6 23:30:41 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"17.0.6\" 2023-01-17 OpenJDK Runtime Environment (Red_Hat-17.0.6.0.10-1.fc37) (build 17.0.6+10) OpenJDK 64-Bit Server VM (Red_Hat-17.0.6.0.10-1.fc37) (build 17.0.6+10, mixed mode, sharing)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.16.6.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32720/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32720/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
