{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29429",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29429/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29429/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29429/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29429",
  "id": 1461065478,
  "node_id": "I_kwDOCFbutM5XFhcG",
  "number": 29429,
  "title": "ObserverExceptionHandler for non async observers",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/217",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/217",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/217/labels",
    "id": 8670386,
    "node_id": "MI_kwDOCFbutM4AhEyy",
    "number": 217,
    "title": "2.14.2.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 32,
    "state": "closed",
    "created_at": "2022-11-18T18:12:54Z",
    "updated_at": "2023-03-08T15:41:50Z",
    "due_on": null,
    "closed_at": "2022-11-25T13:31:13Z"
  },
  "comments": 6,
  "created_at": "2022-11-23T05:45:19Z",
  "updated_at": "2022-11-24T14:19:13Z",
  "closed_at": "2022-11-23T19:19:41Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nI am facing a production issue right now, where all my log says is:\r\n```\r\nFailure occurred while notifying a transational Observer [method=observerMethod()] for event of type CustomType\r\n- please enable debug logging to see the full stack trace\r\n```\r\n(I removed the FQCN, and replaced them with placeholders).\r\n\r\nThe above log is obiously not enough to figure out what the original exception was. Was it a TimeoutException while publishing to RabbitMQ, or was it a LazyInitException from some hibernate entity? The range of possibilities is simply to wide figure it out with this limited information.\r\n\r\nI am not going to activate debug logging on the production system every time I face this issue. I need a solution which I configure once, and it just works.\r\nAlso, how it is implemented right now, this would lead to 2 lines logged. One error (the one above), and one debug.\r\nThe debug logs are not going into our usual monitoring solution - I would need to see the logs on the prod system.\r\n\r\nThis is where the logging is happening:\r\nhttps://github.com/quarkusio/quarkus/blob/ef43e2a95e48828fee2cf5f1990ebca48ea7a96d/independent-projects/arc/runtime/src/main/java/io/quarkus/arc/impl/EventImpl.java#L473-L480\r\n\r\nFor Async Observers, I found AsyncObserverExceptionHandler, which allows to modify how their exceptions are logged:\r\nhttps://quarkus.io/guides/cdi-reference#exceptions-thrown-by-an-asynchronous-observer-method\r\n\r\nFor normal Observers, can either:\r\n* the exception always be logged. Because what is someone going to do without it?\r\n* or an ObserverExceptionHandler be added, which would allow me to configure logging to my needs?\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29429/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29429/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
