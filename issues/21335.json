{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21335",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21335/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21335/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21335/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21335",
  "id": 1049588764,
  "node_id": "I_kwDOCFbutM4-j3Qc",
  "number": 21335,
  "title": "Event Observer BEFORE_COMPLETION transaction timeout causes strange behaviour",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1633508165,
      "node_id": "MDU6TGFiZWwxNjMzNTA4MTY1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/narayana",
      "name": "area/narayana",
      "color": "0366d6",
      "default": false,
      "description": "Transactions / Narayana"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 17,
  "created_at": "2021-11-10T09:26:17Z",
  "updated_at": "2022-01-03T13:12:44Z",
  "closed_at": "2022-01-03T13:12:44Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nIf you use BEFORE_COMPLETION events and a transaction timeout occurs during that event the expected rollback does not work like expected.\n\n### Expected behavior\n\nCurrent transaction is rolled back.\n\n### Actual behavior\n\nIn our project (with postgresql) the commit happens despite timeout and manually calling setRollbackOnly(). (with and without the setRollbackOnly)\r\nWhen we attempted to reproduce this within the hibernate-orm-quickstart (with h2) project the table was deleted instead.\r\nBoth behaviours should not happen.\n\n### How to Reproduce?\n\nstart mvn test of reproducer\r\n[reproducer_timeout.zip](https://github.com/quarkusio/quarkus/files/7511321/reproducer_timeout.zip)\r\n\r\nIs there anything incorrect on how we use the event? From the documentation setRollbackOnly is allowed in the BEFORE_COMPLETION  event. It works without the timeout.\r\n\r\n\r\n   \r\n```\r\n    @Inject TransactionSynchronizationRegistry registry;\r\n\r\n    public void beforeCompletion(@Observes(during = TransactionPhase.BEFORE_COMPLETION) Fruit exampleEvent) {\r\n        try\r\n        {\r\n            // causes timeout of transaction\r\n            Thread.sleep(4000);\r\n        }\r\n        catch (InterruptedException e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n        // should do rollback\r\n        registry.setRollbackOnly();\r\n        System.out.println(\"done with example event\");\r\n    }\r\n```\r\n\n\n### Output of `uname -a` or `ver`\n\nMINGW64_NT-10.0-19042 w61p08 3.1.4-340.x86_64 2020-05-19 12:55 UTC x86_64 Msys\n\n### Output of `java -version`\n\njava 11.0.5 2019-10-15 LTS Java(TM) SE Runtime Environment 18.9 (build 11.0.5+10-LTS) Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.5+10-LTS, mixed mode)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.3.1.Final and 2.2.X\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.6.3\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21335/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21335/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
