{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38394",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38394/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38394/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38394/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38394",
  "id": 2100321786,
  "node_id": "I_kwDOCFbutM59MF36",
  "number": 38394,
  "title": "quarkus-cache: \"keyGenerator\" destroyed, even if it is annotated with \"Singleton\"",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1808747697,
      "node_id": "MDU6TGFiZWwxODA4NzQ3Njk3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/cache",
      "name": "area/cache",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/307",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/307",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/307/labels",
    "id": 10499697,
    "node_id": "MI_kwDOCFbutM4AoDZx",
    "number": 307,
    "title": "3.7.2",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 45,
    "state": "closed",
    "created_at": "2024-02-01T11:59:43Z",
    "updated_at": "2024-03-12T13:30:51Z",
    "due_on": null,
    "closed_at": "2024-02-08T11:30:05Z"
  },
  "comments": 7,
  "created_at": "2024-01-25T12:46:14Z",
  "updated_at": "2024-02-06T17:25:45Z",
  "closed_at": "2024-01-26T09:53:25Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nThe key generator seems to be destroyed, even if it is marked as `Singleton`.\r\nThis seems a bit confusing, because I thought, that the key generator is only instantiated once - as the annotation `Singleton` says.\r\n\r\nA simple CacheKeyGenerator instance:\r\n```java\r\n@Singleton // We only want a single instance here\r\npublic class RequestContextKeyGenerator implements CacheKeyGenerator\r\n{\r\n  public RequestContextKeyGenerator()\r\n  {\r\n    System.out.println(\"created\"); // <-- Gets logged on EVERY calculateSourceRoot() invocation\r\n  }\r\n\r\n  @Override\r\n  public Object generate(Method method, Object... methodParams)\r\n  {\r\n    // do some fancy key logic here\r\n  }\r\n}\r\n```\r\n\r\nCacheKeyGenerator used in a demo method:\r\n```java\r\n@CacheResult(cacheName = \"sourceRoots\", keyGenerator = RequestContextKeyGenerator.class)\r\nprotected Path calculateSourceRoot(@NonNull Path pPath)\r\n{\r\n  // do some calculations here\r\n}\r\n```\r\n\r\nLet's say I call the `calculateSourceRoot` method 5 times; the key generator gets instantiated 5 times too.\n\n### Expected behavior\n\nI think it is not necessary to destroy the bean after key creation - the key generator bean should be reused, especially if it is marked as `Singleton`.\n\n### Actual behavior\n\nThe key generator gets destroyed after every cache-method invocation.\r\nIt seems, that `keyGenerator.destroy(keyGen);` in io.quarkus.cache.runtime.CacheInterceptor#generateKey() should not be invoked, if the bean is a `Singleton` instance.\r\nThen the generator would be reused properly.\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38394/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38394/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
