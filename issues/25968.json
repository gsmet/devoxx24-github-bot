{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25968",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25968/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25968/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25968/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25968",
  "id": 1261207948,
  "node_id": "I_kwDOCFbutM5LLIGM",
  "number": 25968,
  "title": "vertx-blocked-thread-checker - Quarkus on Kubernetes",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1654772125,
      "node_id": "MDU6TGFiZWwxNjU0NzcyMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kubernetes",
      "name": "area/kubernetes",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 5,
  "created_at": "2022-06-06T00:37:51Z",
  "updated_at": "2023-03-09T12:02:53Z",
  "closed_at": "2023-03-09T12:02:52Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nHello,\r\nAfter deploying my app on kubernetes, the Quarkus backend (with graphql) , the Angular frontend, and the Postgresql databese all three of them are running in pods.\r\nFirst of all, I was exposing the backend and the frontend pods with nodeports, so I type Node IP-address in the url and bang !! --> the frontend can send a request to the backend and I have a feedback.\r\n\r\nWhen I passed to implement an ingress-controller (bellow) and after setting a clusterip for the backend and a DNS.\r\n\r\n```\r\napiVersion: networking.k8s.io/v1\r\nkind: Ingress\r\nmetadata:\r\n  name: my-ingress\r\n  namespace: namespacename\r\nspec:\r\n  ingressClassName: nginx-internal\r\n  rules:\r\n  - host: bilels.rd.company.tn\r\n    http:\r\n      paths:\r\n      - path: /\r\n        backend:\r\n          service:\r\n            name: my-frontend\r\n            port:\r\n              number: 80\r\n        pathType: Prefix\r\n      - path: /here\r\n        backend:\r\n          service:\r\n            name: my-backend\r\n            port:\r\n              number: 443\r\n        pathType: Prefix\r\n```\r\n\r\nThen I open directly the GUI without waiting the finale logs (of the quarkus pod) and I send a GraphQL request from Angular **I get this in the browser's console:**\r\n```\r\nDevTools failed to load source map: Could not load content for chrome-extension://cofdbpoegempjloogbagkncekinflcnj/build/content.js.map: System error: net::ERR_BLOCKED_BY_CLIENT\r\nPOST https://bilels.rd.company.tn/here/graphql 503\r\nERROR Error: Http failure response for https://bilels.rd.company.tn/here/graphql: 503 OK\r\n    at new t (main.f8bdd811da4b7378.js:1:508785)\r\n    at main.f8bdd811da4b7378.js:1:546669\r\n    at _ (main.f8bdd811da4b7378.js:1:502485)\r\n    at main.f8bdd811da4b7378.js:1:502411\r\n    at new t (polyfills.847866961ab00d50.js:1:18350)\r\n    at Object.then (main.f8bdd811da4b7378.js:1:502378)\r\n    at Object.error (main.f8bdd811da4b7378.js:1:502495)\r\n    at kk (main.f8bdd811da4b7378.js:1:464915)\r\n    at zy (main.f8bdd811da4b7378.js:1:465420)\r\n    at t.error (main.f8bdd811da4b7378.js:1:465981)\r\n```\r\n\r\n**And the logs for the backend pod with Lens software:**\r\n```\r\n\tStarting the Java application using /opt/jboss/container/java/run/run-java.sh ...\r\nINFO exec  java -Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Xms87m -Xmx349m -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -XX:CICompilerCount=2 -XX:+ExitOnOutOfMemoryError -cp \".\" -jar /deployments/quarkus-run.jar \r\n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ \r\n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\   \r\n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\__\r\n2022-06-02 18:10:20,705 WARN  [io.qua.net.run.NettyRecorder] (Thread-0) Netty DefaultChannelId initialization (with io.netty.machineId system property set to 06:ce:0c:92:14:a5:83:3f) took more than a second\r\n2022-06-02 18:11:29,707 INFO  [org.fly.cor.int.lic.VersionPrinter] (main) Flyway Community Edition 8.4.2 by Redgate\r\n2022-06-02 18:11:29,708 INFO  [org.fly.cor.int.dat.bas.BaseDatabaseType] (main) Database: jdbc:postgresql://postgres:5432/dbmcsthirdparty (PostgreSQL 14.3)\r\n2022-06-02 18:11:33,905 INFO  [org.fly.cor.int.com.DbMigrate] (main) Current version of schema \"public\": 1\r\n2022-06-02 18:11:33,907 INFO  [org.fly.cor.int.com.DbMigrate] (main) Schema \"public\" is up to date. No migration necessary.\r\n2022-06-02 18:12:00,409 WARN  [io.ver.cor.imp.BlockedThreadChecker] (vertx-blocked-thread-checker) Thread Thread[vert.x-eventloop-thread-1,5,main] has been blocked for 2201 ms, time limit is 2000 ms: io.vertx.core.VertxException: Thread blocked\r\n\tat io.vertx.core.net.impl.TCPServerBase.listen(TCPServerBase.java:125)\r\n\tat io.vertx.core.net.impl.TCPServerBase.bind(TCPServerBase.java:100)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:217)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:149)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:154)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$WebDeploymentVerticle.setupTcpHttpServer(VertxHttpRecorder.java:1067)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$WebDeploymentVerticle.start(VertxHttpRecorder.java:1009)\r\n\tat io.vertx.core.impl.DeploymentManager.lambda$doDeploy$5(DeploymentManager.java:196)\r\n\tat io.vertx.core.impl.DeploymentManager$$Lambda$429/0x0000000840423840.handle(Unknown Source)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:100)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:63)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:38)\r\n\tat io.vertx.core.impl.EventLoopContext$$Lambda$430/0x0000000840423440.run(Unknown Source)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:503)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base@11.0.14.1/java.lang.Thread.run(Thread.java:829)\r\n\tat io.vertx.core.net.impl.TCPServerBase.listen(TCPServerBase.java:163)\r\n\tat io.vertx.core.net.impl.TCPServerBase.bind(TCPServerBase.java:100)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:217)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:149)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:154)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$WebDeploymentVerticle.setupTcpHttpServer(VertxHttpRecorder.java:1067)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$WebDeploymentVerticle.start(VertxHttpRecorder.java:1009)\r\n\tat io.vertx.core.impl.DeploymentManager.lambda$doDeploy$5(DeploymentManager.java:196)\r\n\tat io.vertx.core.impl.DeploymentManager$$Lambda$429/0x0000000840423840.handle(Unknown Source)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:100)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:63)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:38)\r\n\tat io.vertx.core.impl.EventLoopContext$$Lambda$430/0x0000000840423440.run(Unknown Source)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:503)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base@11.0.14.1/java.lang.Thread.run(Thread.java:829)\r\n\tat io.vertx.core.net.impl.TCPServerBase.listen(TCPServerBase.java:125)\r\n\tat io.vertx.core.net.impl.TCPServerBase.bind(TCPServerBase.java:100)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:217)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:149)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:154)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$WebDeploymentVerticle.setupTcpHttpServer(VertxHttpRecorder.java:1067)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$WebDeploymentVerticle.start(VertxHttpRecorder.java:1009)\r\n\tat io.vertx.core.impl.DeploymentManager.lambda$doDeploy$5(DeploymentManager.java:196)\r\n\tat io.vertx.core.impl.DeploymentManager$$Lambda$429/0x0000000840423840.handle(Unknown Source)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:100)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:63)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:38)\r\n\tat io.vertx.core.impl.EventLoopContext$$Lambda$430/0x0000000840423440.run(Unknown Source)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:503)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base@11.0.14.1/java.lang.Thread.run(Thread.java:829)\r\n\tat io.vertx.core.net.impl.AsyncResolveConnectHelper$$Lambda$439/0x000000084045fc40.handle(Unknown Source)\r\n\tat io.vertx.core.net.impl.AsyncResolveConnectHelper.doBind(AsyncResolveConnectHelper.java:71)\r\n\tat io.vertx.core.net.impl.TCPServerBase.listen(TCPServerBase.java:169)\r\n\tat io.vertx.core.net.impl.TCPServerBase.bind(TCPServerBase.java:100)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:217)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:149)\r\n\tat io.vertx.core.http.impl.HttpServerImpl.listen(HttpServerImpl.java:154)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$WebDeploymentVerticle.setupTcpHttpServer(VertxHttpRecorder.java:1067)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$WebDeploymentVerticle.start(VertxHttpRecorder.java:1009)\r\n\tat io.vertx.core.impl.DeploymentManager.lambda$doDeploy$5(DeploymentManager.java:196)\r\n\tat io.vertx.core.impl.DeploymentManager$$Lambda$429/0x0000000840423840.handle(Unknown Source)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:100)\r\n\tat io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:63)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:38)\r\n\tat io.vertx.core.impl.EventLoopContext$$Lambda$430/0x0000000840423440.run(Unknown Source)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:503)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base@11.0.14.1/java.lang.Thread.run(Thread.java:829)\r\n2022-06-02 18:12:11,807 INFO  [io.quarkus] (main) back-mcs-thirdparty 1.0.0-SNAPSHOT on JVM (powered by Quarkus 2.7.3.Final) started in 252.302s. Listening on: http://0.0.0.0:8080\r\n2022-06-02 18:12:12,006 INFO  [io.quarkus] (main) Profile prod activated. \r\n2022-06-02 18:12:12,006 INFO  [io.quarkus] (main) Installed features: [agroal, cdi, flyway, hibernate-orm, hibernate-orm-panache, jdbc-postgresql, kubernetes, kubernetes-client, narayana-jta, resteasy-jackson, resteasy-jsonb, smallrye-context-propagation, smallrye-graphql, vertx]\r\n```\r\n\r\nI tried to resolve it by adding the following property ``` quarkus.vertx.max-event-loop-execute-time=5000 ``` to the ``` application-properties ```\r\nThis time I waited until having all the logs, knowing that the logs come in parts with a time delay that cannot be ignored between them (50-60 sec)\r\n\r\n```\r\nStarting the Java application using /opt/jboss/container/java/run/run-java.sh ...\r\nINFO exec  java -Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Xms87m -Xmx349m -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -XX:CICompilerCount=2 -XX:+ExitOnOutOfMemoryError -cp \".\" -jar /deployments/quarkus-run.jar\r\n**delay here**\r\n__  ____  __  _____   ___  __ ____  ______ \r\n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ \r\n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\   \r\n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/   \r\n2022-06-06 00:02:57,406 WARN  [io.qua.net.run.NettyRecorder] (Thread-0) Netty DefaultChannelId initialization (with io.netty.machineId system property set to 30:e6:9e:4e:4a:a6:c5:35) took more than a second\r\n2022-06-06 00:04:07,409 INFO  [org.fly.cor.int.lic.VersionPrinter] (main) Flyway Community Edition 8.4.2 by Redgate\r\n2022-06-06 00:04:07,705 INFO  [org.fly.cor.int.dat.bas.BaseDatabaseType] (main) Database: jdbc:postgresql://postgres:5432/dbmcsthirdparty (PostgreSQL 14.3)\r\n2022-06-06 00:04:14,613 INFO  [org.fly.cor.int.com.DbMigrate] (main) Current version of schema \"public\": 1\r\n2022-06-06 00:04:15,105 INFO  [org.fly.cor.int.com.DbMigrate] (main) Schema \"public\" is up to date. No migration necessary. \r\n**delay here**\r\n2022-06-06 00:05:03,307 INFO  [io.quarkus] (main) back-mcs-thirdparty 1.0.0-SNAPSHOT on JVM (powered by Quarkus 2.7.3.Final) started in 265.900s. Listening on: http://0.0.0.0:8080\r\n2022-06-06 00:05:03,606 INFO  [io.quarkus] (main) Profile prod activated. \r\n2022-06-06 00:05:03,607 INFO  [io.quarkus] (main) Installed features: [agroal, cdi, flyway, hibernate-orm, hibernate-orm-panache, jdbc-postgresql, kubernetes, kubernetes-client, narayana-jta, resteasy-jackson, resteasy-jsonb, smallrye-context-propagation, smallrye-graphql, smallrye-openapi, swagger-ui, vertx]\r\n```\r\n\r\nAlso after displaying these logs, I have the error bellow in the browser console:\r\n```\r\nUnchecked runtime.lastError: A listener indicated an asynchronous response by returning true, but the message channel closed before a response was received\r\n```\r\n\r\nso I continue and send a request from the GUI and I got the same error message in the browser console. --> 503 again and no new logs for the backend pod\n\n### Expected behavior\n\nI expect a response from the backend pod\n\n### Actual behavior\n\nThe error code 503 appears when I send a request\n\n### How to Reproduce?\n\nI can share \n\n### Output of `uname -a` or `ver`\n\nKubernetes, win 10 (machine)\n\n### Output of `java -version`\n\njava 11\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.7.3\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\ngradle\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25968/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25968/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
