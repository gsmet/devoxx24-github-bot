{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38928",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38928/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38928/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38928/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38928",
  "id": 2146947467,
  "node_id": "I_kwDOCFbutM5_99GL",
  "number": 38928,
  "title": "quarkus-quartz: CDIAwareJob destroys instance of Quartz Job too early when Job is a @Dependent bean",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1321590926,
      "node_id": "MDU6TGFiZWwxMzIxNTkwOTI2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/scheduler",
      "name": "area/scheduler",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/312",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/312",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/312/labels",
    "id": 10606558,
    "node_id": "MI_kwDOCFbutM4Aodfe",
    "number": 312,
    "title": "3.8.1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 44,
    "state": "closed",
    "created_at": "2024-02-26T16:57:35Z",
    "updated_at": "2024-02-28T11:29:26Z",
    "due_on": null,
    "closed_at": "2024-02-28T11:29:26Z"
  },
  "comments": 4,
  "created_at": "2024-02-21T14:51:03Z",
  "updated_at": "2024-02-26T17:01:58Z",
  "closed_at": "2024-02-22T12:07:32Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nFor a recent memory-leak issue (#38824 ) with using `@Dependent`-scoped Job beans in scheduled tasks, the patch (#38882 ) implements a `CDIAwareJob` wrapper class. This class is given an instance handle which destroys the `@Dependent`-scoped bean after Quartz invoked the execute() method on it. \r\n\r\nWhile it is true that Quartz creates a new instance of the target Job class everytime a trigger fires, it is possible to request a re-fire when throwing JobExecutionException with the refire-Flag from within the Job. In this case Quartz invokes the same Job instance again, which was already destroyed by the wrapper by then, leading to an `IllegalStateException` from `Instance.Handle.get()`.\r\n\n\n### Expected behavior\n\nTrigger re-fires and executes Job a second time.\n\n### Actual behavior\n\n```java\r\nException: : java.lang.IllegalStateException: Instance already destroyed\r\n        at io.quarkus.arc.impl.AbstractInstanceHandle.get(AbstractInstanceHandle.java:40)\r\n        at io.quarkus.quartz.runtime.CdiAwareJob.execute(CdiAwareJob.java:29)\r\n```\n\n### How to Reproduce?\n\nUsing this proof-of-concept Job class:\r\n\r\n```java\r\n@Dependent\r\npublic class RefireJob implements Job {\r\n\r\n    private Logger logger = LoggerFactory.getLogger(RefireJob.class);\r\n\r\n    @Override\r\n    public void execute(JobExecutionContext jec) throws JobExecutionException {\r\n        if (jec.getRefireCount() == 0) {\r\n            throw new JobExecutionException(\"Refiring job\", true); // request re-fire\r\n        } else {\r\n            throw new JobExecutionException(\"Job was re-fired successfully\", false); // no re-fire the second time\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nThe **expected output** when scheduling this job on the Quartz scheduler with version **3.7.3** is: \r\n\r\n```java\r\nINFO  [org.qua.cor.JobRunShell] (QuarkusQuartzScheduler_Worker-1) Job DEFAULT.refirejob threw a JobExecutionException: : org.quartz.JobExecutionException: Refiring job\r\n\tat org.acme.refirejob.RefireJob.execute(RefireJob.java:19)\r\n\tat org.quartz.core.JobRunShell.run(JobRunShell.java:202)\r\n\r\nINFO  [org.qua.cor.JobRunShell] (QuarkusQuartzScheduler_Worker-1) Job DEFAULT.refirejob threw a JobExecutionException: : org.quartz.JobExecutionException: Job was refired successfully\r\n\tat org.acme.refirejob.RefireJob.execute(RefireJob.java:21)\r\n\tat org.quartz.core.JobRunShell.run(JobRunShell.java:202)\r\n```\r\n\r\nThe **actual output** on the current Quarkus snapshot of commit 6c7c1735291b0ae19820645d0d3bc1a7981ec3c6 is:\r\n\r\n```java\r\nINFO  [org.qua.cor.JobRunShell] (QuarkusQuartzScheduler_Worker-2) Job DEFAULT.refirejob threw a JobExecutionException: : org.quartz.JobExecutionException: Refiring job\r\n        at org.acme.refirejob.RefireJob.execute(RefireJob.java:19)\r\n        at io.quarkus.quartz.runtime.CdiAwareJob.execute(CdiAwareJob.java:29)\r\n        at org.quartz.core.JobRunShell.run(JobRunShell.java:202)\r\n        at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)\r\n\r\nERROR [org.qua.cor.JobRunShell] (QuarkusQuartzScheduler_Worker-2) Job DEFAULT.refirejob threw an unhandled Exception: : java.lang.IllegalStateException: Instance already destroyed\r\n        at io.quarkus.arc.impl.AbstractInstanceHandle.get(AbstractInstanceHandle.java:40)\r\n        at io.quarkus.quartz.runtime.CdiAwareJob.execute(CdiAwareJob.java:29)\r\n        at org.quartz.core.JobRunShell.run(JobRunShell.java:202)\r\n\r\nERROR [org.qua.cor.ErrorLogger] (QuarkusQuartzScheduler_Worker-2) Job (DEFAULT.refirejob threw an exception.: org.quartz.SchedulerException: Job threw an unhandled exception. [See nested exception: java.lang.IllegalStateException: Instance already destroyed]\r\n        at org.quartz.core.JobRunShell.run(JobRunShell.java:213)\r\n```\r\n``\n\n### Output of `uname -a` or `ver`\n\nLinux 6.5.0-18-generic #18~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Wed Feb  7 11:40:03 UTC 2 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"17.0.9\" 2023-10-17 / OpenJDK Runtime Environment (build 17.0.9+9-Ubuntu-122.04) / OpenJDK 64-Bit Server VM (build 17.0.9+9-Ubuntu-122.04, mixed mode, sharing)\n\n### Quarkus version or git rev\n\n6c7c1735291b0ae19820645d0d3bc1a7981ec3c6\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nGradle 8.6\n\n### Additional information\n\n### Possible solution\r\n\r\nWith Quartz the `Job` interface is essentially a purely-functional interface, meaning it _should_ be safe to create a different instance for the re-fired Job. This could be accomplished by making `CDIJobAware` an `@ApplicationScope`-scoped bean and moving the CDI instance lookup into it. \r\nAlternatively the destruction logic would have to be reworked (maybe using Trigger/Job Listeners), but I don't know of a way to get a guaranteed callback from Quartz for when a Job instance is no longer going to be invoked.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38928/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38928/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
