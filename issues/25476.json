{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25476",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25476/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25476/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25476/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25476",
  "id": 1230788582,
  "node_id": "I_kwDOCFbutM5JXFfm",
  "number": 25476,
  "title": "Mongo id duplication",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1470336085,
      "node_id": "MDU6TGFiZWwxNDcwMzM2MDg1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/mongodb",
      "name": "area/mongodb",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2260340367,
      "node_id": "MDU6TGFiZWwyMjYwMzQwMzY3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/mandrel",
      "name": "area/mandrel",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/187",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/187",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/187/labels",
    "id": 7973847,
    "node_id": "MI_kwDOCFbutM4AeavX",
    "number": 187,
    "title": "2.9.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 59,
    "state": "closed",
    "created_at": "2022-05-12T16:31:43Z",
    "updated_at": "2023-02-21T15:11:20Z",
    "due_on": null,
    "closed_at": "2022-05-17T14:00:39Z"
  },
  "comments": 7,
  "created_at": "2022-05-10T08:16:48Z",
  "updated_at": "2022-05-12T16:39:07Z",
  "closed_at": "2022-05-10T10:31:59Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWith a native application deployed in several pods, inserting a document in mongo can fail with this kind of error :\r\n```\r\ncom.mongodb.MongoWriteException: Write operation error on server localhost:30003. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: compiiu.events index: _id_ dup key: { _id: ObjectId('627a163a7cfc79282b2428e7') }', details={}}.\r\n```\r\nThe ObjectId is set by the mongo driver. It is composed of several parts, see [doc](https://www.mongodb.com/docs/manual/reference/method/ObjectId/) :\r\n- A 4-byte timestamp, representing the ObjectId's creation, measured in seconds since the Unix epoch.\r\n- A 5-byte random value generated once per process. This random value is unique to the machine and process.\r\n- A 3-byte incrementing counter, initialized to a random value.\r\n\r\nIn jar deployment, no problem, the unicity of the different parts is managed by the SecureRandom class.\r\nIn native mode, it appears that SecureRandom is replaced at build time. So each pod share the same SecureRandom\r\n\r\nWith such a replacement, the second part in ObjectId is the same across all application instances.\r\n```java\r\nstatic {\r\n        try {\r\n            SecureRandom secureRandom = new SecureRandom();\r\n            RANDOM_VALUE1 = secureRandom.nextInt(0x01000000);\r\n            RANDOM_VALUE2 = (short) secureRandom.nextInt(0x00008000);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n```\r\n    \r\nThe third part is also impacted :\r\n```java\r\nprivate static final AtomicInteger NEXT_COUNTER = new AtomicInteger(new SecureRandom().nextInt());\r\n```\r\n\r\nAs SecureRandom is used in several ObjectId parts, conflicts are not the majority but can occur and occur during our bench tests.\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nObjectId generated by the mongo driver is intended to be unique\r\n\r\n### Actual behavior\r\n\r\nObjectId duplications occcur at low rate but occur\r\n\r\n### How to Reproduce?\r\n\r\nFollow the [guide](https://quarkus.io/guides/mongodb).\r\nAdd \r\n```java\r\n    void onStart(@Observes StartupEvent ev) {\r\n        LOGGER.info(\"The application is starting...\");\r\n        LOGGER.info(\"ObjectId:\" + new ObjectId().toHexString());\r\n    }\r\n```\r\n\r\nTo see the great proximity of ObjectId across several start, build application in native mode and make several starts\r\n```\r\n2022-05-09 17:07:11,770 INFO  [org.acm.mon.AppLifecycleBean] (main) ObjectId:62792e1fc7f7e82a7794affa\r\n2022-05-09 17:07:14,861 INFO  [org.acm.mon.AppLifecycleBean] (main) ObjectId:62792e22c7f7e82a7794affa\r\n```\r\n62792e1fc7f7e82a7794affa => 62792e1f c7f7e82a77 94affa\r\n62792e22c7f7e82a7794affa => 62792e22 c7f7e82a77 94affa\r\n\r\nFirst part, the timestamp is here different, but it is easy to have the same timestamp with threads and/or pods with several invocations per seconds.\r\nSecond part is always the same  :-(\r\nThird part, the counter starts with the same value due to its initialization with SecureRandom\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nLinux compiiu-492-7g8kp 3.10.0-957.12.2.el7.x86_64 #1 SMP Fri Apr 19 21:09:07 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n### Output of `java -version`\r\n\r\n17\r\n\r\n### GraalVM version (if different from Java)\r\n\r\nGraalVM 22.0.0.2-Final Java 17 Mandrel Distribution\r\n\r\n### Quarkus version or git rev\r\n\r\n2.8.3.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.2\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25476/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25476/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
