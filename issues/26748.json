{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26748",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26748/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26748/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26748/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26748",
  "id": 1305687135,
  "node_id": "I_kwDOCFbutM5N0zRf",
  "number": 26748,
  "title": "CVE-2022-2466 - Request Context not terminated with GraphQL",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2234509819,
      "node_id": "MDU6TGFiZWwyMjM0NTA5ODE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/graphql",
      "name": "area/graphql",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/197",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/197",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/197/labels",
    "id": 8238156,
    "node_id": "MI_kwDOCFbutM4AfbRM",
    "number": 197,
    "title": "2.10.4.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 4,
    "state": "closed",
    "created_at": "2022-07-26T14:29:21Z",
    "updated_at": "2022-07-27T08:27:45Z",
    "due_on": null,
    "closed_at": "2022-07-27T08:27:45Z"
  },
  "comments": 28,
  "created_at": "2022-07-15T07:32:30Z",
  "updated_at": "2022-07-26T14:51:35Z",
  "closed_at": "2022-07-26T14:34:55Z",
  "active_lock_reason": null,
  "body": "\r\n### Describe the bug\r\n\r\n~~Upgrading from Quarkus 2.9.x to 2.10.x whenever i try to access `RoutingContext` request from a bean i get always the headers of the first request that have been made to the app.~~\r\n\r\n~~This happens on both @GraphQLApi endpoints and event in any CDI bean that consumes `RoutingContext` or `HttpServerRequest`.~~\r\n\r\n~~Also by debugging, the CurrentVertxRequest has always stale headers.~~\r\n\r\n**Update:** The request context was not terminated. The issue is not related to the Routing Context.\r\n\r\n\r\nMy dependencies are the following:\r\n\r\n```xml\r\n   <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-kotlin</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-smallrye-graphql</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.smallrye</groupId>\r\n      <artifactId>smallrye-jwt</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-rest-client</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-resteasy</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-rest-client-jackson</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-arc</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.quarkus</groupId>\r\n      <artifactId>quarkus-undertow</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.jetbrains.kotlin</groupId>\r\n      <artifactId>kotlin-stdlib-jdk8</artifactId>\r\n    </dependency>\r\n```\r\n\r\n\r\nCDI bean:\r\n\r\n\r\n```kotlin\r\n@ApplicationScoped\r\nclass JWTAwareContext @Inject constructor(\r\n    val routingContext: RoutingContext\r\n): Context {\r\n    override fun getTenant(): String {\r\n        return parseClaims()!!.getClaimValueAsString(\"realm\")\r\n    }\r\n\r\n    override fun getUser(): String {\r\n        return parseClaims()!!.getClaimValueAsString(\"email\")\r\n    }\r\n\r\n    fun parseClaims(): JwtClaims? {\r\n        val rawToken = this.routingContext.request().headers().get(\"Authorization\")?.replace(\"Bearer \", \"\") // --> this will always stale in 2.10.x\r\n        if (rawToken != null) {\r\n            val jsonClaims = String(Base64.getUrlDecoder().decode(rawToken.split(\".\")[1]), StandardCharsets.UTF_8)\r\n            return JwtClaims.parse(jsonClaims)\r\n        }\r\n        throw PassProNextForbiddenExceptionGQL(ApiError(\"Missing Token\", ErrorCode.FORBIDDEN))\r\n    }\r\n}\r\n```\r\n\r\nGraphql endpoint\r\n\r\n```kotlin\r\n\r\n@GraphQLApi\r\nclass Test {\r\n    @Inject lateinit var routingContext: RoutingContext\r\n\r\n\r\n    @Query\r\n    fun test(): String {\r\n        return  \"hello\";\r\n    }\r\n}\r\n\r\n```\r\n\r\nWith 2.9.x works correctly.\r\n\r\n\r\n### Expected behavior\r\n\r\nEverytime a new Request is performed by a client, the Request headers should be inline with the actual HTTP Request\r\n\r\n### Actual behavior\r\n\r\nWith 2.10.x the first request headers became like cached value and any subsequent request headers will contain those instead of the actual headers\r\n\r\n### How to Reproduce?\r\n\r\n1) create an app with Quarkus 2.10.1 - 2.10.2 and the smallrye graphql extension\r\n2) create an endpoint or a bean injecting RoutingContext\r\n3) set some HTTP headers like Authorization, MyCustomHeader etc and send the http request\r\n4) print RoutingContext.request().headers\r\n5) set others HTTP headers  or remove the previous  and send the new http request\r\n6) the second request headers will contain first request data also if you did not send them\r\n7 ) switch to quarkus 2.9.x and will work as expected\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\nadopt-openjdk-11.0.8\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.10.1 - 2.10.2\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n3.8.1\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26748/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26748/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
