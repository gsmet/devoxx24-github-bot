{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26258",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26258/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26258/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26258/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26258",
  "id": 1278423098,
  "node_id": "I_kwDOCFbutM5MMzA6",
  "number": 26258,
  "title": "OpenTelemetry MDC integration not quite working",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2236031412,
      "node_id": "MDU6TGFiZWwyMjM2MDMxNDEy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/tracing",
      "name": "area/tracing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/189",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189/labels",
    "id": 8065991,
    "node_id": "MI_kwDOCFbutM4AexPH",
    "number": 189,
    "title": "2.11.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 244,
    "state": "closed",
    "created_at": "2022-06-09T10:38:20Z",
    "updated_at": "2023-01-13T10:47:01Z",
    "due_on": null,
    "closed_at": "2022-07-13T14:14:46Z"
  },
  "comments": 8,
  "created_at": "2022-06-21T13:06:45Z",
  "updated_at": "2022-07-04T06:18:48Z",
  "closed_at": "2022-07-04T06:18:44Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhile Quarkus appears to register the trace context fine in the MDC using `VertxMDC`, it appears that it cannot be accessed using the `org.jboss.logging.MDC` class. AFAICT the issue appears to be that the static initialization of `org.jboss.logmanager.MDC#mdcProvider` may not be able to find the `io.quarkus.bootstrap.logging.LateBoundMDCProvider` as registered in a corresponding `META-INF/services` file. This appears to be due to the fact that the mentioned field gets initialized too early and not explicitly using the TCCL. At least when I start my application in dev-mode and set a breakpoint in `org.jboss.logmanager.MDC#getMDCProvider()` the class initialization is triggered by the initialization of `io.quarkus.deployment.dev.DevModeMain#log`.\r\n\r\nIn my \"ultimate\" use case I simply want to use the `quarkus-logging-json` extension to log the log records (including MDC) in JSON and that should include the MDC. But when the logger attempts to get the MDC using `org.jboss.logmanager.ExtLogRecord#getMdcCopy()` (which calls `org.jboss.logmanager.MDC.copyObject()`) the returned result is always empty, since it ends up using the default `org.jboss.logmanager.ThreadLocalMDC` rather than the `io.quarkus.bootstrap.logging.LateBoundMDCProvider` implementation.\n\n### Expected behavior\n\nThe MDC data supplied by the OpenTelemetry integration should be available via the `org.jboss.logging.MDC` API.\n\n### Actual behavior\n\nWhen using the `org.jboss.logging.MDC` API and also the `quarkus-logging-json` extension the MDC data supplied by the Quarkus OpenTelemetry integration is not available.\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.10.0.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26258/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26258/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
