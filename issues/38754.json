{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38754",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38754/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38754/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38754/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38754",
  "id": 2132195657,
  "node_id": "I_kwDOCFbutM5_FrlJ",
  "number": 38754,
  "title": "JAX-RS default security is applied to annotated, inherited endpoints",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/299",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/299",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/299/labels",
    "id": 10429739,
    "node_id": "MI_kwDOCFbutM4AnyUr",
    "number": 299,
    "title": "3.9.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 298,
    "state": "closed",
    "created_at": "2024-01-17T09:57:21Z",
    "updated_at": "2024-07-18T12:19:14Z",
    "due_on": null,
    "closed_at": "2024-03-13T12:25:09Z"
  },
  "comments": 25,
  "created_at": "2024-02-13T12:15:41Z",
  "updated_at": "2024-02-19T07:41:56Z",
  "closed_at": "2024-02-19T07:41:53Z",
  "active_lock_reason": null,
  "body": "## Updated description\r\n\r\nI attached a [reproducer](https://github.com/quarkusio/quarkus/files/14299747/q-jds-test.tar.gz). Run with `./gradlew test`. Please note that all tests pass out-of-the box, all endpoints are annotated with `@RolesAllowed`, and that unauthenticated requests are covered and result in 401 - it works as it should.\r\n\r\nWhen enabling `deny-unannotated-endpoints` or `default-roles-allowed` in `application.properties`, some tests of the base class fail, but shouldn't.\r\n\r\nAlso, `default-roles-allowed` shows some weird behavior on endpoints of the base class. Without `@RolesAllowed` default roles are applied as expected. But when present, `@RolesAllowed` is not ignored as when using `deny-unannotated-endpoints`. It works as expected when the annotated and default role match, but fails when they are different.\r\n\r\nBelow the key parts of the reproducer, Java variant omitted.\r\n\r\nEndpoints:\r\n```kotlin\r\npackage org.example.kotlin\r\n\r\nimport jakarta.annotation.security.RolesAllowed\r\nimport jakarta.ws.rs.GET\r\nimport jakarta.ws.rs.Path\r\n\r\n\r\nobject Roles {\r\n const val ROLE1 = \"role1\"\r\n const val ROLE2 = \"role2\"\r\n}\r\n\r\n\r\n\r\nabstract class Base {\r\n @[GET Path(\"base/\"+Roles.ROLE1)]\r\n @RolesAllowed(Roles.ROLE1)\r\n fun baseRole1() = \"base/\"+Roles.ROLE1\r\n\r\n @[GET Path(\"base/\"+Roles.ROLE2)]\r\n @RolesAllowed(Roles.ROLE2)\r\n fun baseRole2() = \"base/\"+Roles.ROLE2\r\n}\r\n\r\n\r\n@Path(\"/kotlin\")\r\nclass DerivedK : Base() {\r\n @[GET Path(Roles.ROLE1)]\r\n @RolesAllowed(Roles.ROLE1)\r\n fun derivedRole1() = Roles.ROLE1\r\n\r\n @[GET Path(Roles.ROLE2)]\r\n @RolesAllowed(Roles.ROLE2)\r\n fun derivedRole2() = Roles.ROLE2\r\n}\r\n```\r\n\r\nTests:\r\n```kotlin\r\npackage org.example\r\n\r\nimport io.quarkus.test.common.http.TestHTTPEndpoint\r\nimport io.quarkus.test.junit.QuarkusTest\r\nimport io.quarkus.test.security.TestSecurity\r\nimport io.restassured.module.kotlin.extensions.Then\r\nimport io.restassured.module.kotlin.extensions.When\r\nimport org.example.java.DerivedJ\r\nimport org.example.kotlin.DerivedK\r\nimport org.example.kotlin.Roles\r\nimport org.junit.jupiter.api.Test\r\n\r\n\r\ninterface ResourceTest {\r\n val myRole: String?\r\n\r\n private fun test(role: String, base: Boolean) {\r\n  When {\r\n   get((if (base) \"base/\" else \"\")+role)\r\n  } Then {\r\n   statusCode(\r\n    when (myRole) {\r\n     null -> 401\r\n     role -> 200\r\n     else -> 403\r\n    }\r\n   )\r\n  }\r\n }\r\n\r\n @Test\r\n fun `base role1`() = test(Roles.ROLE1, true)\r\n @Test\r\n fun `base role2`() = test(Roles.ROLE2, true)\r\n @Test\r\n fun `derived role1`() = test(Roles.ROLE1, false)\r\n @Test\r\n fun `derived role2`() = test(Roles.ROLE2, false)\r\n}\r\n\r\n\r\n@QuarkusTest\r\n@TestHTTPEndpoint(DerivedK::class)\r\nclass KotlinResourceTestWithNoRole : ResourceTest {\r\n override val myRole = null\r\n}\r\n\r\n\r\n@QuarkusTest\r\n@TestHTTPEndpoint(DerivedK::class)\r\n// Note that Kotlin compiles default interfaces methods into the class, so @TestSecurity applies.\r\n@TestSecurity(user = \"test1\", roles = [Roles.ROLE1])\r\nclass KotlinResourceTestWithRole1 : ResourceTest {\r\n override val myRole = Roles.ROLE1\r\n}\r\n\r\n\r\n@QuarkusTest\r\n@TestHTTPEndpoint(DerivedK::class)\r\n@TestSecurity(user = \"test2\", roles = [Roles.ROLE2])\r\nclass KotlinResourceTestWithRole2 : ResourceTest {\r\n override val myRole = Roles.ROLE2\r\n}\r\n```\r\n[q-jds-test.tar.gz](https://github.com/quarkusio/quarkus/files/14299747/q-jds-test.tar.gz)\r\n\r\n## Original description\r\n\r\n### Describe the bug\r\n\r\nNot sure, whether this is now intended behavior or a bug, so I'll keep it short. Below is a rough example. If it's supposed to work (maybe it does, I left out some probably irrelevant details), I'll create a reproducer.\r\n\r\n```kotlin\r\nabstract class AbstractFoo {\r\n @GET\r\n fun foo() = \"Hello world!\"\r\n}\r\n\r\n@ApplicationScoped\r\n@Path(\"foo1\")\r\n@Authenticated\r\nclass Foo1 : AbstractFoo()\r\n\r\n@ApplicationScoped\r\n@Path(\"foo2\")\r\n@Authenticated\r\nclass Foo2 : AbstractFoo()\r\n```\r\n\r\n### Expected behavior\r\n\r\nRequests to /foo1 and /foo2 should work when authenticated, because the derived concrete classes have an explicit `@Authenticated` annotation.\r\n\r\n### Actual behavior\r\n\r\nRequests fail with status 403, although they are authenticated.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38754/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38754/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
