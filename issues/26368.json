{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26368",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26368/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26368/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26368/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26368",
  "id": 1284831987,
  "node_id": "I_kwDOCFbutM5MlPrz",
  "number": 26368,
  "title": "Zookeeper client extension",
  "labels": [
    {
      "id": 1553869078,
      "node_id": "MDU6TGFiZWwxNTUzODY5MDc4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/extension-proposal",
      "name": "kind/extension-proposal",
      "color": "abfcbb",
      "default": false,
      "description": "Discuss and Propose new extensions"
    },
    {
      "id": 2388070055,
      "node_id": "MDU6TGFiZWwyMzg4MDcwMDU1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/quarkiverse",
      "name": "area/quarkiverse",
      "color": "a01441",
      "default": false,
      "description": "This issue/PR is part of the Quarkiverse organization"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 8,
  "created_at": "2022-06-26T07:23:44Z",
  "updated_at": "2022-09-05T13:08:21Z",
  "closed_at": "2022-09-05T12:38:02Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nHello\r\n\r\nI would like to propose the subject extension to provide a seamless integration with the latest version of Apache Zookeeper.\r\n\r\nThe purpose of this extension is to provide an injectable, application scoped, zookeeper client so that providing:\r\n- Client interactions for znodes operations\r\n- CDI events triggered by zookeeper watchers\r\n\r\nOnce the basic capabilities are achieved, the idea is to enhance the extension with some common recipes:\r\n- Locks\r\n- Groups & leader election\r\n- etc etc etc\r\n\r\nLet me say, a Quarkus version of Apache Curator (anyway the idea is not to bring Curator in the extension and just leverage the Apache Zookeeper client).\r\n\r\nedit: and if it is needed I agree to lead the project but I don't really have so much practice about contributing to OSS\r\n\r\nBest regards\r\nRiccardo\r\n\r\n### Configuration suggestion\r\n\r\nDraft idea, strictly inspired by the zookeeper client connection parameters.\r\nSo far, no named connections are expected but in a multitenant context it should be taken into consideration.\r\n\r\n```\r\nquarkus.zookeeper.health.enabled\r\nquarkus.zookeeper.session.connectionString\r\nquarkus.zookeeper.session.timeout\r\nquarkus.zookeeper.session.canBeReadOnly\r\nquarkus.zookeeper.client.disableAutowatchReset\r\nquarkus.zookeeper.client.secure\r\nquarkus.zookeeper.client.clientCnxnSocket\r\nquarkus.zookeeper.client.jute.maxbuffer\r\nquarkus.zookeeper.client.ssl.keyStore.location\r\nquarkus.zookeeper.client.ssl.keyStore.password\r\nquarkus.zookeeper.client.ssl.keyStore.type\r\nquarkus.zookeeper.client.ssl.trustStore.location\r\nquarkus.zookeeper.client.ssl.trustStore.password\r\nquarkus.zookeeper.client.ssl.trustStore.type\r\nquarkus.zookeeper.client.auth.sasl.enabled\r\nquarkus.zookeeper.client.auth.clientconfig\r\nquarkus.zookeeper.client.auth.serverPrincipal\r\nquarkus.zookeeper.client.auth.clientUsername\r\nquarkus.zookeeper.client.auth.clientCanonicalizeHostname\r\nquarkus.zookeeper.client.auth.serverRealm\r\n```\r\n\r\n### Additional context\r\n\r\nZookeeper could be useful to coordinate multiple instances of the same microservice:  a pure stateless design is not always achievable finding in zookeeper a resource to store small shared runtime data without the need to deploy an RDBM or whatever, a resource to identify a leader within a replicaset and so on.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26368/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26368/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
