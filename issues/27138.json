{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27138",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27138/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27138/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27138/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27138",
  "id": 1328841664,
  "node_id": "I_kwDOCFbutM5PNIPA",
  "number": 27138,
  "title": "Allow OIDC to validate custom claims in the access token",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/194",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/194",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/194/labels",
    "id": 8190506,
    "node_id": "MI_kwDOCFbutM4AfPoq",
    "number": 194,
    "title": "2.12.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 238,
    "state": "closed",
    "created_at": "2022-07-13T08:15:30Z",
    "updated_at": "2022-08-23T15:43:55Z",
    "due_on": null,
    "closed_at": "2022-08-17T12:32:03Z"
  },
  "comments": 3,
  "created_at": "2022-08-04T15:44:03Z",
  "updated_at": "2022-08-16T16:51:35Z",
  "closed_at": "2022-08-16T16:51:31Z",
  "active_lock_reason": null,
  "body": "### Description\n\nIn the OIDC extension, the two main claims that can be customized to verify access tokens are issuer and audience. This is fine for a lot of use cases however it gets trickier in a multi-tenant scenario where multiple organizations are mixed into the same user pool. The issuer and audience remain the same, however, providers like Auth0 insert an extra claim named `org_id` to represent the tenant. While it is possible to work around this on Auth0 by encoding the organization into the audience, it's not a clean implementation of what the audience claim is supposed to represent and some other providers don't have this kind of capability. It would be nice if the OIDC extension was able to validate custom claims in the access token.\n\n### Implementation ideas\n\nI propose adding a new configuration property named `quarkus.oidc.token.custom-claims`. It would be a string map with the keys representing the claims and the value being the claim's target value. An example would be `quarkus.oidc.token.custom-claims.org_id=org_...`. If the claim's value doesn't match or doesn't exist, the authentication attempt is rejected with a 401 error.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27138/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27138/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
