{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34086",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34086/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34086/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34086/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34086",
  "id": 1760138940,
  "node_id": "I_kwDOCFbutM5o6Za8",
  "number": 34086,
  "title": "QuarkusComponentTest: offer a convenient way of mocking interceptors",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/255",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/255",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/255/labels",
    "id": 9565017,
    "node_id": "MI_kwDOCFbutM4AkfNZ",
    "number": 255,
    "title": "3.3.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 310,
    "state": "closed",
    "created_at": "2023-06-21T07:35:19Z",
    "updated_at": "2024-05-17T05:53:43Z",
    "due_on": null,
    "closed_at": "2023-08-09T11:23:12Z"
  },
  "comments": 5,
  "created_at": "2023-06-16T08:01:45Z",
  "updated_at": "2023-06-26T06:55:41Z",
  "closed_at": "2023-06-26T06:55:37Z",
  "active_lock_reason": null,
  "body": "### Description\n\nCurrently, if an interceptor binding is declared in a tested component and we would like to reflect the binding in the test, then an mock interceptor class must be registered as an additional component, e.g. something like:\r\n\r\n```java\r\n@QuarkusComponentTest(SimpleInterceptor.class)\r\npublic class InterceptorMockingTest {\r\n\r\n    @Inject\r\n    TheComponent theComponent;\r\n\r\n    @Test\r\n    public void testPing() {\r\n        assertEquals(\"ok\", theComponent.ping());\r\n    }\r\n\r\n    @Singleton\r\n    static class TheComponent {\r\n\r\n        @SimpleBinding\r\n        String ping() {\r\n            return \"true\";\r\n        }\r\n\r\n    }\r\n    @Priority(1)\r\n    @SimpleBinding\r\n    @Interceptor\r\n    static class SimpleInterceptor {\r\n\r\n        @AroundInvoke\r\n        Object aroundInvoke(InvocationContext context) throws Exception {\r\n            return \"ok\";\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nMoreover, this interceptor class may cause problems in regular `@QuarkusTest`s, because all classes in `src/test/java` are discovered by default. So the [%test.quarkus.arc.exclude-types](https://quarkus.io/guides/cdi-reference#quarkus-arc_quarkus.arc.exclude-types) config property would need to be used in order to exclude the interceptor class from discovery.\n\n### Implementation ideas\n\nI was thinking that we could support \"interceptor methods\" declared direcly on the test class.\r\n\r\n```java\r\n@QuarkusComponentTest\r\npublic class InterceptorMockingTest {\r\n\r\n    @Inject\r\n    TheComponent theComponent;\r\n\r\n    @Test\r\n    public void testPing() {\r\n        assertEquals(\"ok\", theComponent.ping());\r\n    }\r\n\r\n    @Singleton\r\n    static class TheComponent {\r\n\r\n        @SimpleBinding\r\n        String ping() {\r\n            return \"true\";\r\n        }\r\n\r\n    }\r\n\r\n    @SimpleBinding\r\n    @AroundInvoke\r\n    Object aroundSimpleBinding(InvocationContext context) throws Exception {\r\n            return \"ok\";\r\n    }\r\n}\r\n```\r\n\r\nThat would of course require support of synthetic interceptors in ArC (not supported at the moment)",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34086/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34086/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
