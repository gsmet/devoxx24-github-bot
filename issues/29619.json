{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29619",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29619/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29619/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29619/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29619",
  "id": 1471518278,
  "node_id": "I_kwDOCFbutM5XtZZG",
  "number": 29619,
  "title": "Random execution error when Lambda Handler class implements ```RequestHandler<Object, \"anything\">```",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1326073020,
      "node_id": "MDU6TGFiZWwxMzI2MDczMDIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/amazon-lambda",
      "name": "area/amazon-lambda",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2022-12-01T15:30:44Z",
  "updated_at": "2022-12-01T18:51:13Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nHi, how are you doing? I found some strange behavior writing AWS Lambdas using `quarkus-amazon-lambda` and I would like to share my findings.\r\n\r\nWhen a handler class with multiple `public` methods implements Amazon Lambda's `RequestHandler` interface with input type being `Object` and output type being anything else (ex. ```RequestHandler<Object, \"anything\">```), the invocation behavior becomes erratic.\r\n\r\nI reproduced failures on three distinct scenarios.\r\n\r\n### First scenario\r\nHere we have a handler class with a single `handleRequest` method and another public method by the name of `generateResponse`.\r\n```java\r\npackage org.test.lambda;\r\n\r\nimport org.jboss.logging.Logger;\r\n\r\nimport com.amazonaws.services.lambda.runtime.Context;\r\nimport com.amazonaws.services.lambda.runtime.RequestHandler;\r\n\r\npublic class GreetingLambda implements RequestHandler<Object, String> {\r\n    private static final Logger log = Logger.getLogger(GreetingLambda.class);\r\n    private String response = null;\r\n\r\n    @Override\r\n    public String handleRequest(Object input, Context context) {\r\n        log.info(\"Called 'handleRequest'\");\r\n        generateResponse(input);\r\n        return response;\r\n    }\r\n\r\n    public void generateResponse(Object input) {\r\n        log.info(\"Called 'generateResponse'\");\r\n        response = \"Hello!\";\r\n    }\r\n}\r\n```\r\n\r\nWhen executing tests, sometimes they pass, but randomly they will fail with the following piece of log:\r\n```plaintext\r\n> Task :test\r\n\r\nLambdaHandlerTest STANDARD_OUT\r\n    2022-12-01 11:16:41,028 WARN  [io.net.res.dns.DnsServerAddressStreamProviders] (build-4) Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'\r\n    2022-12-01 11:16:41,251 INFO  [io.qua.ama.lam.run.MockEventServer] (build-4) Mock Lambda Event Server Started\r\n    2022-12-01 11:16:41,821 INFO  [io.qua.ama.lam.run.AbstractLambdaPollLoop] (Lambda Thread (TEST)) Listening on: http://localhost:8081/_lambda_/2018-06-01/runtime/invocation/next\r\n    2022-12-01 11:16:41,836 INFO  [io.quarkus] (Test worker) amazon-lambda-random-shutdown-failure 1.0.0-SNAPSHOT on JVM (powered by Quarkus 2.14.2.Final) started in 1.692s. \r\n    2022-12-01 11:16:41,837 INFO  [io.quarkus] (Test worker) Profile test activated. \r\n    2022-12-01 11:16:41,838 INFO  [io.quarkus] (Test worker) Installed features: [amazon-lambda, cdi]\r\n\r\nCalled 'handleRequest'\r\nCalled 'generateResponse'\r\nFailed to run lambda (TEST)\r\njava.lang.IllegalArgumentException: Class void is not a primitive type\r\n        at com.fasterxml.jackson.databind.util.ClassUtil.wrapperType(ClassUtil.java:908)\r\n        at com.fasterxml.jackson.databind.SerializerProvider._reportIncompatibleRootType(SerializerProvider.java:1385)\r\n        at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:381)\r\n        at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1514)\r\n        at com.fasterxml.jackson.databind.ObjectWriter._writeValueAndClose(ObjectWriter.java:1219)\r\n        at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1044)\r\n        at io.quarkus.amazon.lambda.runtime.JacksonOutputWriter.writeValue(JacksonOutputWriter.java:18)\r\n        at io.quarkus.amazon.lambda.runtime.AbstractLambdaPollLoop.postResponse(AbstractLambdaPollLoop.java:249)\r\n        at io.quarkus.amazon.lambda.runtime.AbstractLambdaPollLoop$1.run(AbstractLambdaPollLoop.java:138)\r\n        at java.base/java.lang.Thread.run(Thread.java:829)\r\nAborting lambda poll loop: ending dev/test mode\r\nLambda polling thread complete (TEST)\r\n%s%s stopped in %ss\r\nStopping Mock Lambda Event Server\r\nGradle Test Executor 51 finished executing tests.\r\n```\r\n\r\nWhich suggests that the correct `handleRequest` method was chosen and called (note the `Called 'handleRequest' log at the beginning`) but the Lambda response, which is a `String` was being transformed into `void`, thus the failure. `void` is not the return type of the `handleRequest` method but is the return type of the `generateResponse` method.\r\n\r\nI was able to reproduce this scenario on a real AWS Lambda's environment.\r\n\r\nBoth the following scenarios are variations of this one.\r\n\r\n### Second scenario\r\nLet's change the previous code a little bit:\r\n\r\n```diff\r\npackage org.test.lambda;\r\n\r\nimport org.jboss.logging.Logger;\r\n\r\nimport com.amazonaws.services.lambda.runtime.Context;\r\nimport com.amazonaws.services.lambda.runtime.RequestHandler;\r\n\r\npublic class GreetingLambda implements RequestHandler<Object, String> {\r\n    private static final Logger log = Logger.getLogger(GreetingLambda.class);\r\n    private String response = null;\r\n\r\n    @Override\r\n    public String handleRequest(Object input, Context context) {\r\n        log.info(\"Called 'handleRequest'\");\r\n-       generateResponse(input);\r\n+       generateResponse(\"ignored\");\r\n        return response;\r\n    }\r\n\r\n-    public void generateResponse(Object input) {\r\n+    public void generateResponse(String input) {\r\n        log.info(\"Called 'generateResponse'\"); \r\n        response = \"Hello!\";\r\n    }\r\n}\r\n```\r\n\r\nNow the tests will randomly fail with:\r\n```plaintext\r\n> Task :test\r\n    2022-12-01 11:22:49,776 WARN  [io.net.res.dns.DnsServerAddressStreamProviders] (build-26) Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'\r\n    2022-12-01 11:22:49,981 INFO  [io.qua.ama.lam.run.MockEventServer] (build-26) Mock Lambda Event Server Started\r\n    2022-12-01 11:22:50,664 INFO  [io.qua.ama.lam.run.AbstractLambdaPollLoop] (Lambda Thread (TEST)) Listening on: http://localhost:8081/_lambda_/2018-06-01/runtime/invocation/next\r\n    2022-12-01 11:22:50,670 INFO  [io.quarkus] (Test worker) amazon-lambda-random-shutdown-failure 1.0.0-SNAPSHOT on JVM (powered by Quarkus 2.14.2.Final) started in 1.822s. \r\n    2022-12-01 11:22:50,671 INFO  [io.quarkus] (Test worker) Profile test activated. \r\n    2022-12-01 11:22:50,671 INFO  [io.quarkus] (Test worker) Installed features: [amazon-lambda, cdi]\r\n\r\nLambdaHandlerTest > testSimpleLambdaSuccess() STANDARD_OUT\r\n    2022-12-01 11:22:52,175 ERROR [io.qua.ama.lam.run.AbstractLambdaPollLoop] (Lambda Thread (TEST)) Failed to run lambda (TEST): com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.lang.String` from Object value (token `JsonToken.START_OBJECT`)\r\n     at [Source: (sun.net.www.protocol.http.HttpURLConnection$HttpInputStream); line: 1, column: 1]\r\n        at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1420)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.extractScalarFromObject(DeserializationContext.java:932)\r\n        at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:62)\r\n        at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:11)\r\n        at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\r\n        at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)\r\n        at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)\r\n        at io.quarkus.amazon.lambda.runtime.JacksonInputReader.readValue(JacksonInputReader.java:17)\r\n        at io.quarkus.amazon.lambda.runtime.AbstractLambdaPollLoop$1.run(AbstractLambdaPollLoop.java:135)\r\n        at java.base/java.lang.Thread.run(Thread.java:829)\r\n\r\n\r\nFailed to run lambda (TEST)\r\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.lang.String` from Object value (token `JsonToken.START_OBJECT`)\r\n at [Source: (sun.net.www.protocol.http.HttpURLConnection$HttpInputStream); line: 1, column: 1]\r\n        at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1420)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.extractScalarFromObject(DeserializationContext.java:932)\r\n        at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:62)\r\n        at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:11)\r\n        at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\r\n        at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)\r\n        at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)\r\n        at io.quarkus.amazon.lambda.runtime.JacksonInputReader.readValue(JacksonInputReader.java:17)\r\n        at io.quarkus.amazon.lambda.runtime.AbstractLambdaPollLoop$1.run(AbstractLambdaPollLoop.java:135)\r\n        at java.base@11.0.17/java.lang.Thread.run(Thread.java:829)\r\nAborting lambda poll loop: ending dev/test mode\r\nLambda polling thread complete (TEST)\r\n%s%s stopped in %ss\r\nStopping Mock Lambda Event Server\r\nGradle Test Executor 52 finished executing tests.\r\n```\r\n\r\nNow it seems that `public void generateResponse(String input)` was called directly and the error resulted from trying to convert the `Object` input of the handler to the `String` class argument of this method.\r\n\r\n### Third scenario\r\nLet's further change the `generateResponse` method by removing its arguments:\r\n```diff\r\npackage org.test.lambda;\r\n\r\nimport org.jboss.logging.Logger;\r\n\r\nimport com.amazonaws.services.lambda.runtime.Context;\r\nimport com.amazonaws.services.lambda.runtime.RequestHandler;\r\n\r\npublic class GreetingLambda implements RequestHandler<Object, String> {\r\n    private static final Logger log = Logger.getLogger(GreetingLambda.class);\r\n    private String response = null;\r\n\r\n    @Override\r\n    public String handleRequest(Object input, Context context) {\r\n        log.info(\"Called 'handleRequest'\");\r\n-       generateResponse(\"ignored\");\r\n+       generateResponse();\r\n        return response;\r\n    }\r\n\r\n-    public void generateResponse(String input) {\r\n+    public void generateResponse() {\r\n        log.info(\"Called 'generateResponse'\");\r\n        response = \"Hello!\";\r\n    }\r\n}\r\n```\r\n\r\nNow we have a bigger stacktrace:\r\n```plaintext\r\n> Task :test FAILED\r\nLambdaHandlerTest STANDARD_OUT\r\n    2022-12-01 11:40:39,480 WARN  [io.net.res.dns.DnsServerAddressStreamProviders] (build-17) Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'\r\n    2022-12-01 11:40:39,651 INFO  [io.qua.ama.lam.run.MockEventServer] (build-17) Mock Lambda Event Server Started\r\n    2022-12-01 11:40:40,292 INFO  [io.qua.ama.lam.run.AbstractLambdaPollLoop] (Lambda Thread (TEST)) Listening on: http://localhost:8081/_lambda_/2018-06-01/runtime/invocation/next\r\n\r\nLambdaHandlerTest > testSimpleLambdaSuccess() FAILED\r\n    java.lang.RuntimeException: java.lang.RuntimeException: Failed to start quarkus\r\n        at io.quarkus.test.junit.QuarkusTestExtension.throwBootFailureException(QuarkusTestExtension.java:625)\r\n        at io.quarkus.test.junit.QuarkusTestExtension.interceptTestClassConstructor(QuarkusTestExtension.java:696)\r\n        at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n        at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n        at org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestClassConstructor(InvocationInterceptor.java:73)\r\n        at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n        at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n        at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n        at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n        at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n        at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n        at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:62)\r\n        at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestClassConstructor(ClassBasedTestDescriptor.java:363)\r\n        at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateTestClass(ClassBasedTestDescriptor.java:310)\r\n        at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:79)\r\n        at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:286)\r\n        at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)\r\n        at java.base/java.util.Optional.orElseGet(Optional.java:369)\r\n        at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)\r\n        at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n        at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)\r\n        at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n        at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)\r\n        at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n        at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n        at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n        at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n        at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n        at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n        at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n        at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n        at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n        at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n        at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n        at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n        at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n        at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n        at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n        at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n        at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)\r\n        at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)\r\n        at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)\r\n        at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)\r\n        at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)\r\n        at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)\r\n        at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)\r\n        at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)\r\n        at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)\r\n        at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)\r\n        at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\r\n        at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\r\n        at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\r\n        at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\n        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n        at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\r\n        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\r\n        at com.sun.proxy.$Proxy2.stop(Unknown Source)\r\n        at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)\r\n        at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\r\n        at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\r\n        at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\r\n        at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\r\n        at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)\r\n        at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\r\n        at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\r\n        at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\r\n\r\n        Caused by:\r\n        java.lang.RuntimeException: Failed to start quarkus\r\n            at io.quarkus.runner.ApplicationImpl.doStart(Unknown Source)\r\n            at io.quarkus.runtime.Application.start(Application.java:101)\r\n            at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n            at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n            at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n            at java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n            at io.quarkus.runner.bootstrap.StartupActionImpl.run(StartupActionImpl.java:253)\r\n            at io.quarkus.test.junit.QuarkusTestExtension.doJavaStart(QuarkusTestExtension.java:250)\r\n            at io.quarkus.test.junit.QuarkusTestExtension.ensureStarted(QuarkusTestExtension.java:592)\r\n            at io.quarkus.test.junit.QuarkusTestExtension.beforeAll(QuarkusTestExtension.java:640)\r\n            at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllCallbacks$12(ClassBasedTestDescriptor.java:395)\r\n            at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n            at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllCallbacks(ClassBasedTestDescriptor.java:395)\r\n            at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:211)\r\n            at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:84)\r\n            at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:148)\r\n            ... 52 more\r\n\r\n            Caused by:\r\n            java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n                at io.quarkus.amazon.lambda.runtime.AmazonLambdaRecorder.setHandlerClass(AmazonLambdaRecorder.java:61)\r\n                at io.quarkus.amazon.lambda.runtime.AmazonLambdaRecorder.chooseHandlerClass(AmazonLambdaRecorder.java:158)\r\n                at io.quarkus.deployment.steps.AmazonLambdaProcessor$recordHandlerClass308924844.deploy_0(Unknown Source)\r\n                at io.quarkus.deployment.steps.AmazonLambdaProcessor$recordHandlerClass308924844.deploy(Unknown Source)\r\n                ... 68 more\r\n\r\n1 test completed, 1 failed\r\nFinished generating test XML results (0.0 secs) into: /Users/luiz.matos/Downloads/amazon-lambda-random-shutdown-failure/build/test-results/test\r\nGenerating HTML test report...\r\nFinished generating test html results (0.002 secs) into: /Users/luiz.matos/Downloads/amazon-lambda-random-shutdown-failure/build/reports/tests/test\r\n:test (Thread[Execution worker Thread 11,5,main]) completed. Took 3.822 secs.\r\n```\r\n\r\nWhich indicates that the `generateResponse` would be wrongly chosen as handler method for the class, but the resulting error prevented quarkus from initializing.\r\n\r\n## How to prevent?\r\nThe third scenario was described previously on #11510. On this discussion, some suggested solutions were:\r\n\r\n- keep a single `public` method on the handler class, so quarkus will never pick the wrong one to call, or\r\n- implement a stricter version of the `RequestHandler` interface by replacing the generic `Object`-based input by some specific type\r\n\r\nBoth solutions seem to work by the tests I made, so hopefully this issue will be useful to anyone encountering a similar problem and looking for a solution :)\r\n\r\n## What is the reason?\r\nAccording to the #11510 issue, the behavior is related to quarkus non-deterministic discovery of the handler method. This process initially ignores `handleRequest` methods where the input type is `Object` and then randomly picks the first method it founds to use as handler. Looking around, I found this piece of code which I believe describes this behavior:\r\nhttps://github.com/quarkusio/quarkus/blob/45dba69b9c1d93e6ae8d6b31699d8ac253b1683a/extensions/amazon-lambda/runtime/src/main/java/io/quarkus/amazon/lambda/runtime/AmazonLambdaRecorder.java#L90-L110\r\n\r\nThe behavior in question is quite puzzling, the exceptions thrown significantly change based on the state of code and no recommendation of the suggested prevention measures is given on the [official docs](https://quarkus.io/guides/amazon-lambda). So, after struggling with these scenarios, I decided to open this issue.\r\n\r\n### Expected behavior\r\n\r\nquarkus should choose the correct `handleRequest` method and not pick one method randomly. It should also be able to serialize the response to the correct return type\r\n\r\n### Actual behavior\r\n\r\nquarkus randomly chooses from the `public` methods declared one method to handle requests. It also exhibits inconsistency regarding the `handleRequest` method return type even when calling it, by trying to serialize the response into an unexpected type\r\n\r\n### How to Reproduce?\r\n\r\nReproducer: https://github.com/lffloyd/amazon-lambda-random-shutdown-failure-repro (its a Gradle repo but that doesn't seem related at all)\r\n\r\nThe reproducer consists of the code shown on the `First scenario` section above. The other scenarios are derived from small changes to the referred code, as shown previously. The reproducer was generated with https://code.quarkus.io/, using Java 11, gradle and adding just the `quarkus-amazon-lambda` extension.\r\n\r\nSteps to reproduce:\r\n1. Execute `./gradlew clean test build --info --stacktrace`. Sometimes the test will fail, sometimes it will run successfully. When a failure occurs, it conforms to the described error. The behavior is non-deterministic\r\n2. You can update the code to reflect the other scenarios. By executing tests again, the error will happen randomly again\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nDarwin Kernel Version 21.6.0: Wed Aug 10 14:25:27 PDT 2022; root:xnu-8020.141.5~2/RELEASE_X86_64 x86_64\r\n\r\n### Output of `java -version`\r\n\r\n11.0.17\r\n\r\n### GraalVM version (if different from Java)\r\n\r\nOpenJDK 64-Bit Server VM GraalVM CE 22.3.0 (build 11.0.17+8-jvmci-22.3-b08, mixed mode, sharing)\r\n\r\n### Quarkus version or git rev\r\n\r\n2.14.2.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n7.5.1 (gradle)\r\n\r\n### Additional information\r\n\r\n#11510 is a related issue and describes the third failure scenario described above.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29619/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29619/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
