{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35294",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35294/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35294/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35294/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35294",
  "id": 1843548902,
  "node_id": "I_kwDOCFbutM5t4lLm",
  "number": 35294,
  "title": "java.util.NoSuchElementException when using jakarta.validation.*",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1305687763,
      "node_id": "MDU6TGFiZWwxMzA1Njg3NzYz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-validator",
      "name": "area/hibernate-validator",
      "color": "0366d6",
      "default": false,
      "description": "Hibernate Validator"
    },
    {
      "id": 2234509819,
      "node_id": "MDU6TGFiZWwyMjM0NTA5ODE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/graphql",
      "name": "area/graphql",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2744442223,
      "node_id": "MDU6TGFiZWwyNzQ0NDQyMjIz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/needs-reproducer",
      "name": "triage/needs-reproducer",
      "color": "FDE078",
      "default": false,
      "description": "We are waiting for a reproducer."
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2023-08-09T15:46:56Z",
  "updated_at": "2023-08-28T09:58:47Z",
  "closed_at": "2023-08-28T09:58:47Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWe have a project based on GraphQLApi.  \r\nWe are also using Hibernate Validators to validate our `@Entity`s\r\n\r\nAfter this commit: https://github.com/quarkusio/quarkus/commit/a66c8b45884f91e0ee814a6672554f31c22bdef9\r\nour system is not functional anymore.  \r\nHere is the stacktrace that we get no matter if we use default validator (@Min, @Max, @NotBlank) or any custom validator:\r\n```\r\njava.util.NoSuchElementException\r\n\tat java.base/java.util.ArrayList$SubList$1.next(ArrayList.java:1301)\r\n\tat io.smallrye.graphql.validation.BeanValidationUtil$RequestNodeBuilder.build(BeanValidationUtil.java:49)\r\n\tat io.smallrye.graphql.validation.BeanValidationUtil.lambda$addConstraintViolationsToDataFetcherResult$0(BeanValidationUtil.java:30)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1715)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat io.smallrye.graphql.validation.BeanValidationUtil.addConstraintViolationsToDataFetcherResult(BeanValidationUtil.java:31)\r\n\tat io.quarkus.smallrye.graphql.runtime.spi.datafetcher.QuarkusDefaultDataFetcher.lambda$invokeAndTransformBlocking$0(QuarkusDefaultDataFetcher.java:98)\r\n\tat io.smallrye.context.impl.wrappers.SlowContextualCallable.call(SlowContextualCallable.java:21)\r\n\tat io.quarkus.smallrye.graphql.runtime.spi.datafetcher.BlockingHelper.lambda$runBlocking$0(BlockingHelper.java:30)\r\n\tat io.vertx.core.impl.ContextBase.lambda$null$0(ContextBase.java:137)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:264)\r\n\tat io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:135)\r\n\tat io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)\r\n\tat org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)\r\n\tat org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)\r\n\tat org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)\r\n\tat org.jboss.threads.DelegatingRunnable.run(DelegatingRunnable.java:29)\r\n\tat org.jboss.threads.ThreadLocalResettingRunnable.run(ThreadLocalResettingRunnable.java:29)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1589) \r\n```\r\nAfter some debugging I noticed that in io.smallrye.graphql.validation.BeanValidationUtil.RequestNodeBuilder.build method\r\nin this peace of code:\r\n```\r\nreturn asList(\r\n                    methodNode(violationNodes.next()),\r\n                    requestedArgument(violationNodes.next()));\r\n```\r\n`violationNodes` contains just one element - the field which were validated and the second `.next()` statement throws this exception.  \r\n\r\nWe are initializing the validator in the service layer this way\r\n```\r\nprotected Validator getValidator() {\r\n        if (validator == null) {\r\n            validator = Validation.buildDefaultValidatorFactory().getValidator();\r\n        }\r\n        return validator;\r\n    }\r\n```\r\n\r\nand use a general method for `Entity`s validation\r\n```\r\nprotected void validate(E entity) {\r\n        var violations = getValidator().validate(entity);\r\n        if (!violations.isEmpty()) {\r\n            throw new ConstraintViolationException(\"Execution error!\", violations);\r\n        }\r\n    }\r\n```\r\nThis is somehow a regression since our code is fully functional with version 3.0.*\r\n\r\nIMO, `ConstraintViolationException` could be thrown from many places, not just from GraphQL layer, so the processing of the exception should be tuned somehow\n\n### Expected behavior\n\nSystem should not throw an exception\n\n### Actual behavior\n\nSystem trows an exception\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\nLinux 6.4.8-arch1-1 #1 SMP PREEMPT_DYNAMIC Thu, 03 Aug 2023 16:02:01 +0000 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nOpenJDK 64-Bit Server VM Zulu19.32+13-CA (build 19.0.2+7, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n3.1+\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nGradle 8.2.1\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35294/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35294/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
