{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24056",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24056/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24056/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24056/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24056",
  "id": 1157083491,
  "node_id": "I_kwDOCFbutM5E97Fj",
  "number": 24056,
  "title": "ReactiveRedisClient: Transaction with multi() not working",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2184343143,
      "node_id": "MDU6TGFiZWwyMTg0MzQzMTQz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/redis",
      "name": "area/redis",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/189",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189/labels",
    "id": 8065991,
    "node_id": "MI_kwDOCFbutM4AexPH",
    "number": 189,
    "title": "2.11.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 244,
    "state": "closed",
    "created_at": "2022-06-09T10:38:20Z",
    "updated_at": "2023-01-13T10:47:01Z",
    "due_on": null,
    "closed_at": "2022-07-13T14:14:46Z"
  },
  "comments": 3,
  "created_at": "2022-03-02T11:46:04Z",
  "updated_at": "2022-06-29T11:37:42Z",
  "closed_at": "2022-06-29T11:37:36Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI'm trying to implement the check-and-set pattern (https://redis.io/topics/transactions#cas) using the ReactiveRedisClient. But commands after the `multi` command do not seem to get `queued`, they're executed directly. When using the blocking version, everything works as expected.\r\n\r\nWhen using the following code, the log output of the reactive endpoint is:\r\nMULTI OK\r\nSET OK\r\nEXEC []\r\n\r\nThe output of the blocking endpoint is:\r\nMULTI OK\r\nSET QUEUED\r\nEXEC [OK]\r\n\r\n\r\nCode:\r\n\r\n```\r\nimport io.quarkus.redis.client.RedisClient;\r\nimport io.quarkus.redis.client.reactive.ReactiveRedisClient;\r\nimport io.smallrye.mutiny.Uni;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport javax.inject.Inject;\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\nimport java.util.List;\r\n\r\n@Path(\"/\")\r\npublic class ReactiveGreetingResource {\r\n  private final Logger log = LoggerFactory.getLogger(ReactiveGreetingResource.class);\r\n\r\n  @Inject\r\n  RedisClient redisClient;\r\n\r\n  @Inject\r\n  ReactiveRedisClient reactiveRedisClient;\r\n\r\n  @GET\r\n  @Path(\"/reactive\")\r\n  public Uni<String> reactive() {\r\n    return this.reactiveRedisClient\r\n      .multi()\r\n      .flatMap(response -> {\r\n        log.info(\"MULTI {}\", response);\r\n        return this.reactiveRedisClient.set(List.of(\"a\", \"b\"));\r\n      })\r\n      .flatMap(response -> {\r\n        log.info(\"SET {}\", response);\r\n        return this.reactiveRedisClient.exec();\r\n      })\r\n      .map(response -> {\r\n        log.info(\"EXEC {}\", response);\r\n        return \"done\";\r\n      });\r\n  }\r\n\r\n  @GET\r\n  @Path(\"/blocking\")\r\n  public String blocking() {\r\n    var multi = redisClient.multi();\r\n    log.info(\"MULTI {}\", multi);\r\n\r\n    var set = redisClient.set(List.of(\"a\", \"b\"));\r\n    log.info(\"SET {}\", set);\r\n\r\n    var exec = redisClient.exec();\r\n    log.info(\"EXEC {}\", exec);\r\n\r\n    return \"done\";\r\n  }\r\n}\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nLogging output of blocking and reactive code should be the same.\r\n\r\n### Actual behavior\r\n\r\nLogging output of blocking and reactive code is different.\r\n\r\n### How to Reproduce?\r\n\r\nSee the following minimal project:\r\n\r\n[redis.zip](https://github.com/quarkusio/quarkus/files/8168663/redis.zip)\r\n\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nWin\r\n\r\n### Output of `java -version`\r\n\r\n11\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.7.2.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nmvn 3.8.4\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24056/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24056/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
