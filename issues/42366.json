{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42366",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42366/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42366/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42366/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/42366",
  "id": 2453606203,
  "node_id": "I_kwDOCFbutM6SPw87",
  "number": 42366,
  "title": "Provide a way to execute some logic when the HTTP server is started",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1320737519,
      "node_id": "MDU6TGFiZWwxMzIwNzM3NTE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/vertx",
      "name": "area/vertx",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/341",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/341",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/341/labels",
    "id": 11324154,
    "node_id": "MI_kwDOCFbutM4ArMr6",
    "number": 341,
    "title": "3.14.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 192,
    "state": "closed",
    "created_at": "2024-07-17T08:04:03Z",
    "updated_at": "2024-08-29T19:11:05Z",
    "due_on": null,
    "closed_at": "2024-08-14T11:26:07Z"
  },
  "comments": 2,
  "created_at": "2024-08-07T14:16:18Z",
  "updated_at": "2024-08-09T10:22:16Z",
  "closed_at": "2024-08-09T10:22:12Z",
  "active_lock_reason": null,
  "body": "### Description\n\n`StartupEvent`/`@Startup` does not help because the CDI event is fired _before_ the HTTP server is started.\r\n\r\nThe only workaround I can think of is to schedule a task in a `StartupEvent`/`@Startup` to execute some logic with a delay, e.g. something like:\r\n\r\n```java\r\nclass MyBean {\r\n\r\n   @Inject\r\n   ScheduledExecutorService executor;\r\n\r\n   @Startup\r\n   void init() {\r\n      executor.schedule(new Task(), 500, TimeUnit.MILLISECONDS);\r\n   }\r\n}\r\n```\r\n\r\nand non-blocking variant:\r\n\r\n```java\r\nclass MyBean {\r\n\r\n   @Inject\r\n   Vertx vertx;\r\n\r\n   @Startup\r\n   void init() {\r\n      vertx.setTimer(500, new Handler());\r\n   }\r\n}\r\n```\r\n\r\nThis is of course not reliable at all because of the hard-coded delay.\n\n### Implementation ideas\n\nWe could fire a specific CDI event, or introduce a special interface to be implemented by beans (e.g. `HttpServerListener`) and called when the server is listening. I'm proposing a CDI-specific API because that's what Quarkus users are used to do.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42366/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42366/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
