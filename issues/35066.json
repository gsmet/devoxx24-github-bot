{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35066",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35066/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35066/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35066/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/35066",
  "id": 1824655376,
  "node_id": "I_kwDOCFbutM5swggQ",
  "number": 35066,
  "title": "Enhance OpenShift extension  to auto-generate secret properties or block deployments if such properites are not configured",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1654772125,
      "node_id": "MDU6TGFiZWwxNjU0NzcyMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kubernetes",
      "name": "area/kubernetes",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2023-07-27T15:45:44Z",
  "updated_at": "2023-08-01T10:32:27Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\n\nWhile this enhancement is driven by a specific OIDC case, it should be of general interest.\r\n\r\nQuarkus OIDC now encrypts the session cookie by default. In some rare cases (when Quarkus talks to OIDC providers over MTLS or authenticates by creating a JWT token signed by the client private key), the session encryption key will be auto-generated. This poses the problem in OpenShift: if the pod is restarted then a new key will be generated and if the user is still authenticated then the current session cookie won't be decrypted by this new key - leading to the user being denied and redirected to the OIDC provider to re-authenticate.\r\n\r\nNote the same  would apply to the Form authentication where the session encryption key is generated if not configured and there could be other Quarkus extensions or custom applications doing it the same way.\r\n\r\n@tqvarnst and @cescoffier have had an idea to enhance the OpenShift extension to mitigate any possible side-effects in such cases.\r\n\r\nI believe 2 approaches can be considered:\r\n* OpenShift extension is given a list of configuration properties representing secrets - the extension checks if these properties are configured - if no - it itself generates secrets and inserts them into ConfigMap\r\n* OpenShift extension is given a list of configuration properties representing secrets - the extension checks if these properties are configured - and fails if they are not configured\r\n\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/35066/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/35066/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
