{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24371",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24371/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24371/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24371/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24371",
  "id": 1172275551,
  "node_id": "I_kwDOCFbutM5F34Ff",
  "number": 24371,
  "title": "After upgrade to 2.7.x from 2.6.3.Final Jackson cannot marshall \"Java 8 date/time LocalDateTime\"",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1676631606,
      "node_id": "MDU6TGFiZWwxNjc2NjMxNjA2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/env/windows",
      "name": "env/windows",
      "color": "edea47",
      "default": false,
      "description": "Impacts Windows machines"
    },
    {
      "id": 2744442223,
      "node_id": "MDU6TGFiZWwyNzQ0NDQyMjIz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/needs-reproducer",
      "name": "triage/needs-reproducer",
      "color": "FDE078",
      "default": false,
      "description": "We are waiting for a reproducer."
    },
    {
      "id": 3267721944,
      "node_id": "MDU6TGFiZWwzMjY3NzIxOTQ0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/jackson",
      "name": "area/jackson",
      "color": "0366d6",
      "default": false,
      "description": "Issues related to Jackson (JSON library)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 14,
  "created_at": "2022-03-17T11:46:29Z",
  "updated_at": "2022-05-12T13:58:06Z",
  "closed_at": "2022-03-23T05:51:44Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWe upgraded our Quarkus project from 2.6.3.Final to 2.7.0.Final. We're using JAX-RS with Jackson (default) and also use \"Java 8\" DateTime types.\r\nAfter the upgrade we get the following exception:\r\n```\r\nJava 8 date/time type `java.time.LocalDateTime` not supported by default: add Module \"com.fasterxml.jackson.datatype:jackson-datatype-jsr310\" to enable handling (through reference chain: de.sgservice.awx.inventory.inventory.model.dto.ImmutableUpdateInfoDto[\"openEncashmentStartDate\"])\r\n```\r\nAs documented this module should be added automatically and - apart from that - adding it additionally doesn't fix the issue for us.\r\nDependencies are as follows:\r\n```\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-arc</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-resteasy</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-hibernate-orm</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-hibernate-orm-panache</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-hibernate-validator</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-liquibase</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-jdbc-h2</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-jdbc-mysql</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-narayana-jta</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-smallrye-health</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-scheduler</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-quartz</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-rest-client-jackson</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-config-yaml</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-smallrye-openapi</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-security-jpa</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.immutables</groupId>\r\n            <artifactId>value</artifactId>\r\n            <version>${immutables.version}</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.immutables</groupId>\r\n            <artifactId>serial</artifactId>\r\n            <version>${immutables.version}</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.google.code.findbugs</groupId>\r\n            <artifactId>jsr305</artifactId>\r\n            <version>${jsr305.version}</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.freemarker</groupId>\r\n            <artifactId>freemarker</artifactId>\r\n            <version>${freemarker.version}</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.hibernate</groupId>\r\n            <artifactId>hibernate-jpamodelgen</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.jboss.slf4j</groupId>\r\n            <artifactId>slf4j-jboss-logmanager</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-container-image-docker</artifactId>\r\n        </dependency>\r\n```\r\nQuarkus-plugin config:\r\n```\r\n            <plugin>\r\n                <groupId>io.quarkus</groupId>\r\n                <artifactId>quarkus-maven-plugin</artifactId>\r\n                <version>${quarkus.platform.version}</version>\r\n                <extensions>true</extensions>\r\n                <executions>\r\n                    <execution>\r\n                        <goals>\r\n                            <goal>build</goal>\r\n                            <goal>generate-code</goal>\r\n                            <goal>generate-code-tests</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n```\r\n\n\n### Expected behavior\n\nThis should work after the upgrade. No breaking changes were announced.\r\nApart from that: configuration looks correct to me...\n\n### Actual behavior\n\nThe following exception is thrown:\r\n```\r\ncom.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module \"com.fasterxml.jackson.datatype:jackson-datatype-jsr310\" to enable handling (through reference chain: de.sgservice.awx.inventory.inventory.model.dto.ImmutableUpdateInfoDto[\"openEncashmentStartDate\"])\r\n\t\tat com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)\r\n\t\tat com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1300)\r\n\t\tat com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)\r\n\t\tat com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)\r\n\t\tat com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)\r\n\t\tat com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)\r\n\t\tat com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)\r\n\t\tat com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)\r\n\t\tat com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1518)\r\n\t\tat com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1007)\r\n\t\tat org.jboss.resteasy.plugins.providers.jackson.ResteasyJackson2Provider.writeTo(ResteasyJackson2Provider.java:345)\r\n\t\tat org.jboss.resteasy.core.messagebody.AsyncBufferedMessageBodyWriter.asyncWriteTo(AsyncBufferedMessageBodyWriter.java:24)\r\n\t\tat org.jboss.resteasy.core.interception.jaxrs.ServerWriterInterceptorContext.writeTo(ServerWriterInterceptorContext.java:87)\r\n\t\tat org.jboss.resteasy.core.interception.jaxrs.AbstractWriterInterceptorContext.asyncProceed(AbstractWriterInterceptorContext.java:203)\r\n\t\tat org.jboss.resteasy.core.interception.jaxrs.AbstractWriterInterceptorContext.getStarted(AbstractWriterInterceptorContext.java:166)\r\n\t\tat org.jboss.resteasy.core.interception.jaxrs.ServerWriterInterceptorContext.lambda$getStarted$0(ServerWriterInterceptorContext.java:73)\r\n\t\tat org.jboss.resteasy.core.interception.jaxrs.ServerWriterInterceptorContext.aroundWriteTo(ServerWriterInterceptorContext.java:93)\r\n\t\tat org.jboss.resteasy.core.interception.jaxrs.ServerWriterInterceptorContext.getStarted(ServerWriterInterceptorContext.java:73)\r\n\t\tat org.jboss.resteasy.core.ServerResponseWriter.lambda$writeNomapResponse$3(ServerResponseWriter.java:163)\r\n\t\tat org.jboss.resteasy.core.interception.jaxrs.ContainerResponseContextImpl.filter(ContainerResponseContextImpl.java:404)\r\n\t\tat org.jboss.resteasy.core.ServerResponseWriter.executeFilters(ServerResponseWriter.java:252)\r\n\t\tat org.jboss.resteasy.core.ServerResponseWriter.writeNomapResponse(ServerResponseWriter.java:101)\r\n\t\tat org.jboss.resteasy.core.ServerResponseWriter.writeNomapResponse(ServerResponseWriter.java:74)\r\n\t\tat org.jboss.resteasy.core.SynchronousDispatcher.writeResponse(SynchronousDispatcher.java:594)\r\n\t\tat org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:524)\r\n\t\tat org.jboss.resteasy.core.SynchronousDispatcher.lambda$invoke$4(SynchronousDispatcher.java:261)\r\n\t\tat org.jboss.resteasy.core.SynchronousDispatcher.lambda$preprocess$0(SynchronousDispatcher.java:161)\r\n\t\tat org.jboss.resteasy.core.interception.jaxrs.PreMatchContainerRequestContext.filter(PreMatchContainerRequestContext.java:364)\r\n\t\tat org.jboss.resteasy.core.SynchronousDispatcher.preprocess(SynchronousDispatcher.java:164)\r\n\t\tat org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:247)\r\n\t\tat io.quarkus.resteasy.runtime.standalone.RequestDispatcher.service(RequestDispatcher.java:73)\r\n\t\tat io.quarkus.resteasy.runtime.standalone.VertxRequestHandler.dispatch(VertxRequestHandler.java:151)\r\n\t\tat io.quarkus.resteasy.runtime.standalone.VertxRequestHandler$1.run(VertxRequestHandler.java:91)\r\n\t\tat io.quarkus.vertx.core.runtime.VertxCoreRecorder$13.runWith(VertxCoreRecorder.java:543)\r\n\t\tat org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2449)\r\n\t\tat org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1478)\r\n\t\tat org.jboss.threads.DelegatingRunnable.run(DelegatingRunnable.java:29)\r\n\t\tat org.jboss.threads.ThreadLocalResettingRunnable.run(ThreadLocalResettingRunnable.java:29)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n```\n\n### How to Reproduce?\n\nHard to tell as this is probably not an issue that affects too many users...\r\nFor us:\r\n- Worked with 2.6.3.Final\r\n- Doesn't work with any 2.7.x version\n\n### Output of `uname -a` or `ver`\n\nMicrosoft Windows [Version 10.0.18362.1256]\n\n### Output of `java -version`\n\nopenjdk version \"17.0.1\" 2021-10-19 OpenJDK Runtime Environment (build 17.0.1+12-39) OpenJDK 64-Bit Server VM (build 17.0.1+12-39, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.7.0.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.1\n\n### Additional information\n\nA similar bug/feature request for automatic adding of `jackson-datatype-jsr310` was addressed some years ago IIRC",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24371/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24371/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
