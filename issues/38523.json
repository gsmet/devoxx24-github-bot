{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38523",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38523/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38523/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38523/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38523",
  "id": 2112196568,
  "node_id": "I_kwDOCFbutM595Y_Y",
  "number": 38523,
  "title": "RESTEasy Reactive and security: invalid response after challenge and exception mapper, two `Location` headers",
  "labels": [
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/299",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/299",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/299/labels",
    "id": 10429739,
    "node_id": "MI_kwDOCFbutM4AnyUr",
    "number": 299,
    "title": "3.9.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 298,
    "state": "closed",
    "created_at": "2024-01-17T09:57:21Z",
    "updated_at": "2024-07-18T12:19:14Z",
    "due_on": null,
    "closed_at": "2024-03-13T12:25:09Z"
  },
  "comments": 9,
  "created_at": "2024-02-01T10:53:10Z",
  "updated_at": "2024-02-09T13:44:11Z",
  "closed_at": "2024-02-09T13:44:08Z",
  "active_lock_reason": null,
  "body": "I'm getting an auth challenge from `HttpAuthenticationMechanism.ChallengeSender` which sets the response code and adds a `Location` header directly to the Vert.x response, and then an `AuthenticationFailedException` is thrown, resulting in my `@ServerExceptionMapper` being called and also setting a `Location` by returning a `Response.seeOther()` and we end up with two `Location` headers:\r\n\r\n```\r\nHTTP/1.1 303 See Other\r\nLocation: http://localhost:8080/_renarde/security/login\r\nLocation: http://localhost:8080/\r\nSet-Cookie: QuarkusUser=;Version=1;Path=/;Max-Age=0\r\ncontent-length: 0\r\nset-cookie: _renarde_flash=eyJtZXNzYWdlIjoiSW52YWxpZCBzZXNzaW9uIChiYWQgc2lnbmF0dXJlKSwgeW91J3ZlIGJlZW4gbG9nZ2VkIG91dCJ9; Path=/; HTTPOnly; SameSite=Lax\r\nset-cookie: quarkus-redirect-location=http://localhost:8080/; Path=/\r\n```\r\n\r\nI suspect that at the very least, any `Response` data set by the exception mapper should override the ones set previously, if only because the `Response` is not meant to come on top of anything prior to it, but override it from scratch. So, the exception mapper's `Location` should \"win\" and override the security challenge one.\r\n\r\nI wonder what other headers are set directly on the Vert.x response, before we translate the `Response` headers onto it?\r\n\r\nThis was first reported in https://github.com/quarkiverse/quarkus-renarde/issues/194",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38523/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38523/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
