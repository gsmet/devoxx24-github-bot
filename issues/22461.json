{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22461",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22461/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22461/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22461/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/22461",
  "id": 1086303726,
  "node_id": "I_kwDOCFbutM5Av63u",
  "number": 22461,
  "title": "Multithreaded @RestClient injection point fails",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346621,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjE=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/duplicate",
      "name": "triage/duplicate",
      "color": "cfd3d7",
      "default": false,
      "description": "This issue or pull request already exists"
    },
    {
      "id": 1282102389,
      "node_id": "MDU6TGFiZWwxMjgyMTAyMzg5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/arc",
      "name": "area/arc",
      "color": "0366d6",
      "default": false,
      "description": "Issue related to ARC (dependency injection)"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2021-12-21T23:19:10Z",
  "updated_at": "2021-12-22T07:08:25Z",
  "closed_at": "2021-12-22T07:08:04Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nStacktrace is:\r\n\r\n    Caused by: java.util.ConcurrentModificationException\r\n        at java.base/java.util.HashMap.computeIfAbsent(HashMap.java:1135)\r\n        at io.quarkus.restclient.config.RestClientsConfig.getClientConfig(RestClientsConfig.java:65)\r\n        at io.quarkus.restclient.runtime.RestClientBase.clientConfigByClassName(RestClientBase.java:331)\r\n        at io.quarkus.restclient.runtime.RestClientBase.configureBaseUrl(RestClientBase.java:286)\r\n        at io.quarkus.restclient.runtime.RestClientBase.create(RestClientBase.java:58)\r\n\r\nCode is: \r\n\r\n    @ApplicationScoped\r\n    class MyService {\r\n        @Inject @RestClient MyRestClient myRestClient;\r\n\r\n        @Inject\r\n        ManagedExecutor managedExecutor;        \r\n\r\n         void callAsync() {\r\n              managedExecutor.runAsync(() -> myRestClient.call());\r\n              managedExecutor.runAsync(() -> myRestClient.call());\r\n         }\r\n    } \r\n\r\n### Expected behavior\r\n\r\nNo exception is expected.\r\nActually I'm not sure if it should work. If it should _not_ (as in RFC 2119), can anybody please explain.\r\n\r\n### Additional information\r\nThe workaround I use is `@Startup` over MyService class for eager bean instantiation.\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk 17, openjdk 11\r\n\r\n### Quarkus version or git rev\r\n\r\n2.5.2.Final\r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22461/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22461/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
