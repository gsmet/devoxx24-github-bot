{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31223",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31223/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31223/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31223/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/31223",
  "id": 1588147718,
  "node_id": "I_kwDOCFbutM5eqTYG",
  "number": 31223,
  "title": "QuteDoc like JavaDoc but for user tag",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1714005220,
      "node_id": "MDU6TGFiZWwxNzE0MDA1MjIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/qute",
      "name": "area/qute",
      "color": "0366d6",
      "default": false,
      "description": "The template engine"
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 9,
  "created_at": "2023-02-16T18:11:09Z",
  "updated_at": "2023-02-23T13:03:18Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nIn vscode-quarkus we start supporting user tag and I think it could be nice to support QuteDoc ala JavaDoc.\r\n\r\nFor instance for core section like #for we provide some documentation because we hard code that:\r\n\r\n![For](https://user-images.githubusercontent.com/1932211/219450327-2f403520-c271-4d8f-8871-b5fd0f613d44.gif)\r\n\r\nWe support user tag now and we can provide completion for those user tag and and the completion result uses parameters and nested-content to generate correctly the completion apply:\r\n\r\n![UserTag](https://user-images.githubusercontent.com/1932211/219451025-80f21020-18d9-442d-aea8-8454854d5668.gif)\r\n\r\nAs you can see there are no documentation. IMHO it would be nice to provide the Qute documentation with qute comments like this:\r\n\r\n```html\r\n{! \r\n    The form element provide blabla\r\n    @name : the name of bla bla\r\n    @label : the label of bla bla\r\n!}\r\n<label class=\"form-label\" for=\"{name}\">{label}</label>\r\n<div class=\"mb-3 {class??}\">\r\n    {nested-content}\r\n{#ifError name}\r\n    <span class=\"invalid-feedback\">​{#error name/}</span>​\r\n{/ifError}\r\n</div>\r\n```\r\n\r\nYour Qute parser could parse those QuteDoc (or not if it is not required) and you could for instance generate QuteDoc html file like JavaDoc does.\r\n\r\nIn our case we could use it to show some documentation.\r\n\r\n@mkouba @FroMage @maxandersen what do you think about this idea?\r\n\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31223/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31223/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
