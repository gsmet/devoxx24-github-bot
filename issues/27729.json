{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27729",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27729/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27729/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27729/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27729",
  "id": 1362042088,
  "node_id": "I_kwDOCFbutM5RLxzo",
  "number": 27729,
  "title": "Pact consumer-driven contract testing extension",
  "labels": [
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1553869078,
      "node_id": "MDU6TGFiZWwxNTUzODY5MDc4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/extension-proposal",
      "name": "kind/extension-proposal",
      "color": "abfcbb",
      "default": false,
      "description": "Discuss and Propose new extensions"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 10,
  "created_at": "2022-09-05T14:04:55Z",
  "updated_at": "2022-10-19T19:31:55Z",
  "closed_at": "2022-10-18T14:18:38Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\n[Pact](https://pact.io/) is a widely-recommended framework for consumer-driven contract testing. Because Quarkus is optimised for microservices and consumer-driven contract tests are an important part of a microservices development workflow, Pact is particularly relevant for Quarkus.\r\n\r\n## Why is an extension needed? Functional issues \r\n\r\nAlthough it is possible to use Pact with Quarkus (see https://github.com/skattela/pact-workshop-jvm-quarkus and https://github.com/holly-cummins/house-of-microservices-quarkus-contract-testing-sample), Pact tests do not work in continuous testing mode. \r\n- Pact relies on Kotlin and is affected by classloading issues. See, for example, a reference to Pact problems on a [broader issue about Kotlin classloading](https://github.com/quarkusio/quarkus/issues/11549). The Pact issues need a bigger fix than just including the `quarkus-kotlin` extension.\r\n- Pact tests also have problems if they store contracts in a local resources folder.\r\n\r\n## Usability enhancements\r\n\r\nAlthough fixing the functional issues is most important, there are also a range of enhancements that could improve the Pact user experience:\r\n- Eliminating the need to `@BeforeEach` a `context.setTarget(new HttpTestTarget(\"localhost\", 8081))` on every test\r\n- Quarkus-style configuration of pact location and broker\r\n- Dev UI view of contract contents and status\r\n- Potentially, integration with other frameworks such as RestAssured, [WireMock]( https://bitbucket.org/atlassian/wiremock-pact-generator/src/master/) and [OpenAPI](https://docs.pactflow.io/docs/bi-directional-contract-testing#use-cases). This is a complex area with existing activity and a number of existing converters.   \r\n\r\n\r\nInterested in this extension, please +1 via the emoji/reaction feature of GitHub (top right).\r\n\r\n### Configuration suggestion\r\n\r\n```properties\r\npact.rootDir: # [existing system property, where to write generated pacts]\r\npact.writer.overwrite: # [existing system property, whether to overwrite generated pacts]\r\npact.readFrom: # [new property, universal config for pact location to eliminate need for per-test config, see https://docs.pact.io/implementation_guides/jvm/provider/junit#pact-source]\r\n```\r\n\r\n\r\n### Additional context\r\n\r\nThis has been requested up occasionally in the broader community. \r\n\r\nThere was a [long discussion on the google groups](https://groups.google.com/g/quarkus-dev/c/f8hJRm8oWbQ) a year ago.\r\n\r\nSee also, for example, https://lightrun.com/answers/quarkusio-quarkus-consumer-driven-contracts-integrationsupport: \"CDC is a big part of our Spring Boot microservice qa process, and it would be very desirable to have an equivalent in quarkus.\" \r\n\r\nNote also that Pact is not the only contract testing option; Spring has Spring contract, although it is not as polyglot as Pact. It is also possible to use tools such as Schemathesis, Prism, and OpenAPI in combination (see a [tutorial here](https://appdev.consulting.redhat.com/tracks/contract-first/automated-testing-with-schemathesis.html)).",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27729/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27729/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
