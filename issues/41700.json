{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41700",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41700/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41700/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41700/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/41700",
  "id": 2391301021,
  "node_id": "I_kwDOCFbutM6OiFud",
  "number": 41700,
  "title": "NPE  when fetching entity containing OneToOne property joined by multiple columns from the non-owning side",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1341157944,
      "node_id": "MDU6TGFiZWwxMzQxMTU3OTQ0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/upstream",
      "name": "triage/upstream",
      "color": "7db4d8",
      "default": false,
      "description": "Used for issues which are caused by issues in upstream projects/dependency"
    },
    {
      "id": 1425555736,
      "node_id": "MDU6TGFiZWwxNDI1NTU1NzM2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-orm",
      "name": "area/hibernate-orm",
      "color": "0366d6",
      "default": false,
      "description": "Hibernate ORM"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/341",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/341",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/341/labels",
    "id": 11324154,
    "node_id": "MI_kwDOCFbutM4ArMr6",
    "number": 341,
    "title": "3.14.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 192,
    "state": "closed",
    "created_at": "2024-07-17T08:04:03Z",
    "updated_at": "2024-08-29T19:11:05Z",
    "due_on": null,
    "closed_at": "2024-08-14T11:26:07Z"
  },
  "comments": 6,
  "created_at": "2024-07-04T18:08:06Z",
  "updated_at": "2024-08-10T08:02:02Z",
  "closed_at": "2024-08-10T08:01:57Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI started after I updated my project from Quarkus 3.8.5 to 3.12.0 (and .1), but this error also happens on 3.11.x.\r\nEvery entity with a property mapped by `OneToOne` using `@JoinColumns` started failing to load from the non-owning side (the `mappedBy` side).\r\n\r\nExample Entity A:\r\n```kotlin\r\n@Entity\r\n@Table(name = \"EntityA\", uniqueConstraints = @UniqueConstraint(columnNames = {\"columnAEntityA\", \"columnBEntityA\"}))\r\npublic class EntityA extends BaseEntity {\r\n    @Column(name = \"columnAEntityA\")\r\n    public Long columnAEntityA;\r\n    @Column(name = \"columnBEntityA\")\r\n    public Long columnBEntityA;\r\n\r\n    @OneToOne(mappedBy = \"entityA\")\r\n    public EntityB entityB;\r\n}\r\n```\r\nExample Entity B:\r\nExample:\r\n```kotlin\r\n@Entity\r\n@Table(name = \"EntityB\", uniqueConstraints = @UniqueConstraint(columnNames = {\"columnAEntityB\", \"columnBEntityB\"}))\r\npublic class EntityB extends BaseEntity {\r\n    @JoinColumn(name = \"columnAEntityB\")\r\n    public Long columnAEntityB;\r\n    @JoinColumn(name = \"columnBEntityB\")\r\n    public Long columnBEntityB;\r\n\r\n    @OneToOne(fetch = FetchType.LAZY)\r\n    @JoinColumns({\r\n            @JoinColumn(name = \"columnAEntityB\", referencedColumnName = \"columnAEntityA\", insertable = false, updatable = false),\r\n            @JoinColumn(name = \"columnBEntityB\", referencedColumnName = \"columnBEntityA\", insertable = false, updatable = false)\r\n    })\r\n    public EntityA entityA;\r\n}\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Actual behavior\r\n\r\nI get the following error:\r\n```log\r\n2024-07-04 17:35:53,254 WARNING [cor.exc.han.RuntimeExceptionHandler] (executor-thread-13) Runtime exception handled: java.lang.NullPointerException: Cannot invoke \"Object.hashCode()\" because \"value\" is null\r\n\tat org.hibernate.type.descriptor.java.AbstractClassJavaType.extractHashCode(AbstractClassJavaType.java:93)\r\n\tat org.hibernate.type.AbstractStandardBasicType.getHashCode(AbstractStandardBasicType.java:217)\r\n\tat org.hibernate.type.AbstractStandardBasicType.getHashCode(AbstractStandardBasicType.java:226)\r\n\tat org.hibernate.type.EntityType.getHashCode(EntityType.java:362)\r\n\tat org.hibernate.engine.spi.EntityUniqueKey.generateHashCode(EntityUniqueKey.java:67)\r\n\tat org.hibernate.engine.spi.EntityUniqueKey.<init>(EntityUniqueKey.java:48)\r\n\tat org.hibernate.sql.results.graph.entity.internal.EntitySelectFetchByUniqueKeyInitializer.initializeInstance(EntitySelectFetchByUniqueKeyInitializer.java:91)\r\n\tat org.hibernate.sql.results.internal.InitializersList.initializeInstance(InitializersList.java:73)\r\n\tat org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:113)\r\n\tat org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:87)\r\n\tat org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:205)\r\n\tat org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)\r\n\tat org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:211)\r\n\tat org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)\r\n\tat org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)\r\n\tat org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)\r\n\tat org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:139)\r\n\tat org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:382)\r\n\tat org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:302)\r\n\tat org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:526)\r\n\tat org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:423)\r\n\tat org.hibernate.query.Query.getResultList(Query.java:120)\r\n\tat io.quarkus.hibernate.orm.panache.common.runtime.CommonPanacheQueryImpl.firstResult(CommonPanacheQueryImpl.java:316)\r\n\tat io.quarkus.hibernate.orm.panache.kotlin.runtime.PanacheQueryImpl.firstResult(PanacheQueryImpl.kt:123)\r\n\t...\r\n```\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nLinux pop-os 6.8.0-76060800daily20240311-generic #202403110203~1710198088~22.04~1a3dbc7 SMP PREEMPT_DYNAMIC Mon M x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"21.0.2\" 2024-01-16 LTS OpenJDK Runtime Environment Temurin-21.0.2+13 (build 21.0.2+13-LTS) OpenJDK 64-Bit Server VM Temurin-21.0.2+13 (build 21.0.2+13-LTS, mixed mode, sharing)\r\n\r\n### Quarkus version or git rev\r\n\r\n3.12.0\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae)\r\n\r\n### Additional information\r\n\r\nAs far as I dived in, I can see when it loads EntityA, it initializes its relations (`EntitySelectFetchInitializer::initializeInstance`). It tries to generate a key (`EntityUniqueKey`) for the inverse relation by passing a blank instance of the entity (`EntityA<null>`), where it tries to generate a hashCode (`EntityUniqueKey::hashCode`) from the null id.\r\nAlso, it now creates a `EntitySelectFetchByUniqueKeyInitializer` instead of a `EntityDelayedFetchInitializer` like before for entityA (see `InitializersList`).\r\n\r\nIf I have both `@OneToOne` with `@JoinColumns` on both sides (`EntityA` and `EntityB`), the error does not happen.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/41700/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/41700/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
