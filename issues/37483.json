{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37483",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37483/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37483/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37483/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/37483",
  "id": 2023614024,
  "node_id": "I_kwDOCFbutM54neZI",
  "number": 37483,
  "title": "Debugging RESTEasy Reactive errors without body (400, 401)",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 11,
  "created_at": "2023-12-04T11:16:09Z",
  "updated_at": "2024-01-17T18:54:13Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nIt is very hard to find out where the problem originate from when using different Quarkus extensions (RESTEasy, hibernate validator, security, CSRF, ...)\r\n\r\nWhat I did recently is this:\r\n```java\r\n\r\nimport io.quarkus.logging.Log;\r\nimport io.quarkus.runtime.LaunchMode;\r\nimport io.smallrye.mutiny.Uni;\r\nimport jakarta.enterprise.context.ApplicationScoped;\r\nimport jakarta.ws.rs.Priorities;\r\nimport jakarta.ws.rs.WebApplicationException;\r\nimport jakarta.ws.rs.core.Response;\r\nimport org.jboss.resteasy.reactive.server.ServerExceptionMapper;\r\n\r\n@ApplicationScoped\r\npublic class ExceptionMapper {\r\n\r\n    @ServerExceptionMapper(priority = Priorities.USER + 2)\r\n    public Uni<Response> mapException(Throwable exception) {\r\n        if (Log.isDebugEnabled() || LaunchMode.current().isDevOrTest()) {\r\n            Log.error(exception.getMessage(), exception);\r\n        }\r\n        if(exception instanceof WebApplicationException) {\r\n            return Uni.createFrom().item(((WebApplicationException) exception).getResponse());\r\n        }\r\n        return Uni.createFrom().item(Response.serverError().build());\r\n    }\r\n\r\n}\r\n```\r\n\r\nWhich allows me to easilly debug issues in dev/test and also possibility in prod (when the logger is set for it)\r\n\r\n### Implementation ideas\r\n\r\nNot sure how we could make this easier for the users.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/37483/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/37483/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
