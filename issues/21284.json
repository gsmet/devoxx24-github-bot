{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21284",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21284/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21284/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21284/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21284",
  "id": 1047729844,
  "node_id": "I_kwDOCFbutM4-cxa0",
  "number": 21284,
  "title": "Connect the MockServer testcontainer to the DevService testcontainer Docker network in the integration test",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/152",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/152",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/152/labels",
    "id": 7239525,
    "node_id": "MI_kwDOCFbutM4Abndl",
    "number": 152,
    "title": "2.5.0.CR1",
    "description": "",
    "creator": {
      "login": "aloubyansky",
      "id": 323379,
      "node_id": "MDQ6VXNlcjMyMzM3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/323379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aloubyansky",
      "html_url": "https://github.com/aloubyansky",
      "followers_url": "https://api.github.com/users/aloubyansky/followers",
      "following_url": "https://api.github.com/users/aloubyansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/aloubyansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aloubyansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aloubyansky/subscriptions",
      "organizations_url": "https://api.github.com/users/aloubyansky/orgs",
      "repos_url": "https://api.github.com/users/aloubyansky/repos",
      "events_url": "https://api.github.com/users/aloubyansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aloubyansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 305,
    "state": "closed",
    "created_at": "2021-10-11T08:43:12Z",
    "updated_at": "2022-01-07T16:32:59Z",
    "due_on": null,
    "closed_at": "2021-11-10T17:25:22Z"
  },
  "comments": 21,
  "created_at": "2021-11-08T17:43:17Z",
  "updated_at": "2022-02-23T18:45:18Z",
  "closed_at": "2021-11-09T05:37:12Z",
  "active_lock_reason": null,
  "body": "### Description\n\nAs already asked in the [question on Stackoverflow](https://stackoverflow.com/questions/69855376), I would like to connect a [testcontainer (MockServer)](https://www.testcontainers.org/modules/mockserver/) to the Docker network that was started by Quarkus DevService in the integration test. I would like to explain my problem using this [graphic](https://drive.google.com/file/d/1q_wmU8jtiNPDaSxL_wV0BTJIpu9n-h4P/view?usp=sharing):\r\n\r\nMy application ([wolkenschloss / nubes / cookbook](https://github.com/wolkenschloss/nubes)) imports data from an external source. In the test, the deployment artifact is to be tested in the Docker container (`-Dquarkus.container-image.build = true`). The data (the imported recipe) is persisted in a MongoDB. The MongoDB is managed by the Quarkus DevService in the integration test. This starts the Docker container of MongoDB with the option `--net [random-network-name]`. Quarkus generates a connection string for MongoDB with a host alias for access to the database. So far everything is very comfortable.\r\n\r\nNow the external data source is to be simulated by a MockServer. Since the application runs in a Docker container, *localhost* cannot be used because *locahost* is now the Docker container. A connection from the Docker container to the MockServer must be established. To do this, the MockServer must release its port to the host (development computer or CI server) and the ImportService must be given an IP address of the host (not 127.0.0.1) as the import source. Determining the host IP address can sometimes lead to unexpected results if several adapters are installed (or none at all). Alternatively I tried to connect the MockServer testcontainer to the `Network.SHARED` network. However, this is not the network that Quarkus DevServices is using. In summary, the procedure is anything but comfortable.\r\n\r\nIn my example, I am currently using Wiremock without a container, but I would prefer to run MockServer in a test container in the same Docker network as the MongoDB and the Quarkus application to be tested. For the test, it should be transparent whether the application is running in a Docker container or not.\r\n\r\nI consider this scenario to be quite common. External systems that cannot be controlled should also be mocked in an integration test: [Integrated Tests Are A Scam}) https://blog.thecodewhisperer.com/permalink/integrated-tests-are-a-scam)\r\n\r\n(And if I had one more wish: A little more control over the life cycle of the container would be nice. For example, restarting the database container before each test, even if it takes a little more time). \n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21284/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21284/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
