{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39717",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39717/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39717/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39717/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/39717",
  "id": 2209063242,
  "node_id": "I_kwDOCFbutM6Dq6FK",
  "number": 39717,
  "title": "OIDC code flow access token verification is enforced even if the application code does not use it as JWT",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/320",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/320",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/320/labels",
    "id": 10766822,
    "node_id": "MI_kwDOCFbutM4ApEnm",
    "number": 320,
    "title": "3.9.2",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 17,
    "state": "closed",
    "created_at": "2024-04-02T19:45:30Z",
    "updated_at": "2024-05-15T15:23:04Z",
    "due_on": null,
    "closed_at": "2024-04-03T11:35:04Z"
  },
  "comments": 2,
  "created_at": "2024-03-26T18:51:15Z",
  "updated_at": "2024-04-02T19:47:36Z",
  "closed_at": "2024-03-27T00:05:32Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWe enforced the code flow access token verification as part of #39458. FYI, with the code flow only the ID token is verified by default but not the access token which is not used for any security decisions for the current endpoint by default.  So the idea is that if the user code tries to access the access token in the code as `JsonWebToken` then it must be verified, as opposed to users having to enable it manually. \r\n\r\nThis is a correct decision because if the user forgets to enable the code flow access token verification and the user code checks JWT claims from the unverified access token then it is not good.\r\n\r\nUnfortunately, #39458 detects `JsonWebToken` in `io.smallrye.jwt.auth.cdi.RawClaimTypeProducer` which is not an application code.\r\n\r\nThis causes side-effects when the user code has no JsonWebToken injected, uses a provider like Google which has binary access tokens.\r\n\r\nReported by @alesj \r\n\r\nI'd really like to avoid reverting it as it is a good hardening fix. So I'd like to filter out any injection point targets which start from `io.quarkus.` (Resteasy token propagation filter has JsonWebToken injected) and `io.smallrye.jwt` packages which should be reasonable\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Actual behavior\r\n\r\n_No response_\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n_No response_\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/39717/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/39717/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
