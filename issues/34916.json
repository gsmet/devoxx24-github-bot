{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34916",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34916/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34916/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34916/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34916",
  "id": 1815758502,
  "node_id": "I_kwDOCFbutM5sOkam",
  "number": 34916,
  "title": "Provide a @TemplateDir annotations to know which folders must be scanned to collect Qute template",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1714005220,
      "node_id": "MDU6TGFiZWwxNzE0MDA1MjIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/qute",
      "name": "area/qute",
      "color": "0366d6",
      "default": false,
      "description": "The template engine"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2023-07-21T12:51:41Z",
  "updated_at": "2023-09-13T07:49:25Z",
  "closed_at": "2023-09-13T07:49:25Z",
  "active_lock_reason": null,
  "body": "### Description\n\nIn our Qute support https://github.com/redhat-developer/quarkus-ls we hard code the templates dir with `src/main/resources/templates` to know which files must be considered as Qute templates.\r\n\r\nYou did that too in Quarkus. But when a Quarkus extension like https://github.com/quarkiverse/quarkus-web-bundler defines a new custom folder (`src/main/resources/web`) we need in our tooling to hard code that again which is not very extensible.\r\n\r\nI wonder if you could provide a new annotation `@TemplateDir` to defines the folders to scan:\r\n\r\n* in Quarkus it will have a new class annotated with \r\n\r\n```java\r\n@TemplateDir(\"templates\")\r\npublic class QuarkusTemplateDirProvider {\r\n\r\n}\r\n```\r\n\r\n* in Quarkus Web Bundler it will have a new class annotated with \r\n\r\n```java\r\n@TemplateDir(\"web\")\r\npublic class QuarkusWebBundlerTemplateDirProvider {\r\n\r\n}\r\n```\r\n\r\nThe `@TemplateDir` could even customize the user tags dir:\r\n\r\n```java\r\n@TemplateDir(dir = \"my-templates\",  tags=\"my-tags\")\r\npublic class MyQuarkusTemplateDirProvider {\r\n\r\n}\r\n```\r\n\r\nto scan user tags in the `src/main/resources/my-templates/my-tags`\r\n\r\n@mkouba @FroMage @ia3andy what do you think about this idea?\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34916/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34916/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
