{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27083",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27083/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27083/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27083/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/27083",
  "id": 1325632778,
  "node_id": "I_kwDOCFbutM5PA40K",
  "number": 27083,
  "title": "RESTEasy Reactive - Server side multipart implementation is not being respected",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/201",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/201",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/201/labels",
    "id": 8316083,
    "node_id": "MI_kwDOCFbutM4AfuSz",
    "number": 201,
    "title": "2.13.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 257,
    "state": "closed",
    "created_at": "2022-08-17T08:31:42Z",
    "updated_at": "2024-07-09T02:26:14Z",
    "due_on": null,
    "closed_at": "2022-09-14T20:11:06Z"
  },
  "comments": 13,
  "created_at": "2022-08-02T10:19:11Z",
  "updated_at": "2022-08-30T08:50:56Z",
  "closed_at": "2022-08-26T12:08:34Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWe have a multipart endpoint which accepts two parts handled as Strings such as this:\r\n\r\n```\r\npublic class MultipartUpload {\r\n\r\n    @RestForm\r\n    @PartType(MediaType.TEXT_PLAIN)\r\n    public String textPart;\r\n\r\n    @RestForm\r\n    @PartType(MediaType.APPLICATION_OCTET_STREAM)\r\n    public String anotherTextPart;\r\n\r\n}\r\n```\r\n\r\nThis is after we migrated to RESTEasy Reactive. With the exception of anotherTextPart being of type InputStream instead nothing has really changed since then, so essentially a multipart where we're not interested in working with the parts as files.\r\n\r\nWhat we weren't aware of was that some of our users are sending us parts with a filename provided, and whenever they do these two parts end up as null.\r\nI've tried looking into the implementation and it kind of looks like the MultipartParser will store everything into a file whenever a filename is provided. Haven't really understood the code completely but my guess is that the implementation will then fail to retrieve the data that was read unless the multipart is defined with File types. But I might be wrong here though.\r\n\r\nLooking at the [RFC-2183](https://datatracker.ietf.org/doc/html/rfc2183#section-2.3) for the Content-Disposition header, this behavior does not seem in line with the specification:\r\n\r\n> The presence of the filename parameter does not force an\r\n>    implementation to write the entity to a separate file. It is\r\n>    perfectly acceptable for implementations to leave the entity as part\r\n>    of the normal mail stream unless the user requests otherwise. As a\r\n>    consequence, the parameter may be used on any MIME entity, even\r\n>    `inline' ones. These will not normally be written to files, but the\r\n>    parameter could be used to provide a filename if the receiving user\r\n>    should choose to write the part to a file.\r\n\r\n\r\nThe users haven't changed anything in their implementation so it seems pretty evident that this has changed between Classic and Reactive.\n\n### Expected behavior\n\nThe server side implementation should be respected regardless of what the client sends.\r\nUnless a RESTEasy server multipart has implemented it, don't write parts of a multipart request to file, even if the Content-Disposition includes a filename. \r\nThe request should still work as if the client had not provided a file name for the part in question, and such is the case in Classic.\n\n### Actual behavior\n\nIf a client sends a part with filename in the Content-Disposition header, the receiving end implementation writes the data to a file regardless of what the server side multipart implementation looks like. However, if the server side does not implement the part as a file it will not be able to retrieve the data for further use, i.e the part becomes null.\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/27083/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/27083/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
