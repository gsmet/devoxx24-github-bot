{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33495",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33495/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33495/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33495/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33495",
  "id": 1717210740,
  "node_id": "I_kwDOCFbutM5mWo50",
  "number": 33495,
  "title": "OIDC tenant resolution policy",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/299",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/299",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/299/labels",
    "id": 10429739,
    "node_id": "MI_kwDOCFbutM4AnyUr",
    "number": 299,
    "title": "3.9.0.CR1",
    "description": "",
    "creator": {
      "login": "quarkusbot",
      "id": 61254497,
      "node_id": "MDQ6VXNlcjYxMjU0NDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/61254497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quarkusbot",
      "html_url": "https://github.com/quarkusbot",
      "followers_url": "https://api.github.com/users/quarkusbot/followers",
      "following_url": "https://api.github.com/users/quarkusbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/quarkusbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarkusbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarkusbot/subscriptions",
      "organizations_url": "https://api.github.com/users/quarkusbot/orgs",
      "repos_url": "https://api.github.com/users/quarkusbot/repos",
      "events_url": "https://api.github.com/users/quarkusbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarkusbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 298,
    "state": "closed",
    "created_at": "2024-01-17T09:57:21Z",
    "updated_at": "2024-07-18T12:19:14Z",
    "due_on": null,
    "closed_at": "2024-03-13T12:25:09Z"
  },
  "comments": 5,
  "created_at": "2023-05-19T12:58:55Z",
  "updated_at": "2024-03-12T10:16:42Z",
  "closed_at": "2024-03-12T10:16:39Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nRight now, in a multi-tenant OIDC setup, users have to write custom `TenantResolver` (to resolve tenant configurations already set in `application.properties`) or `TenantConfigResolver` (if configuations are created dynamically).\r\n\r\nCustom resolvers usually need to check a path or something else in the request which can be quite boilerplate.\r\n#32864 goes some way toward simplifying it for typical cases involving multiple providers.\r\n\r\nWhen tenant configurations are set in `application.properties`, instead of writing a custom `TenantResolver`, one can [use annotations instead](https://quarkus.io/guides/security-openid-connect-multitenancy#resolving-tenant-identifiers-with-annotations). Which is quite simple but still some code is needed.\r\n\r\n### Implementation ideas\r\n\r\n@pedroigor has had an idea of simplifying and enhancing it further with what can be called `tenant resolution policy` annotations, similar to what can be done with HTTP policy configuration, for example:\r\n```\r\n@TenantIdResolver(id=\"tenant-1\", paths=\"/web-app/*\")\r\n```\r\nHere, a `tenant-1` OIDC configuration will apply to all paths matching `/web-app/*`.\r\n\r\nIt would be the first step, Next steps can involve using custom rules, as well as running multiple ordered resolvers, etc \r\n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33495/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33495/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
