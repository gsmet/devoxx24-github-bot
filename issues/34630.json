{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34630",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34630/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34630/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34630/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34630",
  "id": 1795531445,
  "node_id": "I_kwDOCFbutM5rBaK1",
  "number": 34630,
  "title": "Make OIDC state handling more flexible",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/262",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/262",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/262/labels",
    "id": 9678871,
    "node_id": "MI_kwDOCFbutM4Ak7AX",
    "number": 262,
    "title": "3.2.2.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 18,
    "state": "closed",
    "created_at": "2023-07-20T15:29:02Z",
    "updated_at": "2023-07-26T17:13:26Z",
    "due_on": null,
    "closed_at": "2023-07-24T07:14:53Z"
  },
  "comments": 1,
  "created_at": "2023-07-09T19:29:01Z",
  "updated_at": "2023-07-20T15:31:21Z",
  "closed_at": "2023-07-12T12:50:50Z",
  "active_lock_reason": null,
  "body": "### Description\n\nWhen the authorization code flow starts, Quarkus redirects the user to the OIDC provider, creating a state cookie with a unique name, and adds a matching state parameter to the redirect URL. When the user returns, if the state cookie is found, but the state query param is not, then, by default, if the multi-tab authentication is disabled, or the request URL matches the redirect URL exactly (meaning, that in the presence of the multi-tab authentication, it is expected to be redirect from OIDC) Quarkus will report 401.\r\n\r\nReporting 401 is usually correct in such cases because the situation with the unmatched state cookie in one of the 2 cases described above indicates a possible problem with the SPA, or OIDC provider setup, with something going on in the redirection process. Returning 302 may cause the browser redirect loops in such cases.\r\n\r\nHowever, and I've noticed it myself, it can be annoying esp in the dev mode, for example, redirect goes to Dev Services for Keycloak, I did not complete the authentication for some reasons (ex, restarted devmode), try to access Quarkus `in the same tab`, get 401.\r\n\r\nThis problem is very easily solved by configuring a callback URL in a multi-tab authentication setup, for Quarkus to distinguish if the current request is a redirect or a regular service call, but in devmode, tests, it can be handy not to worry about it. \r\n\r\nSo, optionally, users should be able to tell Quarkus OIDC, in such cases when a non-matched state cookie is found, instead of failing with 401, simply drop state cookies if any, and request re-authentication. Not removing unmatched state cookies  in such case can eventually self-inflicted DOS, with hundreds/thousands of stale state cookies coming the Quarkus way. \r\n  \n\n### Implementation ideas\n\nAdd a property allowing to request the reauthentication instead of 401.\r\n\r\nIf the practice shows this is what users will prefer all the time - eventually do it by default",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34630/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34630/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
