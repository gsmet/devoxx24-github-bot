{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33308",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33308/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33308/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33308/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33308",
  "id": 1705836951,
  "node_id": "I_kwDOCFbutM5lrQGX",
  "number": 33308,
  "title": "Kafka consumer using kotlin coroutines throws ClassCastException",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1658790125,
      "node_id": "MDU6TGFiZWwxNjU4NzkwMTI1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kafka",
      "name": "area/kafka",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/252",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/252",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/252/labels",
    "id": 9434344,
    "node_id": "MI_kwDOCFbutM4Aj_To",
    "number": 252,
    "title": "3.0.4.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 52,
    "state": "closed",
    "created_at": "2023-05-23T17:07:47Z",
    "updated_at": "2023-06-28T14:04:44Z",
    "due_on": null,
    "closed_at": "2023-05-24T14:28:02Z"
  },
  "comments": 6,
  "created_at": "2023-05-11T13:28:29Z",
  "updated_at": "2023-05-23T17:15:10Z",
  "closed_at": "2023-05-15T19:06:47Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWe are in the process of switching from reactive programming (using Uni/Multi) to a more simple imperative design using coroutines because our use cases are easier to implement that way. \r\nWhen using coroutines with `@Incoming` in smallrye messaging a ClassCastException exception is thrown. The same method without in reactive style without coroutines/suspend works without a problem.\r\nBroken coroutine version:\r\n```kotlin\r\n@Incoming(\"contents-incoming\")\r\nsuspend fun consumeContents(record: Record<ContentMessageKey, Content?>) {\r\n    val value = record.value()\r\n    /* TODO */\r\n}\r\n```\r\n\r\nWorking reactive version:\r\n```kotlin\r\n@Incoming(\"contents-incoming\")\r\nfun consumeContents(record: Record<ContentMessageKey, Content?>): Uni<out Any> {\r\n    val value = record.value()\r\n    return uni { /* TODO */ }\r\n}\r\n```\n\n### Expected behavior\n\nCoroutine version of the consumer method processes the kafka message without error (like the reactive version)\n\n### Actual behavior\n\nThrows the following exception\r\n```\r\nWARN: SRMSG18228: A failure has been reported for Kafka topics '[contents]'\r\njava.lang.ClassCastException: class org.apache.avro.generic.GenericData$Record cannot be cast to class com.redacted.domain.egest.Content (org.apache.avro.generic.GenericData$Record is in unnamed module of loader io.quarkus.bootstrap.classloading.QuarkusClassLoader @6d40a2b; com.redacted.domain.egest.Content is in unnamed module of loader io.quarkus.bootstrap.classloading.QuarkusClassLoader @274f51ad)\r\n\tat com.redacted.api.extractor.ContentConsumer.consumeContents(ContentConsumer.kt:31)\r\n\tat com.redacted.api.extractor.ContentConsumer_ClientProxy.consumeContents(Unknown Source)\r\n\tat com.redacted.api.extractor.ContentConsumer_SmallRyeMessagingInvoker_consumeContents_494b1d69daf42c579ff2208c00abd2c78c487910.invokeBean(Unknown Source)\r\n\tat io.quarkus.smallrye.reactivemessaging.runtime.kotlin.AbstractSubscribingCoroutineInvoker$invoke$1.invokeSuspend(AbstractSubscribingCoroutineInvoker.kt:22)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)\r\n\tat io.quarkus.smallrye.reactivemessaging.runtime.kotlin.VertxDispatcher.dispatch$lambda$0(VertxDispatcher.kt:17)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:264)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:246)\r\n\tat io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n```\n\n### How to Reproduce?\n\nConsumer method:\r\n```kotlin\r\n@Incoming(\"contents-incoming\")\r\nsuspend fun consumeContents(record: Record<ContentMessageKey, Content?>) {\r\n    val value = record.value()\r\n    /* TODO */\r\n}\r\n```\r\n\r\napplication.properties:\r\n```\r\nmp.messaging.incoming.contents-incoming.enabled=true\r\nmp.messaging.incoming.contents-incoming.topic=contents\r\nmp.messaging.incoming.contents-incoming.connector=smallrye-kafka\r\nmp.messaging.incoming.contents-incoming.auto.offset.reset=earliest\r\nmp.messaging.incoming.contents-incoming.key.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer\r\nmp.messaging.incoming.contents-incoming.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer\r\nmp.messaging.incoming.contents-incoming.max.poll.records=1\r\n```\n\n### Output of `uname -a` or `ver`\n\nDarwin MBP-von-Sascha.fritz.box 22.4.0 Darwin Kernel Version 22.4.0: Mon Mar  6 21:00:17 PST 2023; root:xnu-8796.101.5~3/RELEASE_X86_64 x86_64\n\n### Output of `java -version`\n\nopenjdk version \"17.0.7\" 2023-04-18 OpenJDK Runtime Environment Temurin-17.0.7+7 (build 17.0.7+7) OpenJDK 64-Bit Server VM Temurin-17.0.7+7 (build 17.0.7+7, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n3.0.3.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nGradle 8.1.1\n\n### Additional information\n\nMight be user error or missing/wrong configuration. It's somewhat difficult to create a minimal reproducable setup. I'll try if necessary.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33308/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33308/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
