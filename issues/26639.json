{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26639",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26639/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26639/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26639/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26639",
  "id": 1299981383,
  "node_id": "I_kwDOCFbutM5NfCRH",
  "number": 26639,
  "title": "`QuarkusTestResource` with `restrictToAnnotatedClass` inject for `@Nested` classes",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/195",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/195",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/195/labels",
    "id": 8208828,
    "node_id": "MI_kwDOCFbutM4AfUG8",
    "number": 195,
    "title": "2.11.0.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 20,
    "state": "closed",
    "created_at": "2022-07-18T13:45:37Z",
    "updated_at": "2023-01-13T10:37:53Z",
    "due_on": null,
    "closed_at": "2022-07-20T13:42:18Z"
  },
  "comments": 1,
  "created_at": "2022-07-10T18:03:12Z",
  "updated_at": "2022-08-21T10:41:29Z",
  "closed_at": "2022-07-19T17:40:47Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen `QuarkusTestResource` is configured to be `restrictToAnnotatedClass`, it restarts for nested classes annotated with `@Nested`. This is also the case for `QuarkusTestResourceConfigurableLifecycleManager`, which apply `restrictToAnnotatedClass` automatically.\r\n\r\n```java\r\n@QuarkusTest\r\n@QuarkusTestResource(value = DummyTestResource.class, restrictToAnnotatedClass = true)\r\npublic class DummyNestedTest {\r\n\r\n    @InjectDummyString\r\n    String bar;\r\n\r\n    @Test\r\n    public void testBar() {\r\n        Assertions.assertEquals(\"bar\", bar); // this assertion works\r\n    }\r\n\r\n    @Nested\r\n    class NestedTestClass {\r\n\r\n        @Test\r\n        public void testBar() {\r\n            Assertions.assertEquals(\"bar\", bar); // this assertions fails\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```java\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Target({ElementType.FIELD})\r\npublic @interface InjectDummyString {\r\n}\r\n```\r\n\r\n```java\r\npublic class DummyTestResource implements QuarkusTestResourceLifecycleManager {\r\n\r\n    @Override\r\n    public Map<String, String> start() {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void stop() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void inject(TestInjector testInjector) {\r\n        testInjector.injectIntoFields(\"bar\", new AnnotatedAndMatchesType(InjectDummyString.class, String.class));\r\n    }\r\n}\r\n```\n\n### Expected behavior\n\n`QuarkusTestResource` configured with `restrictToAnnotatedClass=true` should not restart for nested classes annotated with `@Nested`.  \r\nOr, should be capable of injecting fields into the parent class.\n\n### Actual behavior\n\n`QuarkusTestResource` configured with `restrictToAnnotatedClass=true` restarts for nested classes and can not inject fields located in the parent class.\n\n### How to Reproduce?\n\nReproducer: [reproducer.zip](https://github.com/quarkusio/quarkus/files/9079579/reproducer.zip)\r\n\r\nHow to reproduce: Execute the tests.\r\n\r\nThe reproducer introduces a `QuarkusTestResourceLifecycleManager` which injects the string \"bar\" using the `@InjectDummyString` annotation.  \r\nThe `DummyNestedTest` shows, that the string is actually `null` in a nested class annotated with `@Nested`. Also you can see, that Quarkus is restarting for the nested class.\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.10.2\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26639/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26639/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
