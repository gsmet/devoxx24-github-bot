{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31340",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31340/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31340/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31340/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/31340",
  "id": 1595152014,
  "node_id": "I_kwDOCFbutM5fFBaO",
  "number": 31340,
  "title": "Provide OIDC Mock DevService",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1479557456,
      "node_id": "MDU6TGFiZWwxNDc5NTU3NDU2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/oidc",
      "name": "area/oidc",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 9,
  "created_at": "2023-02-22T13:56:02Z",
  "updated_at": "2023-08-14T09:35:47Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nRight now, when working with `quarkus-oidc` in devmode, Keycloak users can develop with [DevServices for Keycloak  ](https://quarkus.io/guides/security-openid-connect-dev-services) where a Keycloak is launched, Dev UI will allow log in to Keycloak and use tokens created by real Keycloak server for testing Quarkus, or access Keycloak Admin Console for some more advanced realm setup, etc. \r\n\r\nThis is all great but the question is how to help non-Keycloak users work in devmode ? If for example, a user is working with Azure and has `quarkus.oidc.auth-server-url` already pointing to the Azure URL, then, in devmode, they can use [the same DevUI for testing their application](https://quarkus.io/guides/security-openid-connect-dev-services#dev-ui-all-oidc-providers). But if no Azure account has been set up yet, then there is no way for this user to start developing a simple OIDC application without having to generate tokens manually.\r\n\r\nIn fact it is not quite true, Azure users can still use Dev Services for Keycloak to start developing without having to setup Azure account - this is because Keycloak will return a standard signed ID JWT token, etc. But it may feel unusual for such users. \r\n\r\nAlso it takes about 7 secs on a quite fast laptop to launch a Keycloak container - we can try to save a couple of more secs but it is unlikely we can get 3 secs or so start up time for KC when launching it with TestContainers.\r\n\r\nSo it can make sense to offer an option to launch an OIDC Mock DevService which will support typical OIDC interactions, it will be a devmode endpoint which will create correctly signed tokens, verify them, support the code flow, etc. We have all of that code in OIDC test support code, so it should be quite straightforward to implement. \r\nIf it will be supported then non-KC users will be able to test without having to generate tokens manually. And when necessary, all users can get a very fast start up with OIDC mock server already ready.\r\n\r\n\r\nCC @maxandersen (and thanks for the idea)\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31340/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31340/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
