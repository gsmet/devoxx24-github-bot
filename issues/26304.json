{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26304",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26304/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26304/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26304/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/26304",
  "id": 1280866698,
  "node_id": "I_kwDOCFbutM5MWHmK",
  "number": 26304,
  "title": "Can't run OpenTelemetry JDBC instrumentation with Quarkus integration tests",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2236031412,
      "node_id": "MDU6TGFiZWwyMjM2MDMxNDEy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/tracing",
      "name": "area/tracing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/189",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/189/labels",
    "id": 8065991,
    "node_id": "MI_kwDOCFbutM4AexPH",
    "number": 189,
    "title": "2.11.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 244,
    "state": "closed",
    "created_at": "2022-06-09T10:38:20Z",
    "updated_at": "2023-01-13T10:47:01Z",
    "due_on": null,
    "closed_at": "2022-07-13T14:14:46Z"
  },
  "comments": 1,
  "created_at": "2022-06-22T20:43:42Z",
  "updated_at": "2022-06-30T08:07:35Z",
  "closed_at": "2022-06-30T08:07:31Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI'm following the [JDBC example from the OpenTelemetry guide](https://quarkus.io/guides/opentelemetry#jdbc). When I try to integrate it and then run tests using `@QuarkusIntegrationTest` it does not work. Dev services does not adjust the jdbc URL to include the `otel` part. It seems to do that fine when running `@QuarkusTest`s.\r\n\r\n### Expected behavior\r\n\r\nI would expect to be able to run `@QuarkusIntegrationTests` with OpenTelemetry configured.\r\n\r\n### Actual behavior\r\n\r\nWhen running `./mvnw clean verify` with integration tests enabled & the OpenTelemetry JDBC, the Quarkus tests fail. Here is the console output.\r\n\r\nYou can clearly see from ` Executing \"/Users/edeandre/.sdkman/candidates/java/17.0.3-tem/bin/java -Dquarkus.http.port=8081 -Dquarkus.http.ssl-port=8444 -Dtest.url=http://localhost:8081 -Dquarkus.log.file.path=/Users/edeandre/Desktop/temp/opentelemetry-quickstart/target/quarkus.log -Dquarkus.log.file.enable=true -Dquarkus.datasource.password=quarkus -Dquarkus.datasource.db-kind=postgresql -Dquarkus.datasource.jdbc.url=jdbc:postgresql://localhost:51217/default?loggerLevel=OFF -Dquarkus.datasource.username=quarkus -jar /Users/edeandre/Desktop/temp/opentelemetry-quickstart/target/quarkus-app/quarkus-run.jar\"` that the `quarkus.datasource.jdbc.url` does not include the `otel` part:\r\n\r\n```\r\n[INFO] --- maven-failsafe-plugin:3.0.0-M7:integration-test (default) @ opentelemetry-quickstart ---\r\n[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider\r\n[INFO] \r\n[INFO] -------------------------------------------------------\r\n[INFO]  T E S T S\r\n[INFO] -------------------------------------------------------\r\n[INFO] Running org.acme.opentelemetry.TracedResourceIT\r\n15:27:48 INFO  traceId=, parentId=, spanId=, sampled= [or.jb.threads] (main) JBoss Threads version 3.4.2.Final\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [or.te.do.DockerClientProviderStrategy] (build-11) Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first\r\n  15:27:49 WARN  traceId=, parentId=, spanId=, sampled= [or.te.do.DockerClientProviderStrategy] (build-11) DOCKER_HOST tcp://127.0.0.1:49951 is not listening\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [or.te.do.DockerClientProviderStrategy] (build-11) Found Docker environment with local Unix socket (unix:///var/run/docker.sock)\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [or.te.DockerClientFactory] (build-11) Docker host IP address is localhost\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [or.te.DockerClientFactory] (build-11) Connected to docker: \r\n  Server Version: 20.10.16\r\n  API Version: 1.41\r\n  Operating System: Docker Desktop\r\n  Total Memory: 5939 MB\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [or.te.DockerClientFactory] (build-11) Checking the system...\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [or.te.DockerClientFactory] (build-11) ‚úîÔ∏é Docker server version should be at least 1.6.0\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [or.te.ut.ImageNameSubstitutor] (build-11) Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [üê≥.io.2]] (build-11) Creating container for image: docker.io/postgres:14.2\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [or.te.ut.RegistryAuthLocator] (build-11) Credential helper/store (docker-credential-desktop) does not have credentials for docker.io\r\n  15:27:49 WARN  traceId=, parentId=, spanId=, sampled= [üê≥.io.2]] (build-11) Reuse was requested but the environment does not support the reuse of containers\r\nTo enable reuse of containers, you must set 'testcontainers.reuse.enable=true' in a file located at /Users/edeandre/.testcontainers.properties\r\n  15:27:49 INFO  traceId=, parentId=, spanId=, sampled= [üê≥.io.2]] (build-11) Container docker.io/postgres:14.2 is starting: 9268e329708f5772c844eee81a31de1e24857bfadb7061e4813a26450360c444\r\n  15:27:50 INFO  traceId=, parentId=, spanId=, sampled= [üê≥.io.2]] (build-11) Container docker.io/postgres:14.2 started in PT1.258444S\r\n  15:27:50 INFO  traceId=, parentId=, spanId=, sampled= [io.qu.de.po.de.PostgresqlDevServicesProcessor] (build-11) Dev Services for PostgreSQL started.\r\n  15:27:50 INFO  traceId=, parentId=, spanId=, sampled= [io.qu.da.de.de.DevServicesDatasourceProcessor] (build-11) Dev Services for the default datasource (postgresql) started.\r\n  Executing \"/Users/edeandre/.sdkman/candidates/java/17.0.3-tem/bin/java -Dquarkus.http.port=8081 -Dquarkus.http.ssl-port=8444 -Dtest.url=http://localhost:8081 -Dquarkus.log.file.path=/Users/edeandre/Desktop/temp/opentelemetry-quickstart/target/quarkus.log -Dquarkus.log.file.enable=true -Dquarkus.datasource.password=quarkus -Dquarkus.datasource.db-kind=postgresql -Dquarkus.datasource.jdbc.url=jdbc:postgresql://localhost:51217/default?loggerLevel=OFF -Dquarkus.datasource.username=quarkus -jar /Users/edeandre/Desktop/temp/opentelemetry-quickstart/target/quarkus-app/quarkus-run.jar\"\r\n__  ____  __  _____   ___  __ ____  ______ \r\n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ \r\n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\   \r\n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/   \r\n15:27:51 WARN  traceId=, parentId=, spanId=, sampled= [io.ag.pool] (main) Datasource '<default>': Driver does not support the provided URL: jdbc:postgresql://localhost:51217/default?loggerLevel=OFF\r\n  15:27:51 WARN  traceId=, parentId=, spanId=, sampled= [io.ag.pool] (agroal-11) Datasource '<default>': Driver does not support the provided URL: jdbc:postgresql://localhost:51217/default?loggerLevel=OFF\r\n  15:27:51 WARN  traceId=, parentId=, spanId=, sampled= [or.hi.en.jd.en.in.JdbcEnvironmentInitiator] (JPA Startup Thread: <default>) HHH000342: Could not obtain connection to query metadata: java.sql.SQLException: Driver does not support the provided URL: jdbc:postgresql://localhost:51217/default?loggerLevel=OFF\r\n        at io.agroal.pool.ConnectionFactory.connectionSetup(ConnectionFactory.java:242)\r\n        at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:226)\r\n        at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:535)\r\n        at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:516)\r\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n        at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\n\r\n  15:27:51 WARN  traceId=, parentId=, spanId=, sampled= [io.ag.pool] (agroal-11) Datasource '<default>': Driver does not support the provided URL: jdbc:postgresql://localhost:51217/default?loggerLevel=OFF\r\n  15:27:51 WARN  traceId=, parentId=, spanId=, sampled= [or.hi.en.jd.sp.SqlExceptionHelper] (JPA Startup Thread: <default>) SQL Error: 0, SQLState: null\r\n  15:27:51 ERROR traceId=, parentId=, spanId=, sampled= [or.hi.en.jd.sp.SqlExceptionHelper] (JPA Startup Thread: <default>) Driver does not support the provided URL: jdbc:postgresql://localhost:51217/default?loggerLevel=OFF\r\n  15:27:51 ERROR traceId=, parentId=, spanId=, sampled= [io.qu.ru.Application] (main) Failed to start application (with profile prod): java.sql.SQLException: Driver does not support the provided URL: jdbc:postgresql://localhost:51217/default?loggerLevel=OFF\r\n        at io.agroal.pool.ConnectionFactory.connectionSetup(ConnectionFactory.java:242)\r\n        at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:226)\r\n        at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:535)\r\n        at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:516)\r\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n        at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\n\r\n  Application was not started: 2022-06-22 15:27:51,354 edeandrea-m1pro quarkus-run.jar[4225] ERROR [io.qua.run.Application] (main) Failed to start application (with profile prod): java.sql.SQLException: Driver does not support the provided URL: jdbc:postgresql://localhost:51217/default?loggerLevel=OFF\r\n```\r\n\r\n### How to Reproduce?\r\n\r\nReproducer:\r\n[opentelemetry-quickstart.zip](https://github.com/quarkusio/quarkus/files/8961164/opentelemetry-quickstart.zip)\r\n\r\n1. Unzip\r\n2. `cd opentelemetry-quickstart`\r\n3. `./mvnw clean verify` \r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nDarwin edeandrea-m1pro 21.5.0 Darwin Kernel Version 21.5.0: Tue Apr 26 21:08:37 PDT 2022; root:xnu-8020.121.3~4/RELEASE_ARM64_T6000 arm64\r\n\r\n### Output of `java -version`\r\n\r\n```\r\nopenjdk version \"17.0.3\" 2022-04-19\r\nOpenJDK Runtime Environment Temurin-17.0.3+7 (build 17.0.3+7)\r\nOpenJDK 64-Bit Server VM Temurin-17.0.3+7 (build 17.0.3+7, mixed mode)\r\n```\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.10.0.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n```\r\nApache Maven 3.8.4 (9b656c72d54e5bacbed989b64718c159fe39b537)\r\nMaven home: /Users/edeandre/.m2/wrapper/dists/apache-maven-3.8.4-bin/52ccbt68d252mdldqsfsn03jlf/apache-maven-3.8.4\r\nJava version: 17.0.3, vendor: Eclipse Adoptium, runtime: /Users/edeandre/.sdkman/candidates/java/17.0.3-tem\r\nDefault locale: en_US, platform encoding: UTF-8\r\nOS name: \"mac os x\", version: \"12.4\", arch: \"aarch64\", family: \"mac\"\r\n```\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/26304/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/26304/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
