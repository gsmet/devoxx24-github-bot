{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36860",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36860/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36860/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36860/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/36860",
  "id": 1976380925,
  "node_id": "I_kwDOCFbutM51zS39",
  "number": 36860,
  "title": "Exhausted thread pool returns error 500 instead of 503 status code",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1320737519,
      "node_id": "MDU6TGFiZWwxMzIwNzM3NTE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/vertx",
      "name": "area/vertx",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/284",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/284",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/284/labels",
    "id": 10103752,
    "node_id": "MI_kwDOCFbutM4AmivI",
    "number": 284,
    "title": "3.2.8.Final",
    "description": "",
    "creator": {
      "login": "aloubyansky",
      "id": 323379,
      "node_id": "MDQ6VXNlcjMyMzM3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/323379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aloubyansky",
      "html_url": "https://github.com/aloubyansky",
      "followers_url": "https://api.github.com/users/aloubyansky/followers",
      "following_url": "https://api.github.com/users/aloubyansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/aloubyansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aloubyansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aloubyansky/subscriptions",
      "organizations_url": "https://api.github.com/users/aloubyansky/orgs",
      "repos_url": "https://api.github.com/users/aloubyansky/repos",
      "events_url": "https://api.github.com/users/aloubyansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aloubyansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 129,
    "state": "closed",
    "created_at": "2023-10-25T07:58:05Z",
    "updated_at": "2023-11-15T14:06:19Z",
    "due_on": "2023-11-15T08:00:00Z",
    "closed_at": "2023-11-08T14:04:29Z"
  },
  "comments": 0,
  "created_at": "2023-11-03T14:55:19Z",
  "updated_at": "2023-11-07T16:53:17Z",
  "closed_at": "2023-11-04T17:32:45Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen the thread pool is exhausted and no more requests can be queued, Quarkus throws an uncaught exception.\r\n\r\nThis is problematic as it is treated as server error and even stresses the logging system putting additional load to already overloaded system.\r\n\r\nClosely related issue which needs to be addressed in parallel: #36530\n\n### Expected behavior\n\n`HTTP 503 Service Unavailable` (or similar) should be returned without throwing an uncaught exception.\n\n### Actual behavior\n\n```\r\nERROR [io.quarkus.vertx.http.runtime.QuarkusErrorHandler] (vert.x-eventloop-thread-8) HTTP Request to / failed, error id: b7586f43-7428-413a-8cab-06dae92b5419-1: java.util.concurrent.RejectedExecutionException\r\n\tat org.jboss.threads.RejectingExecutor.execute(RejectingExecutor.java:38)\r\n\tat org.jboss.threads.EnhancedQueueExecutor.rejectQueueFull(EnhancedQueueExecutor.java:2127)\r\n\tat org.jboss.threads.EnhancedQueueExecutor.execute(EnhancedQueueExecutor.java:821)\r\n\tat org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext.run(AbstractResteasyReactiveContext.java:219)\r\n\tat org.jboss.resteasy.reactive.server.handlers.RestInitialHandler.beginProcessing(RestInitialHandler.java:48)\r\n\tat org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveVertxHandler.handle(ResteasyReactiveVertxHandler.java:23)\r\n\tat org.jboss.resteasy.reactive.server.vertx.ResteasyReactiveVertxHandler.handle(ResteasyReactiveVertxHandler.java:10)\r\n\tat io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1284)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:141)\r\n\tat io.quarkus.vertx.http.runtime.options.HttpServerCommonHandlers$1.handle(HttpServerCommonHandlers.java:58)\r\n\tat io.quarkus.vertx.http.runtime.options.HttpServerCommonHandlers$1.handle(HttpServerCommonHandlers.java:36)\r\n\tat io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1284)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:141)\r\n\tat io.quarkus.resteasy.reactive.server.runtime.ResteasyReactiveRecorder$13.handle(ResteasyReactiveRecorder.java:382)\r\n\tat io.quarkus.resteasy.reactive.server.runtime.ResteasyReactiveRecorder$13.handle(ResteasyReactiveRecorder.java:375)\r\n\tat io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1284)\r\n\tat io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)\r\n\tat io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:141)\r\n\tat io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)\r\n\tat io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)\r\n\tat io.quarkus.vertx.http.runtime.options.HttpServerCommonHandlers$2.handle(HttpServerCommonHandlers.java:82)\r\n\tat io.quarkus.vertx.http.runtime.options.HttpServerCommonHandlers$2.handle(HttpServerCommonHandlers.java:65)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$1.handle(VertxHttpRecorder.java:177)\r\n\tat io.quarkus.vertx.http.runtime.VertxHttpRecorder$1.handle(VertxHttpRecorder.java:153)\r\n\tat io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)\r\n\tat io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:158)\r\n\tat io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:167)\r\n\tat io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:158)\r\n\tat io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)\r\n\tat io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n\tSuppressed: java.util.concurrent.RejectedExecutionException: Queue is full\r\n\t\tat org.jboss.threads.EnhancedQueueExecutor.rejectQueueFull(EnhancedQueueExecutor.java:2129)\r\n\t\t... 67 more\r\n```\n\n### How to Reproduce?\n\nEasiest to reproduce is probably something like:\r\n```\r\nquarkus.thread-pool.max-threads=1\r\nquarkus.thread-pool.queue-size=1\r\n```\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### Quarkus version or git rev\n\nQuarkus 3.2.7\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\nThis issue supersedes https://github.com/quarkusio/quarkus/issues/36543 which captures full context.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36860/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36860/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
