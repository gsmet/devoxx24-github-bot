{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22209",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22209/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22209/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22209/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/22209",
  "id": 1079956578,
  "node_id": "I_kwDOCFbutM5AXtRi",
  "number": 22209,
  "title": "RESTEasy Reactive: add ability to invoke filters once the form parameters are read",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/161",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/161/labels",
    "id": 7468359,
    "node_id": "MI_kwDOCFbutM4AcfVH",
    "number": 161,
    "title": "2.7.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 334,
    "state": "closed",
    "created_at": "2021-12-08T07:48:18Z",
    "updated_at": "2022-02-03T19:52:11Z",
    "due_on": null,
    "closed_at": "2022-01-19T12:42:36Z"
  },
  "comments": 7,
  "created_at": "2021-12-14T16:20:38Z",
  "updated_at": "2022-06-17T01:17:04Z",
  "closed_at": "2021-12-15T19:13:34Z",
  "active_lock_reason": null,
  "body": "### Description\n\nI need to set a filter that checks every `POST` request for the existence of a CRSF value, but when my filter is invoked, the form is not read yet:\r\n\r\n```java\r\n    @ServerRequestFilter\r\n    public void filterRequest(HttpServerRequest req) {\r\n        // check CRSF param for every method except the three safe ones\r\n        if (req.method() != HttpMethod.GET\r\n                && req.method() != HttpMethod.HEAD\r\n                && req.method() != HttpMethod.OPTIONS) {\r\n            //FIXME: can't do this for now because form values are not read when filter is invoked\r\n            CurrentVertxRequest currentVertxRequest = CDI.current().select(CurrentVertxRequest.class).get();\r\n            ResteasyReactiveRequestContext rrContext = (ResteasyReactiveRequestContext) currentVertxRequest\r\n                    .getOtherHttpContextObject();\r\n            FormData formData = rrContext.getFormData();\r\n        }\r\n    }\r\n```\r\n\r\nIt would be nice to have an option to delay filters to after the form is read, perhaps with `@ServerRequestFilter(readBody = true)`\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22209/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22209/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
