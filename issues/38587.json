{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38587",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38587/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38587/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38587/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38587",
  "id": 2119063314,
  "node_id": "I_kwDOCFbutM5-TlcS",
  "number": 38587,
  "title": "@QuarkusTest throws ConversionException in parameterized test on second parameter set with KClass parameter",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2024-02-05T17:16:53Z",
  "updated_at": "2024-04-09T11:38:10Z",
  "closed_at": "2024-04-09T11:38:09Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nHaving the following setup\r\n\r\n```\r\n@QuarkusTest\r\nclass Reproducer {\r\n    companion object {\r\n        @Suppress(\"LongMethod\")\r\n        @JvmStatic\r\n        fun testData(): List<Arguments> =\r\n            listOf(\r\n                Arguments.of(\r\n                    \"/tour-plan-validation/missing-stop-location-id.json\",\r\n                    String::class,\r\n                    \"\",\r\n                ),\r\n                Arguments.of(\r\n                    \"foobar\",\r\n                    String::class,\r\n                    \"\",\r\n                ),\r\n            )\r\n    }\r\n\r\n    @ParameterizedTest\r\n    @MethodSource(\"testData\")\r\n    fun test(resourcePath: String, expectedClass: KClass<*>, expectedPropertyName: String) {\r\n\r\n    }\r\n}\r\n```\r\n\r\nXstream throws a `ConversionException` for the second (and potentially subsequent) parameter sets: \r\n\r\n```\r\ncom.thoughtworks.xstream.converters.ConversionException: No converter available\r\n---- Debugging information ----\r\nmessage             : No converter available\r\ntype                : java.lang.ref.SoftReference\r\nconverter           : com.thoughtworks.xstream.converters.reflection.ReflectionConverter\r\nmessage[1]          : Unable to make field private java.lang.Object java.lang.ref.Reference.referent accessible: module java.base does not \"opens java.lang.ref\" to unnamed module @697b477a\r\n-------------------------------\r\n\tat com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType(DefaultConverterLookup.java:88)\r\n\tat com.thoughtworks.xstream.XStream$1.lookupConverterForType(XStream.java:478)\r\n\tat com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:49)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1.convertAnother(AbstractReferenceMarshaller.java:83)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshallField(AbstractReflectionConverter.java:270)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField(AbstractReflectionConverter.java:174)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doMarshal(AbstractReflectionConverter.java:262)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshal(AbstractReflectionConverter.java:90)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert(AbstractReferenceMarshaller.java:68)\r\n\tat com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:59)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1.convertAnother(AbstractReferenceMarshaller.java:83)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshallField(AbstractReflectionConverter.java:270)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField(AbstractReflectionConverter.java:174)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doMarshal(AbstractReflectionConverter.java:262)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshal(AbstractReflectionConverter.java:90)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert(AbstractReferenceMarshaller.java:68)\r\n\tat com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:59)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1.convertAnother(AbstractReferenceMarshaller.java:83)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshallField(AbstractReflectionConverter.java:270)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField(AbstractReflectionConverter.java:174)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doMarshal(AbstractReflectionConverter.java:262)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshal(AbstractReflectionConverter.java:90)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert(AbstractReferenceMarshaller.java:68)\r\n\tat com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:59)\r\n\tat com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:44)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1.convertAnother(AbstractReferenceMarshaller.java:87)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshal(AbstractReflectionConverter.java:88)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert(AbstractReferenceMarshaller.java:68)\r\n\tat com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:59)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1.convertAnother(AbstractReferenceMarshaller.java:83)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshallField(AbstractReflectionConverter.java:270)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField(AbstractReflectionConverter.java:174)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doMarshal(AbstractReflectionConverter.java:262)\r\n\tat com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshal(AbstractReflectionConverter.java:90)\r\n\tat com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert(AbstractReferenceMarshaller.java:68)\r\n\tat com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:59)\r\n\tat com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:44)\r\n\tat com.thoughtworks.xstream.core.TreeMarshaller.start(TreeMarshaller.java:83)\r\n\tat com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.marshal(AbstractTreeMarshallingStrategy.java:37)\r\n\tat com.thoughtworks.xstream.XStream.marshal(XStream.java:1303)\r\n\tat com.thoughtworks.xstream.XStream.marshal(XStream.java:1292)\r\n\tat com.thoughtworks.xstream.XStream.toXML(XStream.java:1265)\r\n\tat com.thoughtworks.xstream.XStream.toXML(XStream.java:1252)\r\n\tat io.quarkus.test.junit.internal.XStreamDeepClone.doClone(XStreamDeepClone.java:53)\r\n\tat io.quarkus.test.junit.internal.XStreamDeepClone.clone(XStreamDeepClone.java:39)\r\n\tat io.quarkus.test.junit.internal.SerializationWithXStreamFallbackDeepClone.clone(SerializationWithXStreamFallbackDeepClone.java:33)\r\n\tat io.quarkus.test.junit.QuarkusTestExtension.runExtensionMethod(QuarkusTestExtension.java:998)\r\n\tat io.quarkus.test.junit.QuarkusTestExtension.runExtensionMethod(QuarkusTestExtension.java:907)\r\n\tat io.quarkus.test.junit.QuarkusTestExtension.interceptTestTemplateMethod(QuarkusTestExtension.java:867)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n```\r\n\n\n### Expected behavior\n\nNo exceptions thrown\n\n### Actual behavior\n\n`ConversionException` thrown\n\n### How to Reproduce?\n\n1. checkout https://github.com/greyhairredbear/quarkus-reproducer-xstream-conversion/tree/main\r\n2. `./gradlew test` or run the tests from your IDE\r\n\r\nNote: \r\nuse \r\n```\r\ntest {\r\n    testLogging {\r\n        exceptionFormat = 'full'\r\n    }\r\n}\n\n### Output of `uname -a` or `ver`\n\nDarwin optimus.home 23.2.0 Darwin Kernel Version 23.2.0: Wed Nov 15 21:55:06 PST 2023; root:xnu-10002.61.3~2/RELEASE_ARM64_T6020 arm64\n\n### Output of `java -version`\n\nOpenJDK 64-Bit Server VM Corretto-21.0.0.35.1 (build 21+35-LTS, mixed mode, sharing)\n\n### Quarkus version or git rev\n\n3.7.1\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n------------------------------------------------------------ Gradle 8.5 ------------------------------------------------------------  Build time:   2023-11-29 14:08:57 UTC Revision:     28aca86a7180baa17117e0e5ba01d8ea9feca598  Kotlin:       1.9.20 Groovy:       3.0.17 Ant:          Apache Ant(TM) version 1.10.13 compiled on January 4 2023 JVM:          21 (Amazon.com Inc. 21+35-LTS) OS:           Mac OS X 14.2.1 aarch64\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38587/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38587/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
