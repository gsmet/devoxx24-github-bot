{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31359",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31359/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31359/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31359/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/31359",
  "id": 1595724958,
  "node_id": "I_kwDOCFbutM5fHNSe",
  "number": 31359,
  "title": "Repeatable Annotation-based test resources ",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/235",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/235",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/235/labels",
    "id": 9025446,
    "node_id": "MI_kwDOCFbutM4Aibem",
    "number": 235,
    "title": "3.0.0.Alpha5",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 253,
    "state": "closed",
    "created_at": "2023-02-09T14:26:03Z",
    "updated_at": "2023-11-12T17:44:08Z",
    "due_on": null,
    "closed_at": "2023-03-08T15:10:59Z"
  },
  "comments": 2,
  "created_at": "2023-02-22T19:42:40Z",
  "updated_at": "2023-02-28T07:10:22Z",
  "closed_at": "2023-02-28T07:10:19Z",
  "active_lock_reason": null,
  "body": "### Description\n\nCurrently, [Annotation-based test resources](https://quarkus.io/guides/getting-started-testing#annotation-based-test-resources) are not repeatable.\r\nI would like to be able to do somehting like\r\n\r\n```java\r\n    @Test\r\n    void testAnnotationBased() {\r\n        TestResourceManager manager = new TestResourceManager(RepeatableAnnotationBasedTestResourcesTest.class);\r\n        manager.init(\"test\");\r\n        Map<String, String> props = manager.start();\r\n        Assertions.assertEquals(\"value\", props.get(\"annotationkey1\"));\r\n        Assertions.assertEquals(\"value\", props.get(\"annotationkey2\"));\r\n    }\r\n\r\n    public static class AnnotationBasedQuarkusTestResource\r\n            implements QuarkusTestResourceConfigurableLifecycleManager<WithAnnotationBasedTestResource> {\r\n\r\n        private String key;\r\n\r\n        @Override\r\n        public void init(WithAnnotationBasedTestResource annotation) {\r\n            this.key = annotation.key();\r\n        }\r\n\r\n        @Override\r\n        public Map<String, String> start() {\r\n            Map<String, String> props = new HashMap<>();\r\n            props.put(key, \"value\");\r\n            return props;\r\n        }\r\n\r\n        @Override\r\n        public void stop() {\r\n\r\n        }\r\n    }\r\n\r\n    @QuarkusTestResource(AnnotationBasedQuarkusTestResource.class)\r\n    @Retention(RetentionPolicy.RUNTIME)\r\n    @Target(ElementType.TYPE)\r\n    @Repeatable(WithAnnotationBasedTestResource.List.class)\r\n    public @interface WithAnnotationBasedTestResource {\r\n        String key() default \"\";\r\n\r\n        @Target(ElementType.TYPE)\r\n        @Retention(RetentionPolicy.RUNTIME)\r\n        @interface List {\r\n            WithAnnotationBasedTestResource[] value();\r\n        }\r\n\r\n    }\r\n\r\n    @WithAnnotationBasedTestResource(key = \"annotationkey1\")\r\n    @WithAnnotationBasedTestResource(key = \"annotationkey2\")\r\n    public static class RepeatableAnnotationBasedTestResourcesTest {\r\n    }\r\n```\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31359/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31359/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
