{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31912",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31912/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31912/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31912/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/31912",
  "id": 1627891003,
  "node_id": "I_kwDOCFbutM5hB6U7",
  "number": 31912,
  "title": "[Extension Proposal] QuteServerPages",
  "labels": [
    {
      "id": 1553869078,
      "node_id": "MDU6TGFiZWwxNTUzODY5MDc4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/extension-proposal",
      "name": "kind/extension-proposal",
      "color": "abfcbb",
      "default": false,
      "description": "Discuss and Propose new extensions"
    },
    {
      "id": 2388070055,
      "node_id": "MDU6TGFiZWwyMzg4MDcwMDU1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/quarkiverse",
      "name": "area/quarkiverse",
      "color": "a01441",
      "default": false,
      "description": "This issue/PR is part of the Quarkiverse organization"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 5,
  "created_at": "2023-03-16T16:47:10Z",
  "updated_at": "2023-03-18T10:51:03Z",
  "closed_at": "2023-03-18T10:51:03Z",
  "active_lock_reason": null,
  "body": "### Description\n\nThe goal of this simple extension would be to expose all Qute templates located in the `src/main/resource/templates` directory via HTTP. No JAX-RS controller needed. For example, a template located in `src/main/resource/templates/foo.html` will be served from the paths `/qsp/foo` and `/qsp/foo.html` by default.\r\n\r\nSo the workflow would be simple: (1) drop a template in `src/main/resource/templates` and (2) HTTP GET `/qsp/templateName`.\r\n\r\nThe code name of this extension could be \"the poor man's webapp\" or \"webapps for old farts\" :wink:.\r\n\r\n### Data\r\n\r\nIn the templates it would be possible to access:\r\n\r\n- [`@Named` CDI beans; similar to EL; e.g. `{cdi:myBean.findItems()}`](https://quarkus.io/guides/qute-reference#injecting-beans-directly-in-templates) (type-safe validation included)\r\n- [static members of a class via `@TemplateData`](https://quarkus.io/guides/qute-reference#accessing-static-fields-and-methods)\r\n- [enums via `@TemplateEnum`](https://quarkus.io/guides/qute-reference#convenient-annotation-for-enums)\r\n- [Namespace Extension Methods](https://quarkus.io/guides/qute-reference#namespace_extension_methods) in general\r\n- [global variables](https://quarkus.io/guides/qute-reference#global_variables)\r\n- the current `io.vertx.core.http.HttpServerRequest` via CDI, e.g. `{cdi:vertxRequest.getParam('foo')}`\r\n\r\n### Implementation\r\n\r\nA custom `vertx-web` route handler is registered for the pages, matching all HTTP GET requests to `/qsp/*` by default.\r\n\r\n### Working POC (including tests, but no docs)\r\n\r\nhttps://github.com/mkouba/quarkus-qsp\n\n### Repository name\n\nquarkus-qsp\n\n### Short description\n\nAutomatically expose Qute templates via HTTP\n\n### Repository Homepage URL\n\nhttps://quarkiverse.github.io/quarkiverse-docs/<REPOSITORY_NAME>/dev/\n\n### Repository Topics\n\n- quarkus-extension\r\n- \r\n...\r\n\n\n### Team Members\n\n- \r\n\n\n### Additional context\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/31912/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/31912/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
