{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20199",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20199/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20199/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20199/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20199",
  "id": 998113988,
  "node_id": "I_kwDOCFbutM47fgLE",
  "number": 20199,
  "title": "GraphQL + Fault Tolerance fails to compile to native",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2234509819,
      "node_id": "MDU6TGFiZWwyMjM0NTA5ODE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/graphql",
      "name": "area/graphql",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2236032526,
      "node_id": "MDU6TGFiZWwyMjM2MDMyNTI2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/fault-tolerance",
      "name": "area/fault-tolerance",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/155",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/155",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/155/labels",
    "id": 7262270,
    "node_id": "MI_kwDOCFbutM4AbtA-",
    "number": 155,
    "title": "2.3.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 82,
    "state": "closed",
    "created_at": "2021-10-18T08:24:48Z",
    "updated_at": "2021-12-07T21:29:09Z",
    "due_on": null,
    "closed_at": "2021-10-20T13:14:36Z"
  },
  "comments": 3,
  "created_at": "2021-09-16T11:43:19Z",
  "updated_at": "2021-10-18T08:34:33Z",
  "closed_at": "2021-09-29T18:14:47Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nIf my GraphQL endpoint injects a CDI bean that uses SmallRye Fault Tolerance, the resulting application can't be compiled to native.\r\n\r\nA simple example is:\r\n\r\n```java\r\n@GraphQLApi\r\npublic class MyEndpoint {\r\n    @Inject\r\n    MyService myService;\r\n\r\n    @Query\r\n    public Uni<String> get() {\r\n        return myService.get();\r\n    }\r\n}\r\n```\r\n\r\n```java\r\n@Singleton\r\npublic class MyService {\r\n    @Timeout\r\n    public Uni<String> get() {\r\n        return Uni.createFrom().item(\"Hello!\");\r\n    }\r\n}\r\n```\r\n\r\nNative compilation fails with:\r\n\r\n```\r\nError: Detected a started Thread in the image heap. Threads running in the image generator are no longer running at image runtime.  To see how this object got instantiated use --trace-object-instantiation=java.lang.Thread. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nDetailed message:\r\nTrace: Object was reached by \r\n        reading field io.smallrye.faulttolerance.core.timer.Timer.thread of\r\n                constant io.smallrye.faulttolerance.core.timer.Timer@4c21ed10 reached by \r\n        reading field io.smallrye.faulttolerance.ExecutorHolder.timer of\r\n                constant io.smallrye.faulttolerance.ExecutorHolder@3ba3da36 reached by \r\n        reading field io.quarkus.arc.impl.InstanceHandleImpl.instance of\r\n                constant io.quarkus.arc.impl.ContextInstanceHandleImpl@292cc76b reached by \r\n        reading field io.quarkus.arc.impl.LazyValue.value of\r\n                constant io.quarkus.arc.impl.LazyValue@23d9c050 reached by \r\n        reading field java.util.concurrent.ConcurrentHashMap$Node.val of\r\n                constant java.util.concurrent.ConcurrentHashMap$Node@21f67d6d reached by \r\n        reading field java.util.concurrent.ConcurrentHashMap$Node.next of\r\n                constant java.util.concurrent.ConcurrentHashMap$Node@5a5c9a46 reached by \r\n        reading field java.util.concurrent.ConcurrentHashMap$Node.next of\r\n                constant java.util.concurrent.ConcurrentHashMap$Node@75e355e reached by \r\n        indexing into array\r\n                constant java.util.concurrent.ConcurrentHashMap$Node[]@19057ce2 reached by \r\n        reading field java.util.concurrent.ConcurrentHashMap.table of\r\n                constant java.util.concurrent.ConcurrentHashMap@17d188c5 reached by \r\n        reading field io.quarkus.arc.impl.ComputingCache.map of\r\n                constant io.quarkus.arc.impl.ComputingCache@657091a1 reached by \r\n        reading field io.quarkus.arc.impl.AbstractSharedContext.instances of\r\n                constant io.quarkus.arc.impl.SingletonContext@482e4704 reached by \r\n        reading field io.quarkus.arc.impl.ArcContainerImpl.singletonContext of\r\n                constant io.quarkus.arc.impl.ArcContainerImpl@3df0e5b4 reached by \r\n        reading field java.util.concurrent.atomic.AtomicReference.value of\r\n                constant java.util.concurrent.atomic.AtomicReference@1867d2d9 reached by \r\n        scanning method io.quarkus.arc.Arc.container(Arc.java:41)\r\nCall path from entry point to io.quarkus.arc.Arc.container(): \r\n        at io.quarkus.arc.Arc.container(Arc.java:41)\r\n        at io.quarkus.smallrye.context.runtime.SmallRyeContextPropagationRecorder$2.get(SmallRyeContextPropagationRecorder.java:67)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.initializeLazyValue(SystemPropertiesSupport.java:216)\r\n        at com.oracle.svm.core.jdk.SystemPropertiesSupport.getProperty(SystemPropertiesSupport.java:169)\r\n        at com.oracle.svm.core.jdk.Target_java_lang_System.getProperty(JavaLangSubstitutions.java:290)\r\n        at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_lang_System_2_0002egetProperty_00028Ljava_lang_String_2_00029Ljava_lang_String_2(generated:0)\r\n```\r\n\r\nThis is because SmallRye GraphQL asks the CDI container to instantiate all GraphQL beans during bootstrap (`Bootstrap.verifyInjectionIsAvailable`). In this case, the CDI container has to instantiate `MyEndpoint`, and to do that, it also has to instantiate `MyService`. To do that, the Fault Tolerance interceptor has to be instantiated, and all its runtime services, including a timer thread.\n\n### Expected behavior\n\nApplication compiles to native just fine. GraphQL defers instantiation of its beans to runtime.\n\n### Actual behavior\n\nApplication fails to compile to native. GraphQL instantiates its beans at build time.\n\n### How to Reproduce?\n\n```\r\ngit clone https://github.com/Ladicek/quarkus-fault-tolerance-graphql.git\r\ncd quarkus-fault-tolerance-graphql\r\nmvn clean package -Dnative\r\n```\n\n### Output of `uname -a` or `ver`\n\nLinux argondie 4.15.0-156-generic #163-Ubuntu SMP Thu Aug 19 23:31:58 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"11.0.11\" 2021-04-20 OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.18.04) OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.18.04, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\nGraalVM CE 21.2.0\n\n### Quarkus version or git rev\n\n2.2.3.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.1 (05c21c65bdfed0f71a2f2ada8b84da59348c4c5d) Maven home: /home/lthon/software/apache-maven Java version: 11.0.11, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64 Default locale: cs_CZ, platform encoding: UTF-8 OS name: \"linux\", version: \"4.15.0-156-generic\", arch: \"amd64\", family: \"unix\"\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20199/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20199/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
