{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32839",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32839/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32839/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32839/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/32839",
  "id": 1679885267,
  "node_id": "I_kwDOCFbutM5kIQPT",
  "number": 32839,
  "title": "Inconsistent behaviour in REST Client Reative in regards of switching between Event Pool / Worker (inherited) executors",
  "labels": [
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/245",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/245",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/245/labels",
    "id": 9272809,
    "node_id": "MI_kwDOCFbutM4AjX3p",
    "number": 245,
    "title": "3.1.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 1,
    "closed_issues": 189,
    "state": "closed",
    "created_at": "2023-04-12T07:42:31Z",
    "updated_at": "2024-04-17T06:04:35Z",
    "due_on": null,
    "closed_at": "2023-05-17T12:28:33Z"
  },
  "comments": 2,
  "created_at": "2023-04-23T06:39:37Z",
  "updated_at": "2023-04-25T10:58:22Z",
  "closed_at": "2023-04-25T10:58:18Z",
  "active_lock_reason": null,
  "body": "The REST Client Reactive is not using the Event Loop thread pool at the beginning, but the Worker thread pool (see [here](https://github.com/quarkusio/quarkus/blob/63cfe7c5589fc8d94e02df4fc25b3d3c42b10ca4/independent-projects/resteasy-reactive/client/runtime/src/main/java/org/jboss/resteasy/reactive/client/impl/AsyncInvokerImpl.java#L285)). \r\n\r\nThen, the handler ClientSendRequestHandler switches to the Event Loop thread [here](https://github.com/quarkusio/quarkus/blob/63cfe7c5589fc8d94e02df4fc25b3d3c42b10ca4/independent-projects/resteasy-reactive/client/runtime/src/main/java/org/jboss/resteasy/reactive/client/handlers/ClientSendRequestHandler.java#L106). \r\n\r\nAnd the problem is that if the response from the server arrives before the client ends with the ClientSendRequestHandler handler, the client will keep using the Worker thread pool. Why? \r\n\r\n1.- First, the ClientSendRequestHandler handler suspends the execution [here](https://github.com/quarkusio/quarkus/blob/63cfe7c5589fc8d94e02df4fc25b3d3c42b10ca4/independent-projects/resteasy-reactive/client/runtime/src/main/java/org/jboss/resteasy/reactive/client/handlers/ClientSendRequestHandler.java#L90).\r\n2.- Second, the ClientSendRequestHandler handler performs the request to the server and subscribes to the response. After receiving the response, it resumes the execution [here](https://github.com/quarkusio/quarkus/blob/63cfe7c5589fc8d94e02df4fc25b3d3c42b10ca4/independent-projects/resteasy-reactive/client/runtime/src/main/java/org/jboss/resteasy/reactive/client/handlers/ClientSendRequestHandler.java#L347).\r\n\r\nNow, we have two scenarios:\r\n\r\n### Scenario A: Happy path\r\nBecause 1., the client suspends the execution and will wait for the resume. [This condition](https://github.com/quarkusio/quarkus/blob/63cfe7c5589fc8d94e02df4fc25b3d3c42b10ca4/independent-projects/resteasy-reactive/common/runtime/src/main/java/org/jboss/resteasy/reactive/common/core/AbstractResteasyReactiveContext.java#L146) will be true and the while loop will end. \r\n\r\nAfter receiving the response from the server, the execution will resume using the Event Loop thread pool (provided by [this method](https://github.com/quarkusio/quarkus/blob/63cfe7c5589fc8d94e02df4fc25b3d3c42b10ca4/independent-projects/resteasy-reactive/common/runtime/src/main/java/org/jboss/resteasy/reactive/common/core/AbstractResteasyReactiveContext.java#L122)).\r\n\r\n### Scenario B: When server flies: The cause of the test failures\r\n\r\nBefore the client suspends the execution, if the server returns the response, the execution will be resumed because of 2. But because the execution was never suspended, it won't invoke the `getEventLoop()` method (see [here](https://github.com/quarkusio/quarkus/blob/63cfe7c5589fc8d94e02df4fc25b3d3c42b10ca4/independent-projects/resteasy-reactive/common/runtime/src/main/java/org/jboss/resteasy/reactive/common/core/AbstractResteasyReactiveContext.java#L69)). Note that taking into account the execution was never suspended, I think this logic is correct. \r\n\r\n_Originally posted by @Sgitario in https://github.com/quarkusio/quarkus/issues/32644#issuecomment-1517643116_\r\n            ",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/32839/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/32839/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
