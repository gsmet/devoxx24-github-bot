{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42245",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42245/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42245/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42245/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/42245",
  "id": 2440188004,
  "node_id": "I_kwDOCFbutM6RclBk",
  "number": 42245,
  "title": "Investigate use of JUnit ClasspathScanner for class discovery",
  "labels": [
    {
      "id": 2495096953,
      "node_id": "MDU6TGFiZWwyNDk1MDk2OTUz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/needs-triage",
      "name": "triage/needs-triage",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2024-07-31T14:21:16Z",
  "updated_at": "2024-08-01T10:52:27Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "For a while, we've wanted the ability to intercept JUnit class discovery, without writing a whole engine. So far, it hasn't been possible, but that is [changing soon](https://github.com/junit-team/junit5/issues/3628). \n\nThe approach used in #34681 is to use a Launcher interceptor, along with a facade classloader. The new (in >=5.11) capability to use a `ClasspathScanner` might be a simplication. See https://github.com/junit-team/junit5/issues/3628 for some details. We'd want to implement `List<Class<?>> scanForClassesInClasspathRoot(URI root, ClassFilter classFilter)`.\n\nAlthough this would be a pleasing simplification, it doesn't help with the majority of the complexity involved in #34681; we still need to move the application creation code from where it is today, we still need to pre-create all of the applications needed by the tests, and we'd probably end up with something fairly similar in its implementation to the facade classloader, even if it doesn't actually implement the classloader interface. And we still need to fix all the things broken by moving the runtime classloader creation forward. So I think we should keep this enhancement in mind, but not block for it. \n\nTLDR: Implemening  `ClasspathScanner` rather than `Classloader` would be semantically cleaner, but functionally fairly similar to what we're planning to do #34681. \n\n/cc @dmlloyd @geoand \n",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/42245/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/42245/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
