{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33285",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33285/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33285/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33285/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/33285",
  "id": 1704598628,
  "node_id": "I_kwDOCFbutM5lmhxk",
  "number": 33285,
  "title": "Vertx race condition may not initialise OpenTelemetry",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1891982257,
      "node_id": "MDU6TGFiZWwxODkxOTgyMjU3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/container-image",
      "name": "area/container-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2236031412,
      "node_id": "MDU6TGFiZWwyMjM2MDMxNDEy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/tracing",
      "name": "area/tracing",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 5080736243,
      "node_id": "LA_kwDOCFbutM8AAAABLtXh8w",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/quarkus-3",
      "name": "triage/quarkus-3",
      "color": "BA41B2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/253",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/253",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/253/labels",
    "id": 9468628,
    "node_id": "MI_kwDOCFbutM4AkHrU",
    "number": 253,
    "title": "3.1.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 83,
    "state": "closed",
    "created_at": "2023-05-31T16:27:01Z",
    "updated_at": "2023-06-28T14:05:39Z",
    "due_on": null,
    "closed_at": "2023-06-07T11:17:31Z"
  },
  "comments": 13,
  "created_at": "2023-05-10T20:37:54Z",
  "updated_at": "2023-05-31T16:30:28Z",
  "closed_at": "2023-05-30T07:58:55Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI am migrating a project from 2.16.6 to 3.02, and seem to encounter a race condition when running the tests, roughly every second execution. Whether using maven or intellij, the execution of the tests will pause/stop (but not terminate) when the error occurs, before any of the tests are actually executed.\r\n\r\n### Expected behavior\r\n\r\nI would expect the normal execution of my tests. (Side note: probably 3 in 10 tests pass :cry: )\r\n\r\n### Actual behavior\r\n\r\nNone of the tests run. Ther runner seems to pause. The last output is the following stacktrace:\r\n\r\n```bash\r\n2023-05-10 22:16:31,741 DEBUG [io.net.uti.ResourceLeakDetectorFactory] (vert.x-eventloop-thread-1) Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4a98cd5b\r\n2023-05-10 22:16:31,769 ERROR [io.qua.ver.cor.run.VertxCoreRecorder] (vert.x-eventloop-thread-1) Uncaught exception received by Vert.x: java.lang.NullPointerException: Cannot invoke \"io.vertx.core.spi.tracing.VertxTracer.sendRequest(io.vertx.core.Context, io.vertx.core.spi.tracing.SpanKind, io.vertx.core.tracing.TracingPolicy, Object, String, java.util.function.BiConsumer, io.vertx.core.spi.tracing.TagExtractor)\" because \"this.delegate\" is null\r\n\tat io.quarkus.opentelemetry.runtime.tracing.intrumentation.vertx.OpenTelemetryVertxTracingFactory$Delegator.sendRequest(OpenTelemetryVertxTracingFactory.java:71)\r\n\tat io.vertx.core.http.impl.Http1xClientConnection.beginRequest(Http1xClientConnection.java:273)\r\n\tat io.vertx.core.http.impl.Http1xClientConnection.access$600(Http1xClientConnection.java:108)\r\n\tat io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.writeHead(Http1xClientConnection.java:556)\r\n\tat io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.writeHead(Http1xClientConnection.java:549)\r\n\tat io.vertx.core.http.impl.HttpClientRequestImpl.doWrite(HttpClientRequestImpl.java:501)\r\n\tat io.vertx.core.http.impl.HttpClientRequestImpl.write(HttpClientRequestImpl.java:471)\r\n\tat io.vertx.core.http.impl.HttpClientRequestImpl.end(HttpClientRequestImpl.java:417)\r\n\tat io.vertx.core.http.impl.HttpClientRequestImpl.end(HttpClientRequestImpl.java:411)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.lambda$handleCreateRequest$5(HttpContext.java:485)\r\n\tat io.vertx.core.impl.future.FutureImpl$1.onSuccess(FutureImpl.java:91)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.Promise.complete(Promise.java:66)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.handleSendRequest(HttpContext.java:559)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.execute(HttpContext.java:375)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.next(HttpContext.java:362)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.fire(HttpContext.java:329)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.sendRequest(HttpContext.java:232)\r\n\tat io.vertx.ext.web.client.impl.HttpContext.lambda$handleCreateRequest$6(HttpContext.java:491)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.http.impl.HttpClientImpl.lambda$null$5(HttpClientImpl.java:683)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.addListener(FutureImpl.java:196)\r\n\tat io.vertx.core.impl.future.PromiseImpl.addListener(PromiseImpl.java:23)\r\n\tat io.vertx.core.impl.future.FutureImpl.onComplete(FutureImpl.java:164)\r\n\tat io.vertx.core.impl.future.PromiseImpl.onComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.http.impl.Http1xClientConnection.createStream(Http1xClientConnection.java:1270)\r\n\tat io.vertx.core.http.impl.HttpClientImpl.lambda$doRequest$6(HttpClientImpl.java:666)\r\n\tat io.vertx.core.net.impl.pool.Endpoint.lambda$getConnection$0(Endpoint.java:52)\r\n\tat io.vertx.core.http.impl.SharedClientHttpStreamEndpoint$Request.handle(SharedClientHttpStreamEndpoint.java:162)\r\n\tat io.vertx.core.http.impl.SharedClientHttpStreamEndpoint$Request.handle(SharedClientHttpStreamEndpoint.java:123)\r\n\tat io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)\r\n\tat io.vertx.core.impl.ContextBase.emit(ContextBase.java:239)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl.emit(SimpleConnectionPool.java:704)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2.run(SimpleConnectionPool.java:338)\r\n\tat io.vertx.core.net.impl.pool.CombinerExecutor.submit(CombinerExecutor.java:56)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool.execute(SimpleConnectionPool.java:245)\r\n\tat io.vertx.core.net.impl.pool.SimpleConnectionPool.lambda$connect$2(SimpleConnectionPool.java:257)\r\n\tat io.vertx.core.http.impl.SharedClientHttpStreamEndpoint.lambda$connect$2(SharedClientHttpStreamEndpoint.java:102)\r\n\tat io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.addListener(FutureImpl.java:196)\r\n\tat io.vertx.core.impl.future.PromiseImpl.addListener(PromiseImpl.java:23)\r\n\tat io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)\r\n\tat io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)\r\n\tat io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)\r\n\tat io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)\r\n\tat io.vertx.core.Promise.complete(Promise.java:66)\r\n\tat io.vertx.core.net.impl.NetClientImpl.lambda$connected$9(NetClientImpl.java:330)\r\n\tat io.vertx.core.net.impl.VertxHandler.setConnection(VertxHandler.java:82)\r\n\tat io.vertx.core.net.impl.VertxHandler.handlerAdded(VertxHandler.java:88)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.callHandlerAdded(AbstractChannelHandlerContext.java:1114)\r\n\tat io.netty.channel.DefaultChannelPipeline.callHandlerAdded0(DefaultChannelPipeline.java:609)\r\n\tat io.netty.channel.DefaultChannelPipeline.addLast(DefaultChannelPipeline.java:223)\r\n\tat io.netty.channel.DefaultChannelPipeline.addLast(DefaultChannelPipeline.java:195)\r\n\tat io.vertx.core.net.impl.NetClientImpl.connected(NetClientImpl.java:332)\r\n\tat io.vertx.core.net.impl.NetClientImpl.lambda$connectInternal2$3(NetClientImpl.java:294)\r\n\tat io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:264)\r\n\tat io.vertx.core.net.impl.ChannelProvider.connected(ChannelProvider.java:172)\r\n\tat io.vertx.core.net.impl.ChannelProvider.lambda$handleConnect$0(ChannelProvider.java:155)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)\r\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)\r\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)\r\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)\r\n\tat io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)\r\n\tat io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:300)\r\n\tat io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:335)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n```\r\n\r\n### How to Reproduce?\r\n\r\nRun the tests in the reproducer (within IntelliJ?): https://github.com/Adelrisk/quarkus-reproducer-33285\r\n\r\nEither the first or second execution should be sufficient.\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nLinux ffs 6.1.0-8-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.25-1 (2023-04-22) x86_64 GNU/Linux\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"18.0.2-ea\" 2022-07-19\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n3.0.2\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.6 (84538c9988a25aec085021c365c560670ad80f63)\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/33285/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/33285/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
