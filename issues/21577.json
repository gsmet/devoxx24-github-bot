{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21577",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21577/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21577/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21577/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21577",
  "id": 1058720210,
  "node_id": "I_kwDOCFbutM4_GsnS",
  "number": 21577,
  "title": "Getting lots of \"Unable to determine matching fields for injection of test instance\" messages",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/160",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/160",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/160/labels",
    "id": 7427013,
    "node_id": "MI_kwDOCFbutM4AcVPF",
    "number": 160,
    "title": "2.5.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 110,
    "state": "closed",
    "created_at": "2021-11-24T15:28:10Z",
    "updated_at": "2021-12-02T11:14:37Z",
    "due_on": null,
    "closed_at": "2021-12-01T12:26:44Z"
  },
  "comments": 2,
  "created_at": "2021-11-19T16:40:59Z",
  "updated_at": "2021-11-24T15:37:11Z",
  "closed_at": "2021-11-22T13:39:02Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nThis isn't specific to using Wiremock, but more generically if you are building a `QuarkusTestResourceLifecycleManager` while also overriding the `inject` method. In my example I am using wiremock and created a custom `@InjectWireMock` annotation.\r\n\r\n```java\r\n@Target({ METHOD, CONSTRUCTOR, FIELD })\r\n@Retention(RUNTIME)\r\n@Documented\r\npublic @interface InjectWireMock {\r\n}\r\n```\r\n\r\nMy `QuarkusTestResourceLifecycleManager` class looks like this:\r\n\r\n```java\r\npublic class HeroesVillainsWiremockServer implements QuarkusTestResourceLifecycleManager {\r\n\tprivate final WireMockServer wireMockServer = new WireMockServer(wireMockConfig().dynamicPort());\r\n\r\n\t@Override\r\n\tpublic Map<String, String> start() {\r\n\t\tthis.wireMockServer.start();\r\n\r\n\t\treturn Map.of(\r\n\t\t\t\"quarkus.rest-client.hero-client.url\", this.wireMockServer.baseUrl(),\r\n\t\t\t\"fight.villain.client-base-url\", this.wireMockServer.baseUrl()\r\n\t\t);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void stop() {\r\n\t\tthis.wireMockServer.stop();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void inject(TestInjector testInjector) {\r\n\t\ttestInjector.injectIntoFields(\r\n\t\t\tthis.wireMockServer,\r\n\t\t\tnew AnnotatedAndMatchesType(InjectWireMock.class, WireMockServer.class)\r\n\t\t);\r\n\t}\r\n}\r\n```\r\n\r\nI have some tests which do `@QuarkusTestResource(HeroesVillainsWiremockServer.class)`. Those tests also have\r\n\r\n```java\r\n@InjectWireMock\r\nWireMockServer server;\r\n```\r\n\r\nand then do something with the server during the tests.\r\n\r\nThere are also other tests which do not interact with the server at all and therefore do not inject the server as a field in the test class. In those cases, the log output from the test contains lots and lots of `Unable to determine matching fields for injection of test instance` messages.\r\n\r\nI can add the field to my test class (even though it is never used) and the messages go away.\r\n\r\n### Expected behavior\r\n\r\nI don't expect to see that log message in tests where I am not using the test resource.\r\n\r\n### Actual behavior\r\n\r\nLots & lots of `Unable to determine matching fields for injection of test instance` messages\r\n\r\n### How to Reproduce?\r\n\r\nReproducer:\r\n[matching-fields-for-injection.zip](https://github.com/quarkusio/quarkus/files/7571613/matching-fields-for-injection.zip)\r\n\r\nWhen you run `./mvnw clean verify`, you'll see that the message is printed out once for each test method in `ExampleResourceTest`. \r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n`Darwin edeandre-mac 21.1.0 Darwin Kernel Version 21.1.0: Wed Oct 13 17:33:23 PDT 2021; root:xnu-8019.41.5~1/RELEASE_X86_64 x86_64`\r\n\r\n### Output of `java -version`\r\n\r\n```\r\nopenjdk version \"11.0.2\" 2019-01-15\r\nOpenJDK Runtime Environment 18.9 (build 11.0.2+9)\r\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)\r\n```\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n```\r\nopenjdk version \"11.0.12\" 2021-07-20\r\nOpenJDK Runtime Environment GraalVM CE 21.2.0 (build 11.0.12+6-jvmci-21.2-b08)\r\nOpenJDK 64-Bit Server VM GraalVM CE 21.2.0 (build 11.0.12+6-jvmci-21.2-b08, mixed mode, sharing)\r\n```\r\n\r\n### Quarkus version or git rev\r\n\r\n`2.4.2.Final`\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n```\r\nApache Maven 3.8.1 (05c21c65bdfed0f71a2f2ada8b84da59348c4c5d)\r\nMaven home: /Users/edeandre/.m2/wrapper/dists/apache-maven-3.8.1-bin/2l5mhf2pq2clrde7f7qp1rdt5m/apache-maven-3.8.1\r\nJava version: 11.0.2, vendor: Oracle Corporation, runtime: /Users/edeandre/.sdkman/candidates/java/11.0.2-open\r\nDefault locale: en_US, platform encoding: UTF-8\r\nOS name: \"mac os x\", version: \"10.16\", arch: \"x86_64\", family: \"mac\"\r\n```",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21577/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21577/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
