{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22205",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22205/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22205/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22205/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/22205",
  "id": 1079946154,
  "node_id": "I_kwDOCFbutM5AXquq",
  "number": 22205,
  "title": "RESTEasy Reactive: multipart form improvement",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/206",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/206",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/206/labels",
    "id": 8420367,
    "node_id": "MI_kwDOCFbutM4AgHwP",
    "number": 206,
    "title": "2.14.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 224,
    "state": "closed",
    "created_at": "2022-09-14T06:18:10Z",
    "updated_at": "2023-05-15T13:54:56Z",
    "due_on": null,
    "closed_at": "2022-10-26T12:52:36Z"
  },
  "comments": 39,
  "created_at": "2021-12-14T16:11:07Z",
  "updated_at": "2022-10-21T14:24:34Z",
  "closed_at": "2022-10-21T14:24:29Z",
  "active_lock_reason": null,
  "body": "### Description\n\nATM, we only support `@RestForm File` when they're in a class along with `@Consumes(MediaType.MULTIPART_FORM_DATA)` to trigger the special handling, forcing me to write code like this:\r\n\r\n```java\r\n@Path(\"albums\")\r\npublic class Albums extends MyController {\r\n\t\r\n    public static class MyForm {\r\n        @RestForm @Length(max = Util.VARCHAR_SIZE) String title;\r\n        @RestForm String photoUrl;\r\n        @RestForm boolean removePhoto;\r\n        @RestForm File photo;\r\n    }\r\n\r\n    @POST\r\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\r\n    @Authenticated\r\n\tpublic void edit(@RestPath long id,\r\n\t        MyForm myForm, @RestForm Date releaseDate){\r\n...\r\n\t}\r\n}\r\n```\r\n\r\nInitially I had this:\r\n\r\n```java\r\n@Path(\"albums\")\r\npublic class Albums extends MyController {\r\n\r\n    @POST\r\n    @Authenticated\r\n\tpublic void edit(@RestPath long id,\r\n        @RestForm @Length(max = Util.VARCHAR_SIZE) String title,\r\n        @RestForm String photoUrl,\r\n        @RestForm boolean removePhoto,\r\n        @RestForm File photo,\r\n        @RestForm Date releaseDate){\r\n...\r\n\t}\r\n}\r\n```\r\n\r\nBut it did not work. Apparently `@FormParam File` can only happen in a wrapper class, but while it's fine that there's an option to do this, I'd very much like to be able to do the same on parameters.\r\n\r\nAlso, the docs at https://quarkus.io/guides/resteasy-reactive#handling-multipart-form-data tell me I can write:\r\n\r\n```java\r\n    @POST\r\n    @Produces(MediaType.APPLICATION_JSON)\r\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\r\n    @Path(\"form\")\r\n    public String form(@MultipartForm FormData formData) {\r\n        // return something\r\n    }\r\n```\r\n\r\nAnd that:\r\n\r\n    The use of `@MultipartForm` is actually unnecessary as RESTEasy Reactive can infer this information from the use of `@Consumes(MediaType.MULTIPART_FORM_DATA)`\r\n\r\nBut I don't even see why we require `@Consumes(MediaType.MULTIPART_FORM_DATA)` to trigger form loading. We don't need such a marker for regular url-encoded forms, do we? IMO we can infer that we're going to have to do form loading at build time by just finding `@RestForm` or `@MultipartForm` parameters.\r\n\r\nOnce we know it's a form, we can check the content-type at runtime to turn on url-encoded or multipart unserialising, no?\r\n\r\nBTW `@MultipartForm` is actually only required because of JAX-RS treating unannotated params as the body, but I think we could go and scan the damn type and if there are `@RestForm` fields in there not treat it as a body but infer `@MultipartForm` behaviour.\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/22205/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/22205/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
