{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28116",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28116/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28116/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28116/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/28116",
  "id": 1380523496,
  "node_id": "I_kwDOCFbutM5SSR3o",
  "number": 28116,
  "title": "VertxInputStream 10 s delay with parallel requests",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/209",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/209",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/209/labels",
    "id": 8483139,
    "node_id": "MI_kwDOCFbutM4AgXFD",
    "number": 209,
    "title": "2.13.1.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 116,
    "state": "closed",
    "created_at": "2022-09-30T16:08:55Z",
    "updated_at": "2023-01-13T11:09:46Z",
    "due_on": null,
    "closed_at": "2022-10-05T12:39:54Z"
  },
  "comments": 3,
  "created_at": "2022-09-21T08:20:32Z",
  "updated_at": "2022-09-30T16:36:38Z",
  "closed_at": "2022-09-27T10:12:54Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI have setup reseteasy reactive POST endpoint. When sending a lot of parallel requests with a client that reuses the connection, a delay of 10 seconds sometimes can occur in VertxInputStream. The bug seems to be the following:\r\nAssume we have two parallel requests A and B. connection is shared between A and B.\r\n1. A and B both sets waiting = true and ends up in connection.wait() (VertxInputStream ~row 245)\r\n2. A.endHandler is called (VertxInputStream ~row 188)\r\n3. A.waiting == true so connection.notify() is called\r\n4. Now, it is arbitray who will continue, assume B continues to run. This sets B.waiting = false (VertxInputStream ~row 249)\r\n5. B.endHandler is called (VertxInputStream ~row 188)\r\n6. B.waiting == false so connection.notify() is not called\r\n7. The conneciton.wait() for A will not get notified and will timeout after rem (~10) seconds\r\n\r\nThe code below shows the code from the sequence above.\r\n```java\r\nrequest.endHandler(new Handler<Void>() {\r\n    @Override\r\n    public void handle(Void event) {\r\n        synchronized (connection) {\r\n            eof = true;\r\n            if (waiting) {\r\n                connection.notify();\r\n            }\r\n        }\r\n    }\r\n});\r\n...\r\nprotected ByteBuf readBlocking() throws IOException {\r\n    synchronized (request.connection()) {\r\n        ...\r\n        try {\r\n            ...\r\n            waiting = true;\r\n            request.connection().wait(rem);\r\n        } catch (InterruptedException e) {\r\n            throw new InterruptedIOException(e.getMessage());\r\n        } finally {\r\n            waiting = false;\r\n        }\r\n    }\r\n...\r\n}\r\n```\r\nIt works fine when not sharing the connection.\r\n\r\n### Expected behavior\r\n\r\nThe expected behaviour is that VertxInputStream should not delay the requests like this.\r\n\r\n### Actual behavior\r\n\r\nSometimes requests (that reads data with VertxInputStream) gets delayed by 10 seconds.\r\n\r\n### How to Reproduce?\r\n\r\n[src.zip](https://github.com/quarkusio/quarkus/files/9614315/src.zip)\r\nThe attached code shows the problem isolated. Also, the code from the description shows the core of the problem.\r\n\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n17.0.1\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.12.2\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n7.4\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28116/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28116/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
