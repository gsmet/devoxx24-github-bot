{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21196",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21196/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21196/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21196/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21196",
  "id": 1044799981,
  "node_id": "I_kwDOCFbutM4-RmHt",
  "number": 21196,
  "title": "Allow user defined DevServices in Dev mode",
  "labels": [
    {
      "id": 985346621,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjE=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/duplicate",
      "name": "triage/duplicate",
      "color": "cfd3d7",
      "default": false,
      "description": "This issue or pull request already exists"
    },
    {
      "id": 1273039603,
      "node_id": "MDU6TGFiZWwxMjczMDM5NjAz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/devmode",
      "name": "area/devmode",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2955097667,
      "node_id": "MDU6TGFiZWwyOTU1MDk3NjY3",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/devservices",
      "name": "area/devservices",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2021-11-04T14:06:13Z",
  "updated_at": "2022-01-14T16:09:58Z",
  "closed_at": "2022-01-14T16:09:21Z",
  "active_lock_reason": null,
  "body": "### Description\n\nCurrently, there are a predefined set of DevServices available in Quarkus like Databases, Kafka, Keycloak, etc. The list of DevServices is listed in the official documentation https://quarkus.io/guides/dev-services . What makes DevServices powerful is that it allows developers to start the project without being worried about dependencies like databases, Kafka, Keycloak, etc. So a developer can easily execute `./mvnw compile quarkus:dev` and the magic happens, hurray!\r\n\r\nAlthough the predefined set of DevServices helps a lot, it is not enough since there is an unlimited number of dependencies an application might depend on; for instance, if an application depends on Elasticseach then the developer will need to start that dependency by himself since it is not provided by Quarkus. Like Elasticseach there are different dependencies and Quarkus can not create a DevService for each dependency that exists out there.\r\n\r\nCurrently, if there is a dependency not provided by DevServices then it is possible to create a class implementing the interface `QuarkusTestResourceLifecycleManager` and using TestContainers to start a new container with all the configurations we want to have. Here is an example of how a developer can have its own dependency started:\r\n\r\n```java\r\npublic class ElasticsearchServer implements QuarkusTestResourceLifecycleManager {\r\n\r\n    private GenericContainer<?> elasticsearch;\r\n\r\n    @Override\r\n    public Map<String, String> start() {\r\n        elasticsearch = new GenericContainer<>(\"docker.elastic.co/elasticsearch/elasticsearch:\" + System.getProperty(\"elasticsearch.version\", \"7.10.2\"))\r\n                .withExposedPorts(9200, 9300)\r\n                .withEnv(\"discovery.type\", \"single-node\")\r\n                .waitingFor(\r\n                        new HttpWaitStrategy()\r\n                                .forPort(9200)\r\n                                .forStatusCodeMatching(response -> response == HTTP_OK || response == HTTP_UNAUTHORIZED)\r\n                                .withStartupTimeout(Duration.ofMinutes(2))\r\n                );\r\n\r\n        elasticsearch.start();\r\n\r\n        String host = elasticsearch.getHost();\r\n        Integer port = elasticsearch.getMappedPort(9200);\r\n\r\n        return new HashMap<>() {{\r\n            put(\"quarkus.hibernate-search-orm.elasticsearch.hosts\", host + \":\" + port);\r\n            put(\"quarkus.hibernate-search-orm.elasticsearch.version\", \"7\");\r\n        }};\r\n    }\r\n\r\n    @Override\r\n    public void stop() {\r\n        elasticsearch.stop();\r\n    }\r\n}\r\n```\r\n\r\n# If we have already QuarkusTestResourceLifecycleManager then what is the problem?\r\nThe big problem is that `QuarkusTestResourceLifecycleManager` only works while executing tests but it doesn't help developers to start the app with a single command `./mvnw compile quarkus:dev`. What I mean, is that the TEST experience is covered by `QuarkusTestResourceLifecycleManager` but the `./mvnw compile quarkus:dev` is not.\r\n\r\nIt is just an idea: would it be possible to somehow do something so developers can define custom dependencies (using TestsContainers) that will later be used in Dev and also in Test?\r\n\n\n### Implementation ideas\n\nProbably a stupid idea:\r\nCould we move classes that inherit `QuarkusTestResourceLifecycleManager` to the `src/main/java` folder and execute those classess also when developers execute `./mvnw compile quarkus:dev`? Of course, when we build the application all classes that inherit `QuarkusTestResourceLifecycleManager` must be omitted since they are not really part of the app but just helpers.\r\n\r\nPlease let me know if this is a crazy idea that should be thrown to the garbage or we might do something about it in the future depending on the priorities. I do believe the Developer's experience would be enhanced if such a thing is possible to do.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21196/reactions",
    "total_count": 7,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 7,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21196/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
