{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23728",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23728/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23728/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23728/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23728",
  "id": 1138815384,
  "node_id": "I_kwDOCFbutM5D4PGY",
  "number": 23728,
  "title": "Connection URI syntax for reactive oracle client",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 985346625,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjU=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/invalid",
      "name": "triage/invalid",
      "color": "e4e669",
      "default": false,
      "description": "This doesn't seem right"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 3,
  "created_at": "2022-02-15T15:06:24Z",
  "updated_at": "2022-02-28T10:28:35Z",
  "closed_at": "2022-02-15T15:17:15Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI am receiving a \"Wrong syntax of connection URI\" whenever I try to specify a reactive URL for the new reactive Oracle client. I have tried to refer this documentation: [Reactive SQL Clients](https://quarkus.io/guides/reactive-sql-clients) and it mentions a similar URI scheme of this: **postgresql://localhost:5432/quarkus_test** but no mention of a URI scheme for Oracle. When looking at the OracleConnectionUriParser.java class in Quarkus I see that the pattern is described as follows:\r\n\r\n`private static final Pattern FULL_URI_PATTERN = Pattern.compile(\"^\"\r\n    + SCHEME_DESIGNATOR_REGEX\r\n    + USER_INFO_REGEX\r\n    + NET_LOCATION_REGEX\r\n    + PORT_REGEX\r\n    + SID\r\n    + \"$\");`\r\n\r\nI have tried to follow a similar scheme as Postgres but to no avail. Can I get the URI connection pattern that is expected from the new Oracle client? I was under the impression that by following the logic of the aforementioned class I could create the connection URI as follows (but can't): **oracle:thin://HOST:PORT/SID**\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23728/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23728/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
