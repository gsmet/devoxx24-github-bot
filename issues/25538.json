{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25538",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25538/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25538/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25538/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25538",
  "id": 1234040611,
  "node_id": "I_kwDOCFbutM5Jjfcj",
  "number": 25538,
  "title": "UnresolvedElementException in simple lambda function",
  "labels": [
    {
      "id": 1326073020,
      "node_id": "MDU6TGFiZWwxMzI2MDczMDIw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/amazon-lambda",
      "name": "area/amazon-lambda",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2022-05-12T14:06:38Z",
  "updated_at": "2022-05-12T14:08:23Z",
  "closed_at": "2022-05-12T14:08:23Z",
  "active_lock_reason": null,
  "body": "### Discussed in https://github.com/quarkusio/quarkus/discussions/25497\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **ElBlokko** May 11, 2022</sup>\r\nHello, I've created my next native lambda function and for some reason I get error\r\n`Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved field during parsing: com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_WITH_CONTEXT_TIME_ZONE.`\r\n \r\nMy pom.xml looks like this: \r\n\r\n```\r\n<artifactId>manager-processor</artifactId>\r\n    <version>1.0.17-SNAPSHOT</version>\r\n        <dependencyManagement>\r\n        <dependencies>\r\n            <dependency>\r\n                <groupId>${quarkus.platform.group-id}</groupId>\r\n                <artifactId>${quarkus.platform.artifact-id}</artifactId>\r\n                <version>${quarkus.platform.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>io.quarkiverse.amazonservices</groupId>\r\n                <artifactId>quarkus-amazon-services-bom</artifactId>\r\n                <version>${quarkus-amazon-services.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n    \r\n    \r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-resteasy</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-amazon-lambda-rest</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.jboss.logmanager</groupId>\r\n            <artifactId>log4j2-jboss-logmanager</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-logging-json</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-hibernate-validator</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.quarkus</groupId>\r\n            <artifactId>quarkus-resteasy-jackson</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>io.quarkus</groupId>\r\n                <artifactId>quarkus-maven-plugin</artifactId>\r\n                <version>${quarkus-plugin.version}</version>\r\n                <executions>\r\n                    <execution>\r\n                        <goals>\r\n                            <goal>build</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n            <plugin>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>${compiler-plugin.version}</version>\r\n            </plugin>\r\n            <plugin>\r\n                <artifactId>maven-surefire-plugin</artifactId>\r\n                <version>${surefire-plugin.version}</version>\r\n                <configuration>\r\n                    <systemPropertyVariables>\r\n                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\r\n                        <maven.home>${maven.home}</maven.home>\r\n                    </systemPropertyVariables>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n    <profiles>\r\n        <profile>\r\n            <id>native</id>\r\n            <activation>\r\n                <property>\r\n                    <name>native</name>\r\n                </property>\r\n            </activation>\r\n            <properties>\r\n                <quarkus.package.type>native</quarkus.package.type>\r\n            </properties>\r\n            <build>\r\n                <plugins>\r\n                    <plugin>\r\n                        <artifactId>maven-failsafe-plugin</artifactId>\r\n                        <version>${surefire-plugin.version}</version>\r\n                        <executions>\r\n                            <execution>\r\n                                <goals>\r\n                                    <goal>integration-test</goal>\r\n                                    <goal>verify</goal>\r\n                                </goals>\r\n                                <configuration>\r\n                                    <systemPropertyVariables>\r\n                                        <native.image.path>\r\n                                            ${project.build.directory}/${project.build.finalName}-runner\r\n                                        </native.image.path>\r\n                                        <java.util.logging.manager>org.jboss.logmanager.LogManager\r\n                                        </java.util.logging.manager>\r\n                                        <maven.home>${maven.home}</maven.home>\r\n                                    </systemPropertyVariables>\r\n                                </configuration>\r\n                            </execution>\r\n                        </executions>\r\n                    </plugin>\r\n                </plugins>\r\n            </build>\r\n        </profile>\r\n    </profiles>\r\n</project>\r\n```\r\n\r\nand lambda handler:\r\n\r\n```\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.model.SnsNotification;\r\nimport io.smallrye.mutiny.Uni;\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\n\r\nimport javax.enterprise.context.ApplicationScoped;\r\nimport javax.ws.rs.Consumes;\r\nimport javax.ws.rs.HeaderParam;\r\nimport javax.ws.rs.POST;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.core.MediaType;\r\nimport javax.ws.rs.core.Response;\r\n\r\n@ApplicationScoped\r\n@Path(\"\")\r\npublic class ProcessorResource {\r\n\r\n    private static final Logger LOGGER = LogManager.getLogger(ProcessorResource.class);\r\n\r\n    private static final String NOTIFICATION_TYPE = \"Notification\";\r\n\r\n    private final ObjectMapper objectMapper = new ObjectMapper();\r\n\r\n    @POST\r\n    @Consumes({MediaType.TEXT_PLAIN})\r\n    public Uni<Response> notificationEndpoint(@HeaderParam(\"x-amz-sns-message-type\") String messageType, String message)\r\n            throws JsonProcessingException {\r\n        if (messageType == null) {\r\n            return Uni.createFrom().item(Response.status(400).build());\r\n        }\r\n\r\n        if (messageType.equals(NOTIFICATION_TYPE)) {\r\n            return Uni.createFrom().item(objectMapper.readValue(message, SnsNotification.class))\r\n                      .onItem().invoke(snsNotification -> LOGGER.info(snsNotification.toString()))\r\n                      .onItem().transform(quark -> Response.ok().build());\r\n        }\r\n        return null;\r\n    }\r\n}\r\n```\r\n```\r\nDetailed message:\r\n\r\nCaused by: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Unsupported features in 2 methods\r\nDetailed message:\r\nError: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved field during parsing: com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_WITH_CONTEXT_TIME_ZONE. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing field is then reported at run time when it is accessed the first time.\r\nTrace:\r\n        at parsing com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase.formatValue(InstantSerializerBase.java:145)\r\nCall path from entry point to com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase.formatValue(Temporal, SerializerProvider):\r\n        at com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase.formatValue(InstantSerializerBase.java:140)\r\n        at com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase.serialize(InstantSerializerBase.java:105)\r\n        at com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase.serialize(InstantSerializerBase.java:45)\r\n        at com.fasterxml.jackson.datatype.jdk8.StreamSerializer.lambda$serialize$0(StreamSerializer.java:76)\r\n        at com.fasterxml.jackson.datatype.jdk8.StreamSerializer$$Lambda$1244/0x00000007c1b69040.accept(Unknown Source)\r\n        at java.util.stream.SpinedBuffer.forEach(SpinedBuffer.java:246)\r\n        at java.util.stream.SpinedBuffer.toString(SpinedBuffer.java:269)\r\n        at java.lang.String.valueOf(String.java:2951)\r\n        at java.lang.StringBuilder.append(StringBuilder.java:172)\r\n        at java.net.Proxy.<init>(Proxy.java:95)\r\n        at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS_Nonvirtual_Proxy_constructor_4c292c8081165fc77e6ffffc00ffc9c7f9d770eb(generated:0)\r\n```\r\n\r\ncommand I use: quarkus build --native -Dquarkus.native.container-build=true</div>",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25538/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25538/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
