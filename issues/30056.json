{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30056",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30056/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30056/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30056/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30056",
  "id": 1509275207,
  "node_id": "I_kwDOCFbutM5Z9bZH",
  "number": 30056,
  "title": "2.15.1-Final breaks AWS S3 file upload",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 2550509852,
      "node_id": "MDU6TGFiZWwyNTUwNTA5ODUy",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/amazon-services",
      "name": "area/amazon-services",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2022-12-23T12:06:56Z",
  "updated_at": "2022-12-23T14:59:13Z",
  "closed_at": "2022-12-23T14:42:20Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI just upgraded from 2.15.0-Final to 2.15.1-Final and I'm facing an issue with the AWS S3 connector.\r\n\r\nWhen I try to upload a file on a S3 bucket, I get the following error :\r\n\r\n```\r\nsoftware.amazon.awssdk.services.s3.model.NoSuchBucketException: The specified bucket does not exist (Service: S3, Status Code: 404, Request ID: 7a62c49f-347e-4fc4-9331-6e8eEXAMPLE, Extended Request ID: MzRISOwyjmnupC6EB399EB057D6167/JypPGXLh0OVFGcJaaO3KW/hRAqKOpIEEp)\r\n\tat software.amazon.awssdk.protocols.xml.internal.unmarshall.AwsXmlPredicatedResponseHandler.handleErrorResponse(AwsXmlPredicatedResponseHandler.java:156)\r\n\tat software.amazon.awssdk.protocols.xml.internal.unmarshall.AwsXmlPredicatedResponseHandler.handleResponse(AwsXmlPredicatedResponseHandler.java:108)\r\n\tat software.amazon.awssdk.protocols.xml.internal.unmarshall.AwsXmlPredicatedResponseHandler.handle(AwsXmlPredicatedResponseHandler.java:85)\r\n\tat software.amazon.awssdk.protocols.xml.internal.unmarshall.AwsXmlPredicatedResponseHandler.handle(AwsXmlPredicatedResponseHandler.java:43)\r\n\tat software.amazon.awssdk.core.internal.handler.BaseClientHandler.lambda$successTransformationResponseHandler$7(BaseClientHandler.java:266)\r\n\tat software.amazon.awssdk.core.internal.http.async.AsyncResponseHandler.lambda$prepare$0(AsyncResponseHandler.java:89)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)\r\n\tat java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)\r\n\tat software.amazon.awssdk.core.internal.http.async.AsyncResponseHandler$BaosSubscriber.onComplete(AsyncResponseHandler.java:132)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.ResponseHandler$DataCountingPublisher$1.onComplete(ResponseHandler.java:513)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.ResponseHandler.runAndLogError(ResponseHandler.java:250)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.ResponseHandler.access$600(ResponseHandler.java:75)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.ResponseHandler$PublisherAdapter$1.onComplete(ResponseHandler.java:371)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.complete(HandlerPublisher.java:447)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.handlerRemoved(HandlerPublisher.java:435)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:1122)\r\n\tat io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)\r\n\tat io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)\r\n\tat io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.nrs.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:370)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.nrs.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:232)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.nrs.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:203)\r\n\tat software.amazon.awssdk.http.nio.netty.internal.nrs.HttpStreamsClientHandler.channelRead(HttpStreamsClientHandler.java:173)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:280)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelReultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t... 1 more\r\n```\r\n\r\nThe bucket exists and the bucket variable is injected in the service correctly. If I stop my Quarkus app, set the version to 2.15.0-Final and try again it works fine.\r\n\r\nI have no clue for now why this happens, I saw nothing in the 2.15.1 release notes that seems to cause this.\r\nNote: on localhost we're using localstack and not \"real\" buckets on the cloud.\r\n\r\nWe use the asynchronous S3 client (version from bom) :\r\n\r\n```xml\r\n<dependency>\r\n    <groupId>io.quarkiverse.amazonservices</groupId>\r\n    <artifactId>quarkus-amazon-s3</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>software.amazon.awssdk</groupId>\r\n    <artifactId>netty-nio-client</artifactId>\r\n</dependency>\r\n```\r\n\r\nOur upload code (simplified) :\r\n\r\n```java\r\n@ApplicationScoped\r\npublic class FileService {\r\n\r\n    @ConfigProperty(name = \"myproject.aws.bucket\")\r\n    protected String bucketName;\r\n\r\n    @Inject\r\n    protected S3AsyncClient s3Client;\r\n\r\n    public Uni<Void> upload(\r\n        final String id,\r\n        final String filename,\r\n        final InputStream file,\r\n        final Map<String, String> additionnalMetadata) throws IOException {\r\n\r\n        // FIXME: toByteArray load all bytes into memory\r\n        byte[] bytes = IOUtils.toByteArray(file);\r\n        byte[] md5 = DigestUtils.md5(bytes);\r\n        var md5base64 = new String(Base64.getEncoder().encode(md5), StandardCharsets.UTF_8);\r\n\r\n        var metadata = new HashMap<String, String>();\r\n        metadata.put(\"filename\", filename);\r\n        Optional.ofNullable(additionnalMetadata).ifPresent(metadata::putAll);\r\n\r\n        var requestBuilder = PutObjectRequest.builder()\r\n            .bucket(bucketName)\r\n            .key(getKey(id))\r\n            .contentType(FileUtils.getMimeType(bytes))\r\n            .metadata(metadata)\r\n            .contentMD5(md5base64);\r\n\r\n        return Uni.createFrom()\r\n            .completionStage(s3Client.putObject(requestBuilder.build(), AsyncRequestBody.fromBytes(bytes)))\r\n            .replaceWithVoid();\r\n    }\r\n\r\n    protected String getKey(final String id) {\r\n        return \"foo/bar/\" + id;\r\n    }\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nFile is uploaded without errors\r\n\r\n### Actual behavior\r\n\r\nFile upload fails with \"The specified bucket does not exist\". I'm 100% sure the bucket exists and it works perfectly with Quarkus 2.15.0-Final.\r\n\r\n### How to Reproduce?\r\n\r\n_Not that simple to reproduce in a small standalone project (we need localstack and stuff). I can work on it next week if necessary._\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\nopenjdk version \"17.0.5\" 2022-10-18 OpenJDK Runtime Environment (build 17.0.5+8-Ubuntu-2ubuntu120.04) OpenJDK 64-Bit Server VM (build 17.0.5+8-Ubuntu-2ubuntu120.04, mixed mode, sharing)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.15.1-Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.8.6 (84538c9988a25aec085021c365c560670ad80f63) Maven home: /home/junior/.m2/wrapper/dists/apache-maven-3.8.6-bin/1ks0nkde5v1pk9vtc31i9d0lcd/apache-maven-3.8.6 Java version: 17.0.5, vendor: Private Build, runtime: /usr/lib/jvm/java-17-openjdk-amd64 Default locale: en_US, platform encoding: UTF-8 OS name: \"linux\", version: \"5.4.0-135-generic\", arch: \"amd64\", family: \"unix\"\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30056/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30056/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
