{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25632",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25632/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25632/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25632/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/25632",
  "id": 1239117519,
  "node_id": "I_kwDOCFbutM5J227P",
  "number": 25632,
  "title": "JWT token with HS256 and corresponding JWK file : UnresolvableKeyException",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282139374,
      "node_id": "MDU6TGFiZWwxMjgyMTM5Mzc0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/security",
      "name": "area/security",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/183",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/183",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/183/labels",
    "id": 7917759,
    "node_id": "MI_kwDOCFbutM4AeNC_",
    "number": 183,
    "title": "2.10.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 253,
    "state": "closed",
    "created_at": "2022-04-27T08:14:38Z",
    "updated_at": "2023-01-13T10:46:24Z",
    "due_on": null,
    "closed_at": "2022-06-09T16:06:42Z"
  },
  "comments": 10,
  "created_at": "2022-05-17T20:21:13Z",
  "updated_at": "2024-07-13T19:04:43Z",
  "closed_at": "2022-05-18T14:05:18Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nMy quarkus backend receives requests with JWT Token with some information.\r\nI tried with quarkus-smallrye-jwt, and it worked for RS256 algorithm. I created a token with jwt.io and sent it with my request in my test, it has been correctly decoded.\r\n\r\nTo verify I simply used :\r\n`@Inject\r\n    JsonWebToken jwt;\r\n  ...\r\n  @GET\r\n    public Response get() {\r\n        System.out.println(hasJwt());\r\n        System.out.println(jwt.getClaimNames());\r\n`\r\n\r\nI tried with pem file and jwk file then in smallrye.jwt.verify.key.location, and it was OK.\r\nThen we moved to HS256 algorithm because of our needs, I created corresponding jwk file and token but this time it has not been working...\n\n### Expected behavior\n\nI want to be able to simply use HS256 algorithm for encoding/decoding JWT Tokens with quarkus-smallrye-jwt\n\n### Actual behavior\n\nI created JWKS file for HS256 algorithm with this format :\r\n`{\r\n    \"keys\": [\r\n        {\r\n            \"kty\":\"oct\",\r\n            \"k\":\"uWlwBLGv4EpifZ52EhTuU9L-76AF9Vf4yumSD1P-2uE\",\r\n            \"alg\":\"HS256\"\r\n        }\r\n    ]\r\n}`\r\n\r\nI encoded a JWT token with HS256 and same secret, and sent it to quarkus back but I got this error :\r\n\r\n2022-05-17 21:15:09,295 DEBUG [io.qua.sma.jwt.run.aut.MpJwtValidator] (executor-thread-0) Authentication failed: io.smallrye.jwt.auth.principal.ParseException: SRJWT07000: Failed to verify a token\r\n\tat io.smallrye.jwt.auth.principal.DefaultJWTTokenParser.parseClaims(DefaultJWTTokenParser.java:161)\r\n\tat io.smallrye.jwt.auth.principal.DefaultJWTTokenParser.parse(DefaultJWTTokenParser.java:56)\r\n\tat io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory.parse(DefaultJWTCallerPrincipalFactory.java:31)\r\n\tat io.smallrye.jwt.auth.principal.DefaultJWTParser.parse(DefaultJWTParser.java:64)\r\n\tat io.smallrye.jwt.auth.principal.DefaultJWTParser_ClientProxy.parse(Unknown Source)\r\n        ...\r\nCaused by: org.jose4j.lang.UnresolvableKeyException: SRJWT07004: Failed to load a key from the key content while resolving\r\n\tat io.smallrye.jwt.auth.principal.AbstractKeyLocationResolver.reportUnresolvableKeyException(AbstractKeyLocationResolver.java:187)\r\n\tat io.smallrye.jwt.auth.principal.KeyLocationResolver.resolveKey(KeyLocationResolver.java:66)\r\n\tat org.jose4j.jwt.consumer.JwtConsumer.processContext(JwtConsumer.java:213)\r\n\tat org.jose4j.jwt.consumer.JwtConsumer.process(JwtConsumer.java:426)\r\n\tat io.smallrye.jwt.auth.principal.DefaultJWTTokenParser.parseClaims(DefaultJWTTokenParser.java:143)\r\n\t... 74 more\r\n\n\n### How to Reproduce?\n\nAdd quarkus-smallrye-jwt dependency, create JWK file for HS256 algorithm, add it to smallrye.jwt.verify.key.location. Encode JWT token with same secret, with jwt.io for example, and add it in \"Authorization\" header of request for quarkus backend\n\n### Output of `uname -a` or `ver`\n\nDarwin 21.4.0 Darwin Kernel Version 21.4.0: Fri Mar 18 00:45:05 PDT 2022; root:xnu-8020.101.4~15/RELEASE_X86_64 x86_64\n\n### Output of `java -version`\n\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 14.0.2+12, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.8.1.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/25632/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/25632/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
