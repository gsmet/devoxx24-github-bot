{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36205",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36205/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36205/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36205/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/36205",
  "id": 1917894424,
  "node_id": "I_kwDOCFbutM5yUL8Y",
  "number": 36205,
  "title": "@RestClient injecttion is not working in service class",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2023-09-28T16:34:09Z",
  "updated_at": "2023-09-28T20:19:58Z",
  "closed_at": "2023-09-28T20:19:55Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI am creating a simple application to fetch data via REST Client.\r\n\r\n`import jakarta.ws.rs.GET;\r\nimport jakarta.ws.rs.Path;\r\nimport jakarta.ws.rs.Produces;\r\nimport jakarta.ws.rs.core.MediaType;\r\nimport org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\r\n\r\n@Path(\"/api\")\r\n@RegisterRestClient(configKey=\"bored-api\")\r\npublic interface BoredService {\r\n\r\n    @GET\r\n    @Path(\"/activity\")\r\n    @Produces(MediaType.APPLICATION_JSON)\r\n    BoredActivity getBoredActivity();\r\n}`\r\n\r\nThis one I am trying to inject in my service class\r\n\r\n`import jakarta.inject.Inject;\r\nimport org.eclipse.microprofile.rest.client.inject.RestClient;\r\n\r\npublic class TestService {\r\n\r\n    @Inject\r\n    @RestClient\r\n    BoredService boredService;\r\n\r\n    public BoredActivity getBoredActivity() {\r\n        return boredService.getBoredActivity();\r\n    }\r\n}`\r\n\r\nAnd this service class I want to use in my application endpoint\r\n\r\n`import jakarta.ws.rs.GET;\r\nimport jakarta.ws.rs.Path;\r\nimport jakarta.ws.rs.Produces;\r\nimport jakarta.ws.rs.core.MediaType;\r\n\r\n@Path(\"/test\")\r\npublic class TestRestClient {\r\n\r\n    @GET\r\n    @Produces(MediaType.APPLICATION_JSON)\r\n    public BoredActivity getBoredActivity() {\r\n        return new TestService().getBoredActivity();\r\n    }\r\n}`\r\n\r\nBut this throws NullPointerException where I am trying to use the Rest Client, at \r\n`return boredService.getBoredActivity();`\r\n\r\nBut if I inject the rest cleint in my TestRestClient class then it is working. Looks like the @RestClient works only with classes annotated with @Path.\r\n\r\nIs this the only way I can inject the rest client? Lets assume I do not want to initialize the client via QuarkusRestClientBuilder. \n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\n_No response_\n\n### Output of `uname -a` or `ver`\n\n_No response_\n\n### Output of `java -version`\n\n_No response_\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n_No response_\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36205/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36205/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
