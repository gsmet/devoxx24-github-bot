{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24426",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24426/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24426/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24426/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/24426",
  "id": 1174534386,
  "node_id": "I_kwDOCFbutM5GAfjy",
  "number": 24426,
  "title": "quarkus-rest-client-reactive does not URL encode some @QueryParam values",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 3748075115,
      "node_id": "LA_kwDOCFbutM7fZxZr",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/blocking-resteasy-reactive-move",
      "name": "triage/blocking-resteasy-reactive-move",
      "color": "f9d0c4",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/171",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/171",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/171/labels",
    "id": 7587967,
    "node_id": "MI_kwDOCFbutM4Ac8h_",
    "number": 171,
    "title": "2.8.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 371,
    "state": "closed",
    "created_at": "2022-01-19T09:05:12Z",
    "updated_at": "2023-02-21T15:11:02Z",
    "due_on": null,
    "closed_at": "2022-03-23T12:37:30Z"
  },
  "comments": 6,
  "created_at": "2022-03-20T12:40:08Z",
  "updated_at": "2022-03-21T16:49:57Z",
  "closed_at": "2022-03-21T08:42:15Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nWhen the value of a query parameter contains a pattern `{ ... anything ...}` or `%<hex-digit><hex-digit>` that part of the value is left untouched and not URL encoded. This can then result in wrong invocations of REST service or in exceptions such as this:\r\n```\r\njavax.ws.rs.core.UriBuilderException: failed to create URI\r\n\tat org.jboss.resteasy.reactive.common.jaxrs.UriBuilderImpl.buildFromValues(UriBuilderImpl.java:736)\r\n\tat org.jboss.resteasy.reactive.common.jaxrs.UriBuilderImpl.build(UriBuilderImpl.java:724)\r\n\tat org.jboss.resteasy.reactive.client.impl.WebTargetImpl.createQuarkusRestInvocationBuilder(WebTargetImpl.java:310)\r\n\tat org.jboss.resteasy.reactive.client.impl.WebTargetImpl.request(WebTargetImpl.java:281)\r\n\tat org.acme.MyRemoteService$$QuarkusRestClientInterface.getExtensionsById(Unknown Source)\r\n\tat org.acme.MyRemoteService$$CDIWrapper.getExtensionsById(Unknown Source)\r\n...\r\nCaused by: java.net.URISyntaxException: Illegal character in query at index 48: https://stage.code.quarkus.io/api/extensions?id={foo&bar}\r\n\tat java.base/java.net.URI$Parser.fail(URI.java:2974)\r\n\tat java.base/java.net.URI$Parser.checkChars(URI.java:3145)\r\n\tat java.base/java.net.URI$Parser.parseHierarchical(URI.java:3233)\r\n\tat java.base/java.net.URI$Parser.parse(URI.java:3175)\r\n\tat java.base/java.net.URI.<init>(URI.java:623)\r\n\tat org.jboss.resteasy.reactive.common.jaxrs.UriBuilderImpl.buildFromValues(UriBuilderImpl.java:731)\r\n\t... 78 more\r\n```\r\n\r\nThe culprit is the class `org.jboss.resteasy.reactive.client.impl.WebTargetImpl` which uses its embedded `uriBuilder` in the wrong way. When adding query parameters to it, it uses method: `javax.ws.rs.core.UriBuilder#queryParam`:\r\n\r\n```\r\nqueryParam:895, UriBuilderImpl (org.jboss.resteasy.reactive.common.jaxrs)\r\nqueryParam:229, WebTargetImpl (org.jboss.resteasy.reactive.client.impl)\r\nqueryParam:21, WebTargetImpl (org.jboss.resteasy.reactive.client.impl)\r\ngetExtensionsById:-1, MyRemoteService$$QuarkusRestClientInterface (org.acme)\r\ngetExtensionsById:-1, MyRemoteService$$CDIWrapper (org.acme)\r\n...\r\n```\r\n\r\nBut there is another method on the implementation class of the UriBuilder, the `org.jboss.resteasy.reactive.common.jaxrs.UriBuilderImpl#clientQueryParam` (not part of UriBuilder interface unfortunately) which should be more appropriate for the client and states the following:\r\n\r\n> Called by ClientRequest.getUri() to add a query parameter for @QueryParam parameters. We do not use UriBuilder.queryParam() because\r\n> queryParam() supports URI template processing and this method must always encode braces (for parameter substitution is not possible for @QueryParam parameters).\r\n> queryParam() supports \"contextual URI encoding\" (i.e., it does not encode % characters that are followed by two hex characters). The JavaDoc for @QueryParam.value() explicitly states that the value is specified in decoded format and that \"any percent encoded literals within the value will not be decoded and will instead be treated as literal text\". This means that it is an explicit bug to perform contextual URI encoding of this method's name parameter; hence, we must always encode said parameter. This method also foregoes contextual URI encoding on this method's values parameter because it represents arbitrary data passed to a QueryParam parameter of a client proxy (since the client proxy is nothing more than a transport layer, it should not be \"interpreting\" such data; instead, it should faithfully transmit this data over the wire).\r\n> \r\n\n\n### Expected behavior\n\nPassing any string as @QueryParam should be possible as URL encoding should be used.\n\n### Actual behavior\n\nWhen the value of a query parameter contains a pattern `{ ... anything ...}` or `%<hex-digit><hex-digit>` that part of the value is left untouched and not URL encoded.\n\n### How to Reproduce?\n\n```java\r\npackage org.acme;\r\n\r\nimport org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\r\n\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.QueryParam;\r\nimport java.util.List;\r\nimport java.util.Set;\r\n\r\n@RegisterRestClient(baseUri = \"https://stage.code.quarkus.io/api\")\r\npublic interface MyRemoteService {\r\n\r\n    @GET\r\n    @Path(\"/extensions\")\r\n    Set<Extension> getExtensionsById(@QueryParam(\"id\") String id);\r\n\r\n    class Extension {\r\n        public String id;\r\n        public String name;\r\n        public String shortName;\r\n        public List<String> keywords;\r\n    }\r\n}\r\n```\r\n\r\ntest:\r\n\r\n```\r\npackage org.acme;\r\n\r\nimport io.quarkus.test.junit.QuarkusTest;\r\nimport org.eclipse.microprofile.rest.client.inject.RestClient;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport javax.inject.Inject;\r\n\r\n@QuarkusTest\r\npublic class MyRemoteServiceTest {\r\n\r\n    @Inject\r\n    @RestClient\r\n    MyRemoteService myRemoteService;\r\n\r\n    @Test\r\n    public void testExtensionsRestClientEndpoint() throws Exception {\r\n        myRemoteService.getExtensionsById(\"{foo&bar}\");\r\n    }\r\n}\r\n```\r\n\n\n### Output of `uname -a` or `ver`\n\nLinux sun 5.14.18-100.fc33.x86_64 #1 SMP Fri Nov 12 17:38:44 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"17.0.1\" 2021-10-19 OpenJDK Runtime Environment 21.9 (build 17.0.1+12) OpenJDK 64-Bit Server VM 21.9 (build 17.0.1+12, mixed mode, sharing)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.7.5.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.4 (9b656c72d54e5bacbed989b64718c159fe39b537) Maven home: /home/peter/JavaApps/apache-maven-3 Java version: 17.0.1, vendor: Red Hat, Inc., runtime: /usr/lib/jvm/java-17-openjdk-17.0.1.0.12-2.rolling.fc33.x86_64 Default locale: en_US, platform encoding: UTF-8 OS name: \"linux\", version: \"5.14.18-100.fc33.x86_64\", arch: \"amd64\", family: \"unix\"\n\n### Additional information\n\nNot that `quarkus-rest-client` does not have this problem.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/24426/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/24426/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
