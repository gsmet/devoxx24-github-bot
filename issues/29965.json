{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29965",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29965/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29965/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29965/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29965",
  "id": 1503601392,
  "node_id": "I_kwDOCFbutM5ZnyLw",
  "number": 29965,
  "title": "Bean Validation bug in Quarkus 3.0.0.Alpha2 but not in 3.0.0.Alpha1",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1305687763,
      "node_id": "MDU6TGFiZWwxMzA1Njg3NzYz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/hibernate-validator",
      "name": "area/hibernate-validator",
      "color": "0366d6",
      "default": false,
      "description": "Hibernate Validator"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/225",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/225",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/225/labels",
    "id": 8816584,
    "node_id": "MI_kwDOCFbutM4AhofI",
    "number": 225,
    "title": "2.15.2.Final",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 23,
    "state": "closed",
    "created_at": "2023-01-03T14:21:16Z",
    "updated_at": "2023-05-15T13:58:07Z",
    "due_on": null,
    "closed_at": "2023-01-04T14:12:19Z"
  },
  "comments": 5,
  "created_at": "2022-12-19T21:07:05Z",
  "updated_at": "2023-01-03T14:22:16Z",
  "closed_at": "2022-12-22T20:34:33Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nThere is a strange behaviour in Quarkus 3.0.0.Alpha2 when using Bean Validation `ValidatorFactory` and injecting `Validator` in the same test, which succeeds using 3.0.0.Alpha1. \r\n\r\nI have a CD object with some constraints:\r\n\r\n```java\r\nimport jakarta.validation.constraints.*;\r\n\r\npublic class CD {\r\n\r\n  @NotNull @Size(min = 4, max = 50)\r\n  public String title;\r\n  @NotNull @Positive\r\n  public Float price;\r\n  @Max(value = 5)\r\n  public Integer numberOfCDs;\r\n```\r\n\r\nAnd I have two tests that succeed if run separately, but fail if run together.\r\nThe first test builds a `ValidatorFactory` to validate the CD object (and closes the factory at the end of the test).\r\nAnd the second test injects a `Validator` to validate the CD object.\r\nWhen run together, the second test fails (`assertEquals(1, violations.size());` fails).\r\n\r\nIf both tests use the injected `validator` it succeeds.\r\nIf both tests use the `ValidatorFactory` it fails.\r\n\r\nAnd no matter which combination of tests you use, the tests always succeed with `3.0.0.Alpha1`.\r\n\r\n```java\r\n@QuarkusTest\r\npublic class CDTest {\r\n\r\n  @Inject\r\n  Validator validator;\r\n\r\n  @Test\r\n  void shouldRaiseNoConstraintViolationWithDefault() {\r\n    ValidatorFactory factory = Validation.buildDefaultValidatorFactory();\r\n    Validator validator = factory.getValidator();\r\n\r\n    CD cd = new CD().title(\"Kind of Blue\").price(12.5f);\r\n\r\n    Set<ConstraintViolation<CD>> violations = validator.validate(cd);\r\n    assertEquals(0, violations.size());\r\n\r\n    factory.close();\r\n  }\r\n\r\n  @Test\r\n  void shouldRaiseConstraintViolationValidatingNumberOfCDsProperty() {\r\n\r\n    CD cd = new CD().numberOfCDs(7);\r\n\r\n    Set<ConstraintViolation<CD>> violations = validator.validateProperty(cd, \"numberOfCDs\");\r\n\r\n    assertEquals(1, violations.size());\r\n    ConstraintViolation<CD> violation = violations.iterator().next();\r\n\r\n    assertEquals(\"must be less than or equal to 5\", violation.getMessage());\r\n    assertEquals(7, violation.getInvalidValue());\r\n    assertEquals(\"{jakarta.validation.constraints.Max.message}\", violation.getMessageTemplate());\r\n  }\r\n}\r\n```\n\n### Expected behavior\n\n_No response_\n\n### Actual behavior\n\n_No response_\n\n### How to Reproduce?\n\nI have created a reproducer : https://github.com/agoncal/agoncal-bug-quarkus-bv\n\n### Output of `uname -a` or `ver`\n\nDarwin Antonios-MacBook-Air.local 22.1.0 Darwin Kernel Version 22.1.0: Sun Oct  9 20:15:52 PDT 2022; root:xnu-8792.41.9~2/RELEASE_ARM64_T8112 arm64\n\n### Output of `java -version`\n\nopenjdk version \"17.0.5\" 2022-10-18 OpenJDK Runtime Environment Temurin-17.0.5+8 (build 17.0.5+8) OpenJDK 64-Bit Server VM Temurin-17.0.5+8 (build 17.0.5+8, mixed mode)\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n3.0.0.Alpha2\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nApache Maven 3.8.6\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29965/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29965/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
