{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30985",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30985/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30985/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30985/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/30985",
  "id": 1575712463,
  "node_id": "I_kwDOCFbutM5d63bP",
  "number": 30985,
  "title": "Native builds randomly failing with started thread error",
  "labels": [
    {
      "id": 1282129298,
      "node_id": "MDU6TGFiZWwxMjgyMTI5Mjk4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/out-of-date",
      "name": "triage/out-of-date",
      "color": "FFFFFF",
      "default": false,
      "description": "This issue/PR is no longer valid or relevant"
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 4,
  "created_at": "2023-02-08T08:43:02Z",
  "updated_at": "2023-04-24T12:55:16Z",
  "closed_at": "2023-04-24T12:52:58Z",
  "active_lock_reason": null,
  "body": "It doesn't happen very often but I've seen it twice in the last 2 months and it never happened before. So I wonder if we have a regression somewhere.\r\n\r\nLatest failing build: https://github.com/quarkusio/quarkus/pull/30962#issuecomment-1421655372\r\n\r\nError:\r\n```\r\nError: Detected a started Thread in the image heap. Threads running in the image generator are no longer running at image runtime.  To see how this object got instantiated use --trace-object-instantiation=java.lang.Thread. The object was probably created by a class initializer and is reachable from a static field. You can request class initialization at image runtime by using the option --initialize-at-run-time=<class-name>. Or you can write your own initialization methods and call them explicitly from your main entry point.\r\nDetailed message:\r\nTrace: Object was reached by\r\n  reading field org.wildfly.common.lock.SpinLock.owner of constant \r\n    org.wildfly.common.lock.SpinLock@6b04644f: org.wildfly.common.lock.SpinLock@6b04644f\r\n  reading field org.jboss.logmanager.LoggerNode.attachmentLock of constant \r\n    org.jboss.logmanager.LoggerNode@6eb4459e: org.jboss.logmanager.LoggerNode@6eb4459e\r\n  reading field org.jboss.logmanager.FastCopyHashMap$Entry.value of constant \r\n    org.jboss.logmanager.FastCopyHashMap$Entry@1eb97a90: org.jboss.logmanager.FastCopyHashMap$Entry@1eb97a90\r\n  indexing into array org.jboss.logmanager.FastCopyHashMap$Entry[]@332c82f3: [Lorg.jboss.logmanager.FastCopyHashMap$Entry;@332c82f3\r\n  reading field org.jboss.logmanager.FastCopyHashMap.table of constant \r\n    org.jboss.logmanager.FastCopyHashMap@1fe9ace7: {ConfigRecorder=org.jboss.logmanager.LoggerNode@6eb4459e}\r\n  reading field org.jboss.logmanager.CopyOnWriteMap.map of constant \r\n    org.jboss.logmanager.CopyOnWriteMap@78f11188: {ConfigRecorder=org.jboss.logmanager.LoggerNode@6eb4459e}\r\n  reading field org.jboss.logmanager.LoggerNode.children of constant \r\n    org.jboss.logmanager.LoggerNode@44b8f809: org.jboss.logmanager.LoggerNode@44b8f809\r\n  reading field org.jboss.logmanager.FastCopyHashMap$Entry.value of constant \r\n    org.jboss.logmanager.FastCopyHashMap$Entry@7e4d0b3f: org.jboss.logmanager.FastCopyHashMap$Entry@7e4d0b3f\r\n  indexing into array org.jboss.logmanager.FastCopyHashMap$Entry[]@57619c08: [Lorg.jboss.logmanager.FastCopyHashMap$Entry;@57619c08\r\n  reading field org.jboss.logmanager.FastCopyHashMap.table of constant \r\n    org.jboss.logmanager.FastCopyHashMap@1e326f77: {StartupContext=org.jboss.logmanager.LoggerNode@72e8d4a9, shutdown=org.jboss.log...\r\n  reading field org.jboss.logmanager.CopyOnWriteMap.map of constant \r\n    org.jboss.logmanager.CopyOnWriteMap@606f0eb3: {StartupContext=org.jboss.logmanager.LoggerNode@72e8d4a9, shutdown=org.jboss.log...\r\n  reading field org.jboss.logmanager.LoggerNode.children of constant \r\n    org.jboss.logmanager.LoggerNode@4c2fb6ff: org.jboss.logmanager.LoggerNode@4c2fb6ff\r\n  reading field org.jboss.logmanager.LoggerNode.parent of constant \r\n    org.jboss.logmanager.LoggerNode@5a15fd33: org.jboss.logmanager.LoggerNode@5a15fd33\r\n  reading field org.jboss.logmanager.LoggerNode.parent of constant \r\n    org.jboss.logmanager.LoggerNode@2b3047f3: org.jboss.logmanager.LoggerNode@2b3047f3\r\n  reading field org.jboss.logmanager.Logger.loggerNode of constant \r\n    org.jboss.logmanager.Logger@7e349cc3: Logger 'io.quarkus.runtime.shutdown.ShutdownRecorder' in context org.jboss.logma...\r\n  reading field org.jboss.logging.JBossLogManagerLogger.logger of constant \r\n    org.jboss.logging.JBossLogManagerLogger@3a385d81: org.jboss.logging.JBossLogManagerLogger@3a385d81\r\n  scanning root org.jboss.logging.JBossLogManagerLogger@3a385d81: org.jboss.logging.JBossLogManagerLogger@3a385d81 embedded in \r\n    io.quarkus.runtime.shutdown.ShutdownRecorder.runShutdown(ShutdownRecorder.java:36)\r\n```\r\n\r\n@zakkak do you have an idea of what could be going on?",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/30985/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/30985/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
