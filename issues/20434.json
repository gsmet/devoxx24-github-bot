{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20434",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20434/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20434/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20434/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20434",
  "id": 1010137296,
  "node_id": "I_kwDOCFbutM48NXjQ",
  "number": 20434,
  "title": "GraphQL Panache (similar to REST Data Panache)",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1273026134,
      "node_id": "MDU6TGFiZWwxMjczMDI2MTM0",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/panache",
      "name": "area/panache",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1283619446,
      "node_id": "MDU6TGFiZWwxMjgzNjE5NDQ2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/smallrye",
      "name": "area/smallrye",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 2234509819,
      "node_id": "MDU6TGFiZWwyMjM0NTA5ODE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/graphql",
      "name": "area/graphql",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 2,
  "created_at": "2021-09-28T19:42:33Z",
  "updated_at": "2021-09-29T14:34:52Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\n\nMany languages/frameworks have tools which can introspect your DB or data models and autogenerate a GraphQL schema and resolvers from them.\r\n\r\nIE, given tables like `product`, `order`, `product_image`, you would be able to make queries (or insert/delete data) like below:\r\n\r\n```graphql\r\nquery ProductsPage {\r\n  product(limit: 12, where: {\r\n    id: {\r\n      _in: [1, 2, 3]\r\n    },\r\n    description: {\r\n      _ilike: \"%game%\"\r\n    },\r\n    price: {\r\n      _gte: 10.50,\r\n      _lte: 20.00,\r\n    },\r\n    _or: [\r\n      category: { _eq: \"Test\" },\r\n      brand: { _eq: \"Foo\" },\r\n    ]\r\n  }) {\r\n    id\r\n    name\r\n    description\r\n    images {\r\n     url\r\n     alt_text\r\n    }\r\n    orders {\r\n      review\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nWriting these CRUD resolvers is tedious and generally just boilerplate -- it's an identical implementation for every single model. This is both timeconsuming, and prone to error (or developers writing poorly performing code).\r\n\r\nInstead, using something like this:\r\n- https://github.com/introproventures/graphql-jpa-query\r\n- https://github.com/introproventures/graphql-jpa-query/blob/master/graphql-jpa-query-schema/src/main/java/com/introproventures/graphql/jpa/query/schema/impl/JpaPredicateBuilder.java\r\n- https://github.com/introproventures/graphql-jpa-query/blob/master/graphql-jpa-query-schema/src/main/java/com/introproventures/graphql/jpa/query/schema/impl/GraphQLJpaSchemaBuilder.java\r\n\r\nDevelopers could focus on only writing custom business logic, while the Panache would auto-generate the:\r\n\r\n```graphql\r\nquery <Type> {}\r\nquery <Type>ByPk {}\r\n\r\nmutation Insert<Type> {}\r\nmutation Update<Type> {}\r\nmutation Upsert<Type> {}\r\nmutation Delete<Type> {} # Handles delete many\r\n```\n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20434/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20434/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
