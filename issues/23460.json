{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23460",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23460/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23460/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23460/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23460",
  "id": 1125029201,
  "node_id": "I_kwDOCFbutM5DDpVR",
  "number": 23460,
  "title": "Test framework agnostic test utils",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1287515315,
      "node_id": "MDU6TGFiZWwxMjg3NTE1MzE1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/kotlin",
      "name": "area/kotlin",
      "color": "0366d6",
      "default": false,
      "description": ""
    },
    {
      "id": 1375177076,
      "node_id": "MDU6TGFiZWwxMzc1MTc3MDc2",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/testing",
      "name": "area/testing",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 9,
  "created_at": "2022-02-05T20:55:57Z",
  "updated_at": "2022-02-07T07:22:10Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\n\nQuarkus currently has an excellent unit test support via the JUnit test extensions, but these are not possible (or at least difficult) to adapt to other test frameworks, such as the Kotlin based [kotest](https://kotest.io/).\r\n\r\nWhat would be great is if the test extension was abstracted so instead of relying on JUnit specific interfaces such as InvocationInterceptor, it relied only on lifecycle interfaces defined by Quarkus.  \n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23460/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23460/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
