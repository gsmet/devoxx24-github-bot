{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36872",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36872/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36872/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36872/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/36872",
  "id": 1977511484,
  "node_id": "I_kwDOCFbutM513m48",
  "number": 36872,
  "title": "Server exception mapper method of the Rest-Interface implementation class is not registered for resource defined in the interface.",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2552031458,
      "node_id": "MDU6TGFiZWwyNTUyMDMxNDU4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest",
      "name": "area/rest",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/280",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/280",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/280/labels",
    "id": 10034258,
    "node_id": "MI_kwDOCFbutM4AmRxS",
    "number": 280,
    "title": "3.6.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 185,
    "state": "closed",
    "created_at": "2023-10-11T07:34:36Z",
    "updated_at": "2024-01-14T09:44:21Z",
    "due_on": null,
    "closed_at": "2023-11-15T12:08:43Z"
  },
  "comments": 0,
  "created_at": "2023-11-04T21:07:30Z",
  "updated_at": "2023-11-07T10:34:38Z",
  "closed_at": "2023-11-07T10:34:34Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nHi, I am not sure if this is a bug or a feature.\r\n\r\nServer exception mapper method of the Rest-Interface implementation class is not registered for resource defined in the interface.\r\n\r\nMotivation: \r\nWe generate server endpoints for our Rest-Interfaces from openapi.yaml files. Generator generates interfaces, and we need to write only the implementation classes. We do have multiple versions (v1, v2, ...) of rest interface (multiple openapi.yaml files) in one application. We would like to have a custom server exception mapper for each version, which will create a valid response to the corresponding version.\r\n\r\nExample project: https://github.com/onecx/onecx-tenant-svc/blob/main/src/main/java/org/onecx/tenant/rs/internal/controllers/TenantControllerInternal.java\r\n\r\nCurrent, but not the best, workaround:\r\nTo activate the server exception mapper for the implementation class, we need to copy `@Path` annotation from the interface to our implementation class.\r\n\r\n\n\n### Expected behavior\n\nServer exception mapper method in implementation class of Rest-Interface should be registered only for resource defined in interface.\n\n### Actual behavior\n\nServer exception mapper method of the Rest-Interface implementation class is not registered for a resource defined in the interface, or it is registered as a global server exception mapper.\n\n### How to Reproduce?\n\nI create a simple example project: https://github.com/andrejpetras/quarkus-ex-mapper\r\n\r\n* start application `mvn clean compile quarkus:dev`\r\n* shell exec `curl http://localhost:8080/v1?error=1` output `ServerExceptionMapperV1: Custom error V1`\r\n * shell exec `curl http://localhost:8080/v2?error=1` output `ServerExceptionMapperV1: Custom error V2` excepted: `ServerExceptionMapperV2: Custom error V2`\r\n\r\nIn both cases, the same server exception mapper is used as a global server exception mapper.\r\n\r\n```java\r\n@Path(\"/v2\")\r\n@Consumes(MediaType.APPLICATION_JSON)\r\n@Produces(MediaType.APPLICATION_JSON)\r\npublic interface PingRestApiV2 {\r\n    @GET\r\n    Response ping(@QueryParam(\"error\") Long error);\r\n}\r\n```\r\n\r\n```java\r\n@ApplicationScoped\r\npublic class PingRestControllerV2 implements PingRestApiV2 {\r\n\r\n    @Override\r\n    public Response ping(Long error) {\r\n        if (error == null) {\r\n            return Response.ok().build();\r\n        }\r\n        throw new RuntimeException(\"Custom error V2\");\r\n    }\r\n\r\n    @ServerExceptionMapper\r\n    public Response exception(Exception ex) {\r\n        Log.info(\"Error V2\");\r\n        return Response.serverError().entity(\"ServerExceptionMapperV2: \" + ex.getMessage()).build();\r\n    }\r\n}\r\n```\r\nMethod `exception` of the class PingRestControllerV2 will be ignored.\r\nMethod `exception` of the class PingRestControllerV1 will be registered as a global server exception mapper.\r\n\r\n\n\n### Output of `uname -a` or `ver`\n\nLinux andrej 6.2.0-36-generic #37~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Mon Oct  9 15:34:04 UTC 2 x86_64 x86_64 x86_64 GNU/Linux\n\n### Output of `java -version`\n\nopenjdk version \"17.0.5\" 2022-10-18 LTS OpenJDK Runtime Environment Zulu17.38+21-CA (build 17.0.5+8-LTS) OpenJDK 64-Bit Server VM Zulu17.38+21-CA (build 17.0.5+8-LTS, mixed mode, sharing)\n\n### Quarkus version or git rev\n\nmain\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\nJava version: 17.0.5, vendor: Azul Systems, Inc., runtime: /home/andrej/programs/java/zulu17.38.21-ca-jdk17.0.5-linux_x64 Default locale: en_US, platform encoding: UTF-8 OS name: \"linux\", version: \"6.2.0-36-generic\", arch: \"amd64\", family: \"unix\"\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/36872/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/36872/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
