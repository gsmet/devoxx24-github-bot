{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21385",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21385/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21385/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21385/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/21385",
  "id": 1051295019,
  "node_id": "I_kwDOCFbutM4-qX0r",
  "number": 21385,
  "title": "Use one vertx context for all @ConsumeEvent handlers from one bean",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 985346627,
      "node_id": "MDU6TGFiZWw5ODUzNDY2Mjc=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/wontfix",
      "name": "triage/wontfix",
      "color": "ffffff",
      "default": false,
      "description": "This will not be worked on"
    },
    {
      "id": 1320737519,
      "node_id": "MDU6TGFiZWwxMzIwNzM3NTE5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/vertx",
      "name": "area/vertx",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 1,
  "created_at": "2021-11-11T19:31:30Z",
  "updated_at": "2022-02-27T16:46:12Z",
  "closed_at": "2022-02-27T16:46:06Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nHi, quarkusers!\r\n\r\nDocs from vertx.io promises that all code from one verticles executed on the same event-loop, so no more worrying about synchronized and volatile fields.\r\n\r\nAnd same i expected from quarkus, but.\r\n\r\nIf i will create bean with more that one @ConsumeEvent handlers i get **not** thread-safe construction if handlers will change any common data as ones will be executed within different contexts.\r\n\r\nIt's little bit missleading. So i guess it can be more handy if all handlers from one bean will be created from one vertx context to change \"local\" fields with no synchronized. Isn't it?\r\n\r\nPiece of not thread-safe code for instance.\r\n\r\n```java\r\n@Startup\r\n@ApplicationScoped\r\npublic class ServerService extends AbstractVerticle {\r\n    static final Logger LOG = Logger.getLogger(ServerService.class);\r\n\r\n    final WebSocketClientTable clientTable;\r\n\r\n    ServerService() {\r\n        clientTable = new WebSocketClientTable();\r\n    }\r\n\r\n    @ConsumeEvent(value = WebSocketSessionOpenedEvent.TOPIC)\r\n    void handleWebSocketSessionOpenedEvent(final WebSocketSessionOpenedEvent event) {\r\n        Session session = event.getSession();\r\n        Address address = event.getAddress();\r\n        WebSocketClient webSocketClient = new WebSocketClient(session, address);\r\n        // PUT TO MAP\r\n        clientTable.put(webSocketClient);\r\n        vertx.eventBus().publish(ClientConnectedEvent.TOPIC,\r\n                new ClientConnectedEvent(address, webSocketClient.getId()));\r\n        LOG.infof(\"Client connected, clientId=%s, sessionId=%s\",\r\n                webSocketClient.getId(), session.getId());\r\n    }\r\n\r\n    @ConsumeEvent(value = WebSocketMessageReceivedEvent.TOPIC)\r\n    void handleWebSocketMessageReceivedEvent(final WebSocketMessageReceivedEvent event) {\r\n        Session session = event.getSession();\r\n        // READ MAP\r\n        if (clientTable.contain(session)) {\r\n            WebSocketClient client = clientTable.get(session);\r\n            Address address = event.getAddress();\r\n            String message = event.getMessage();\r\n            vertx.eventBus().publish(ServerReceivedMessageEvent.TOPIC,\r\n```\r\n\r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/21385/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/21385/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
