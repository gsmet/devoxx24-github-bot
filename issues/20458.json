{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20458",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20458/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20458/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20458/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20458",
  "id": 1011187856,
  "node_id": "I_kwDOCFbutM48RYCQ",
  "number": 20458,
  "title": "Exceptions ignored when writing repsonse with VertxBlockingOutput.java",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282147660,
      "node_id": "MDU6TGFiZWwxMjgyMTQ3NjYw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/resteasy-classic",
      "name": "area/resteasy-classic",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/150",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/150",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/150/labels",
    "id": 7178092,
    "node_id": "MI_kwDOCFbutM4AbYds",
    "number": 150,
    "title": "2.4.0.CR1",
    "description": "",
    "creator": {
      "login": "geoand",
      "id": 4374975,
      "node_id": "MDQ6VXNlcjQzNzQ5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4374975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geoand",
      "html_url": "https://github.com/geoand",
      "followers_url": "https://api.github.com/users/geoand/followers",
      "following_url": "https://api.github.com/users/geoand/following{/other_user}",
      "gists_url": "https://api.github.com/users/geoand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geoand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geoand/subscriptions",
      "organizations_url": "https://api.github.com/users/geoand/orgs",
      "repos_url": "https://api.github.com/users/geoand/repos",
      "events_url": "https://api.github.com/users/geoand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geoand/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 126,
    "state": "closed",
    "created_at": "2021-09-22T10:44:58Z",
    "updated_at": "2021-12-27T12:49:40Z",
    "due_on": "2021-10-11T07:00:00Z",
    "closed_at": "2021-10-15T08:11:06Z"
  },
  "comments": 2,
  "created_at": "2021-09-29T16:46:45Z",
  "updated_at": "2021-10-07T19:11:18Z",
  "closed_at": "2021-10-07T19:11:15Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nI am using StreamingOutput to send large response body to the client.  If the client closes the connection while the server is writing the server will not get any exception and the  data written by the server will vanish into the aether.\r\n\r\n- This happens in all versions after Quarkus 2.0.0.\r\n- This does not happen for HTTP/2.\r\n- This hapens when using the blocking call.\r\n\r\nI believe that I have tracked this down to the io.quarkus.resteasy.runtime.standalone.VertxBlockingOutput.java:82 (`request.response().write(createBuffer(data));`)\r\n\r\nThe whole method is:\r\n\r\n```\r\n@Override\r\n    public void write(ByteBuf data, boolean last) throws IOException {\r\n        if (last && data == null) {\r\n            request.response().end();\r\n            return;\r\n        }\r\n        try {\r\n            //do all this in the same lock\r\n            synchronized (request.connection()) {\r\n                try {\r\n                    awaitWriteable();\r\n                    if (last) {\r\n                        request.response().end(createBuffer(data));\r\n                    } else {\r\n                        request.response().write(createBuffer(data));\r\n                    }\r\n                } catch (Exception e) {\r\n                    if (data != null && data.refCnt() > 0) {\r\n                        data.release();\r\n                    }\r\n                    throw new IOException(\"Failed to write\", e);\r\n                }\r\n            }\r\n        } finally {\r\n            if (last) {\r\n                terminateResponse();\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nTo me it looks like after the Vert.x 4 update the exception handling is missing.  After the update to 4 the `request.response().write` does not throw an exception but returns a Vertx future that needs to be checked for success/failure/throwable.\n\n### Expected behavior\n\nWhen the client closes the connection while the server is writing the response we should get:\r\n\r\n`new IOException(\"Failed to write\", e)`\n\n### Actual behavior\n\nWhen the client closes the connection while the server is writing the response  we get no exception and the server just continues to write its output to the aether.\n\n### How to Reproduce?\n\nI don't have a code example but:\r\n1. Setup up server that returns large output as StreamingOutput (maybe infinite output).\r\n2. Connect with the client using HTTP/1.1 and call the method.\r\n3. Kill the client.\r\n4. Notice the server method will just continue to write to the StreamingOutput without getting the expected error.\n\n### Output of `uname -a` or `ver`\n\nDarwin RKV-MBP-Gisli.local 20.6.0 Darwin Kernel Version 20.6.0: Wed Jun 23 00:26:31 PDT 2021; root:xnu-7195.141.2~5/RELEASE_X86_64 x86_64\n\n### Output of `java -version`\n\nopenjdk version \"11.0.10\" 2021-01-19\n\n### GraalVM version (if different from Java)\n\n_No response_\n\n### Quarkus version or git rev\n\n2.2.3.Final\n\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\n\n_No response_\n\n### Additional information\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20458/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20458/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
