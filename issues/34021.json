{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34021",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34021/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34021/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34021/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/34021",
  "id": 1755140521,
  "node_id": "I_kwDOCFbutM5onVGp",
  "number": 34021,
  "title": "Allow extensions to be scoped to a particular launch mode",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    }
  ],
  "state": "open",
  "locked": false,
  "milestone": null,
  "comments": 5,
  "created_at": "2023-06-13T15:20:54Z",
  "updated_at": "2023-08-07T11:36:29Z",
  "closed_at": null,
  "active_lock_reason": null,
  "body": "### Description\n\nI've noticed that we don't have a clean way to add test-scoped extensions using `quarkus ext add`, so people have to edit the pom directly, which @maxandersen tells me is definitely not the preferred way. :)\r\n\r\nWe could do either of the following\r\n\r\n- Update quarkus ext add to add either a --test flag or a --scope=test option. The first one is shorter, but potentially confusing because it could mean something like a dry run flag.\r\n- Add a new metadata in quarkus-extension.yaml which defines a preferred scope (maybe preferred-scope: test) that defaults to compile. Then the `ext add` command can use this metadata to set the right scope.\r\n \r\nOf those two, the metadata has less opportunity for user error, and it lets us display the correct command on http://extensions.quarkus.io.\r\n\r\nI noticed this for the pact extension, but some other extensions would also benefit from this, such as `quarkus-jacoco` and `quarkus-junit5-mockito` and `quarkus-junit5-component`. \r\n\r\n@aloubyansky says \r\n\r\n\"We could consider configuring quarkus launch modes instead: prod, test, dev and then map that to the corresponding maven and Gradle classpath. Otherwise we may need to configure the target classpath/scope for each build system in the extension metadata. I can imagine there will be more requests for dev mode only dependencies if we go with launch modes, which would be easy in case of Gradle.\"\r\n\r\nThe dev mode case is a bit complex, so I will start with test scope, since there's a clean mapping between launch mode and maven/gradle scope. \n\n### Implementation ideas\n\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/34021/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/34021/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
