{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20397",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20397/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20397/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20397/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20397",
  "id": 1007429443,
  "node_id": "I_kwDOCFbutM48DCdD",
  "number": 20397,
  "title": "unable to deserialize GregorianCalendar",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1282129298,
      "node_id": "MDU6TGFiZWwxMjgyMTI5Mjk4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/triage/out-of-date",
      "name": "triage/out-of-date",
      "color": "FFFFFF",
      "default": false,
      "description": "This issue/PR is no longer valid or relevant"
    },
    {
      "id": 2497075451,
      "node_id": "MDU6TGFiZWwyNDk3MDc1NDUx",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/native-image",
      "name": "area/native-image",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 22,
  "created_at": "2021-09-26T15:54:21Z",
  "updated_at": "2022-10-14T09:07:57Z",
  "closed_at": "2022-10-13T11:17:06Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nAn attempt to deserialize a `GregorionCalendar` will lead to a `Caused by: java.io.StreamCorruptedException: invalid type code: 00`\r\n\r\n### Expected behavior\r\n\r\nserialization should be supported for `GregorianCalendar`.\r\n\r\n### Actual behavior\r\n\r\n```\r\n2021-09-26 15:45:36,799 ERROR [io.qua.ver.htt.run.QuarkusErrorHandler] (executor-thread-0) HTTP Request to /hello/ser failed, error id: 7f645550-6c23-487a-9e7f-ea7baf2ea212-1: org.jboss.resteasy.spi.UnhandledException: java.io.StreamCorruptedException: invalid type code: 00\r\n        at org.jboss.resteasy.core.ExceptionHandler.handleApplicationException(ExceptionHandler.java:106)\r\n        at org.jboss.resteasy.core.ExceptionHandler.handleException(ExceptionHandler.java:372)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.writeException(SynchronousDispatcher.java:218)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:519)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.lambda$invoke$4(SynchronousDispatcher.java:261)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.lambda$preprocess$0(SynchronousDispatcher.java:161)\r\n        at org.jboss.resteasy.core.interception.jaxrs.PreMatchContainerRequestContext.filter(PreMatchContainerRequestContext.java:364)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.preprocess(SynchronousDispatcher.java:164)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:247)\r\n        at io.quarkus.resteasy.runtime.standalone.RequestDispatcher.service(RequestDispatcher.java:73)\r\n        at io.quarkus.resteasy.runtime.standalone.VertxRequestHandler.dispatch(VertxRequestHandler.java:135)\r\n        at io.quarkus.resteasy.runtime.standalone.VertxRequestHandler$1.run(VertxRequestHandler.java:90)\r\n        at io.quarkus.vertx.core.runtime.VertxCoreRecorder$13.runWith(VertxCoreRecorder.java:543)\r\n        at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2449)\r\n        at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1478)\r\n        at org.jboss.threads.DelegatingRunnable.run(DelegatingRunnable.java:29)\r\n        at org.jboss.threads.ThreadLocalResettingRunnable.run(ThreadLocalResettingRunnable.java:29)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.lang.Thread.run(Thread.java:829)\r\n        at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:567)\r\n        at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:192)\r\nCaused by: java.io.StreamCorruptedException: invalid type code: 00\r\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1710)\r\n        at java.io.ObjectInputStream.readArray(ObjectInputStream.java:2077)\r\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1667)\r\n        at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2464)\r\n        at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:629)\r\n        at java.util.Calendar.readObject(Calendar.java:3587)\r\n        at java.lang.reflect.Method.invoke(Method.java:566)\r\n        at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1175)\r\n        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2325)\r\n        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2196)\r\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1679)\r\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:493)\r\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:451)\r\n        at org.acme.getting.started.GreetingResource.serdeser(GreetingResource.java:48)\r\n        at org.acme.getting.started.GreetingResource.serstring(GreetingResource.java:31)\r\n        at java.lang.reflect.Method.invoke(Method.java:566)\r\n        at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:170)\r\n        at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:130)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.internalInvokeOnTarget(ResourceMethodInvoker.java:660)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.invokeOnTargetAfterFilter(ResourceMethodInvoker.java:524)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.lambda$invokeOnTarget$2(ResourceMethodInvoker.java:474)\r\n        at org.jboss.resteasy.core.interception.jaxrs.PreMatchContainerRequestContext.filter(PreMatchContainerRequestContext.java:364)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.invokeOnTarget(ResourceMethodInvoker.java:476)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:434)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:408)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:69)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:492)\r\n        ... 17 more\r\n```\r\n\r\n### How to Reproduce?\r\n\r\ncreate a sample application.\r\n\r\nAdd the following endpoint:\r\n\r\n```java\r\n    @GET\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    @Path(\"/ser\")\r\n    public String ser() throws IOException, ClassNotFoundException {\r\n        GregorianCalendar calendar = new GregorianCalendar();\r\n        calendar.setTimeInMillis(new Date().toInstant().toEpochMilli());\r\n        return \"calendar:\" + serdeser(calendar);\r\n    }\r\n\r\n    private String serdeser(Object obj) throws IOException, ClassNotFoundException {\r\n        byte[] bytes = null;\r\n\r\n        try (\r\n                ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n                ObjectOutputStream oos = new ObjectOutputStream(baos)) {\r\n\r\n            oos.writeObject(obj);\r\n            oos.flush();\r\n            bytes = baos.toByteArray();\r\n        }\r\n\r\n        try (ByteArrayInputStream bais = new ByteArrayInputStream(bytes);\r\n                ObjectInputStream ois = new ObjectInputStream(bais)) {\r\n            return \"\" + ois.readObject();\r\n        }\r\n    }\r\n```\r\n\r\nAdd the following `serialization-config.json` in `src/main/resources`:\r\n\r\n```\r\n[\r\n  {\r\n    \"name\": \"sun.util.calendar.ZoneInfo\"\r\n  }\r\n]\r\n```\r\n\r\nAdd the following directive:\r\n\r\n```\r\n<quarkus.native.additional-build-args>-H:SerializationConfigurationResources=serialization-config.json</quarkus.native.additional-build-args>\r\n```\r\n\r\nAdd the following class:\r\n\r\n```\r\n@RegisterForReflection(serialization = true, targets = { ArrayList.class, String.class,\r\n        Calendar.class, GregorianCalendar.class, TimeZone.class, SimpleTimeZone.class\r\n})\r\npublic class ReflectionConfig {\r\n}\r\n```\r\n\r\nStart a new native build.\r\n\r\nLaunch the application.\r\n\r\nInvoke `curl http://localhost:8082/hello/ser`\r\n\r\nThe exception is printed in the server console.\r\n\r\nNote : the invocation works fine if the application is started in jvm mode:\r\n\r\n```\r\n$ curl http://localhost:8082/hello/ser\r\ncalendar:java.util.GregorianCalendar[time=1632671566284,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"Europe/Paris\",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=184,lastRule=java.util.SimpleTimeZone[id=Europe/Paris,offset=360\r\n0000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2021,MONTH=8,W\r\nEEK_OF_YEAR=38,WEEK_OF_MONTH=4,DAY_OF_MONTH=26,DAY_OF_YEAR=269,DAY_OF_WEEK=1,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=52,SECOND=46,MILLISECOND=284,ZONE_OFFSET=3600000,DST_OFFSET=3600000]\r\n```\r\n\r\n\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\n_No response_\r\n\r\n### Output of `java -version`\r\n\r\n_No response_\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.3.0.CR1\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n/cc @zakkak @jaikiran ",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20397/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20397/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
