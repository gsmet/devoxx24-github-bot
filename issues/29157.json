{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29157",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29157/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29157/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29157/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/29157",
  "id": 1442241206,
  "node_id": "I_kwDOCFbutM5V9tq2",
  "number": 29157,
  "title": "Make @TransactionScoped thread safe (virtual and platform threads)",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1633508165,
      "node_id": "MDU6TGFiZWwxNjMzNTA4MTY1",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/narayana",
      "name": "area/narayana",
      "color": "0366d6",
      "default": false,
      "description": "Transactions / Narayana"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/214",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/214",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/214/labels",
    "id": 8581813,
    "node_id": "MI_kwDOCFbutM4AgvK1",
    "number": 214,
    "title": "2.15.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 194,
    "state": "closed",
    "created_at": "2022-10-26T07:03:06Z",
    "updated_at": "2023-05-15T13:57:18Z",
    "due_on": null,
    "closed_at": "2022-11-30T12:45:37Z"
  },
  "comments": 14,
  "created_at": "2022-11-09T14:50:41Z",
  "updated_at": "2022-11-24T16:50:09Z",
  "closed_at": "2022-11-24T16:50:06Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nWhen a `@TransactionScoped` bean is accessed inside a transaction for a first time from 2 virtual threads started by the thread that started the transaction (e.g. StructuredTaskScope forks), a race condition can lead to two instances of the bean being created. The transaction context is properly propagated to the virtual threads by smallrye-context-propagation callable wrapping.\r\n\r\n### Expected behavior\r\n\r\nA reentrantlock is expected to be locked before line https://github.com/quarkusio/quarkus/blob/main/extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/context/TransactionContext.java#L110 and released after getting the  bean.\r\n\r\n### Actual behavior\r\n\r\nNo locking is done in `TransactionalContext`, thus a race condition can create two beans\r\n\r\n### How to Reproduce?\r\n\r\n1. Define a `TransactionScoped` bean\r\n2. Create another bean with a method with `@Transactional` annotation\r\n3. Start 2 virtual threads from that method, e.g. using StrucuredTaskScope.fork(), with proper context propagation (smallrye)\r\n4. From the 2 virtual threads, access a method on the `TransactionScoped` bean\r\n5. Call the `@Transactional` method\r\n\r\nRepeat a lot of times and watch for multiple bean creation per method call.\r\n\r\n```java\r\n@Inject TransactionScopedBean myBean;\r\n\r\n@Transactional\r\npublic void foo() {\r\n  try(var scope = new StrucuredTaskScope.ShutdownOnFailure()) {\r\n    scope.fork(wrapWithContext(()->myBean.something())); // race condition may occur here\r\n    scope.fork(wrapWithContext(()->myBean.something())); // race condition may occur here\r\n    scope.join();\r\n  }\r\n}\r\n```\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nall platforms\r\n\r\n### Output of `java -version`\r\n\r\n19\r\n\r\n### GraalVM version (if different from Java)\r\n\r\n_No response_\r\n\r\n### Quarkus version or git rev\r\n\r\n2.13.3.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nall build tools\r\n\r\n### Additional information\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/29157/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/29157/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
