{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20001",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20001/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20001/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20001/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/20001",
  "id": 991062062,
  "node_id": "MDU6SXNzdWU5OTEwNjIwNjI=",
  "number": 20001,
  "title": "Add a reactive ClientHeadersFactory flavor",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1326067509,
      "node_id": "MDU6TGFiZWwxMzI2MDY3NTA5",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/rest-client",
      "name": "area/rest-client",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/158",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/158",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/158/labels",
    "id": 7346869,
    "node_id": "MI_kwDOCFbutM4AcBq1",
    "number": 158,
    "title": "2.6.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 238,
    "state": "closed",
    "created_at": "2021-11-10T17:24:12Z",
    "updated_at": "2022-01-01T18:29:17Z",
    "due_on": null,
    "closed_at": "2021-12-08T10:39:04Z"
  },
  "comments": 2,
  "created_at": "2021-09-08T12:05:16Z",
  "updated_at": "2021-11-30T15:25:39Z",
  "closed_at": "2021-11-30T15:25:36Z",
  "active_lock_reason": null,
  "body": "### Description\n\nCurrently, org.eclipse.microprofile.rest.client.ext.ClientHeadersFactory is used to intercept calls and add entries in the client request header.\r\n\r\nA very common scenario is to integrate with an api that is secured by a token, that is generated by calling a specific endpoint. The current approach does not support this scenario, because it expects a sync response.\r\n\r\nWe need to support this use case.\n\n### Implementation ideas\n\nA good way to implement this would be to create something similar to org.jboss.resteasy.reactive.server.ServerRequestFilter.\r\n\r\nThat is an annotation that supports many kinds of responses. We could create a ClientRequestFilter annotation that would support the client request context in the method parameters and allow returning a Uni, so the request could be updated in an async way.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/20001/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/20001/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
