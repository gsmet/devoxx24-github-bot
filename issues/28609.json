{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28609",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28609/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28609/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28609/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/28609",
  "id": 1409653031,
  "node_id": "I_kwDOCFbutM5UBZkn",
  "number": 28609,
  "title": "Add an exception mapper to gRPC services",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 2062531368,
      "node_id": "MDU6TGFiZWwyMDYyNTMxMzY4",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/grpc",
      "name": "area/grpc",
      "color": "0366d6",
      "default": false,
      "description": "gRPC"
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": null,
  "comments": 10,
  "created_at": "2022-10-14T17:33:43Z",
  "updated_at": "2023-01-26T07:39:26Z",
  "closed_at": "2023-01-26T07:39:26Z",
  "active_lock_reason": null,
  "body": "### Description\n\nI couldn't find a way to intercept (to be more precise) an exception response which ends up as an response with `UNKNOWN `status. In my case I would like to map specific exceptions to specific status other than UNKNOWN.\r\nHere is an exception I get, which I would like to be considered as `UNAUTHENTICATED`, but it ends up as `UNKNOWN `unfortunately:\r\n\r\n```\r\n2022-10-14 18:01:21,371 WARN  [io.qua.grp.stu.ServerCalls] (vert.x-eventloop-thread-1) gRPC service threw an exception other than StatusRuntimeException: io.quarkus.security.AuthenticationFailedException\r\n\tat io.quarkus.oidc.runtime.OidcIdentityProvider.verifyTokenUni(OidcIdentityProvider.java:289)\r\n\tat io.quarkus.oidc.runtime.OidcIdentityProvider.createSecurityIdentityWithOidcServer(OidcIdentityProvider.java:151)\r\n\tat io.quarkus.oidc.runtime.OidcIdentityProvider$3.apply(OidcIdentityProvider.java:134)\r\n\tat io.quarkus.oidc.runtime.OidcIdentityProvider$3.apply(OidcIdentityProvider.java:128)\r\n```\n\n### Implementation ideas\n\nMaybe allow `ServerInterceptor`s to also intercept responses / errors?",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/28609/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/28609/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
