{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23807",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23807/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23807/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23807/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/23807",
  "id": 1142973258,
  "node_id": "I_kwDOCFbutM5EIGNK",
  "number": 23807,
  "title": "Microprofile Config doesn't read config profiled properties when injected into servlet.Filter class in native mode",
  "labels": [
    {
      "id": 985346620,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjA=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/bug",
      "name": "kind/bug",
      "color": "d73a4a",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 1273030910,
      "node_id": "MDU6TGFiZWwxMjczMDMwOTEw",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/config",
      "name": "area/config",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/194",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/194",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/194/labels",
    "id": 8190506,
    "node_id": "MI_kwDOCFbutM4AfPoq",
    "number": 194,
    "title": "2.12.0.CR1",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 238,
    "state": "closed",
    "created_at": "2022-07-13T08:15:30Z",
    "updated_at": "2022-08-23T15:43:55Z",
    "due_on": null,
    "closed_at": "2022-08-17T12:32:03Z"
  },
  "comments": 11,
  "created_at": "2022-02-18T12:30:24Z",
  "updated_at": "2022-08-17T08:11:28Z",
  "closed_at": "2022-08-17T08:11:26Z",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nIt seems to quarkus-undertow (processing Filter classes) doesn't work properly with profiled Quarkus configuration under **native image**.\r\n\r\nInjected _org.eclipse.microprofile.config.Config_ instance in class implementing _javax.servlet.Filter_ doesn't contain values defined in active profile. But this happens only in native mode. Under standard JVM everything works fine and all variables (core + profiled) are available.\r\n\r\nFilter class:\r\n```java\r\n@WebFilter(filterName = \"BasicAuthFilter\", urlPatterns = \"/urlpattern/*\")\r\npublic class BasicAuthFilter implements Filter {\r\n...\r\n @javax.inject.Inject \r\n  org.eclipse.microprofile.config.Config config;\r\n\r\n    @Override\r\n    public void doFilter(final ServletRequest servletRequest, final ServletResponse servletResponse,\r\n            final FilterChain filterChain) throws IOException, ServletException {\r\n          .....\r\n            Optional<String> env = config.getOptionalValue(\"stage.environment\");\r\n          .....\r\n    }\r\n```\r\n\r\nConfiguration file:\r\n```yaml\r\nquarkus:\r\n  package:\r\n    type: uber-jar\r\n  log:\r\n    level: INFO\r\n'%NONE-CI':\r\n  stage:\r\n    environment: CI\r\n```\r\n\r\nRun under JVM:\r\n_java -jar ... -Dquarkus.profile=NONE-CI...._\r\n\r\nRun under Native:\r\n_./application -Dquarkus.profile=NONE-CI_\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nFor both, native and standard jvm, execution of _config.getOptionalValue(\"stage.environment\")_ returns the same value if the same profile will be used.\r\n\r\n### Actual behavior\r\n\r\n_config.getOptionalValue(\"stage.environment\")_ works **invalid** when application is started under **native** mode and returns empty Optional object.\r\n\r\n_config.getOptionalValue(\"stage.environment\")_ works properly when application is started under standard JVM mode and returns value \"CI\" - which is perfectly OK.\r\n\r\n\r\nMy working Workaround:\r\n- Create some class with @ApplicationScoped (e.g. Helper)\r\n- Put @Inject Config into this class\r\n- Add method getConfigValue as proxy to Config instance\r\n- Inject Helper class in my Filter class\r\n- And use simple Helper.getConfig\r\n\r\n```java\r\n// request scope is also fine\r\n@javax.enterprise.context.ApplicationScoped\r\npublic class Helper {\r\n\r\n   // injection by field works as well\r\n   private Config config;\r\n\r\n    @Inject\r\n    public void setConfig(final Config config) {\r\n        this.config = config;\r\n    }\r\n\r\n   public Optional<String> getConfigValue(String key) {\r\n         config.getOptionalValue(key);\r\n   }\r\n}\r\n\r\n\r\npublic .... implements javax.servlet.Filter {\r\n\r\n   @Inject \r\n   Helper  helper;\r\n\r\n   // then somewhere  in code....\r\n     helper.getConfigValue(\"stage.environment\");\r\n  // returns always valid value - whether in JVM or native mode\r\n\r\n}\r\n```\r\n\r\n### How to Reproduce?\r\n\r\n_No response_\r\n\r\n### Output of `uname -a` or `ver`\r\n\r\nMicrosoft Windows [Version 10.0.19042.1466] / Native run under Docker image based on registry.access.redhat.com/ubi8/ubi-minimal:8.4\r\n\r\n### Output of `java -version`\r\n\r\nOpenJDK Runtime Environment Corretto-11.0.7.10.1 (build 11.0.7+10-LTS)\r\n\r\n### GraalVM version (if different from Java)\r\n\r\nquarkus-mandrel:21.3-java11\r\n\r\n### Quarkus version or git rev\r\n\r\n2.5.0.Final\r\n\r\n### Build tool (ie. output of `mvnw --version` or `gradlew --version`)\r\n\r\nApache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T20:33:14+02:00) Java version: 11.0.7, vendor: Amazon.com Inc., runtime: C:\\Programs\\jdk-11-amazoncorretto Default locale: en_US, platform encoding: Cp1252 OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"\r\n\r\n### Additional information\r\n\r\nApplication compile & build:\r\n```\r\nmvn clean package \r\n   -Pnative \r\n   -Dquarkus.package.type=native \r\n   -Dquarkus.native.container-build=true \r\n   -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel:21.3-java11\r\n```\r\n\r\nI verified this also in servlet class (extends _javax.servlet.http.HttpServlet_). In this case all works properly and variables are read correctly both from directly injected Config instance and indirectly injected via Helper (application scoped) class.",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/23807/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/23807/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
