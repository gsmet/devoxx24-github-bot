{
  "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38077",
  "repository_url": "https://api.github.com/repos/quarkusio/quarkus",
  "labels_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38077/labels{/name}",
  "comments_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38077/comments",
  "events_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38077/events",
  "html_url": "https://github.com/quarkusio/quarkus/issues/38077",
  "id": 2068793593,
  "node_id": "I_kwDOCFbutM57T0j5",
  "number": 38077,
  "title": "picocli should be able to mark its annotation dependent classes as unremovable",
  "labels": [
    {
      "id": 985346622,
      "node_id": "MDU6TGFiZWw5ODUzNDY2MjI=",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/kind/enhancement",
      "name": "kind/enhancement",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 3232344833,
      "node_id": "MDU6TGFiZWwzMjMyMzQ0ODMz",
      "url": "https://api.github.com/repos/quarkusio/quarkus/labels/area/picocli",
      "name": "area/picocli",
      "color": "0366d6",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "milestone": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/milestones/297",
    "html_url": "https://github.com/quarkusio/quarkus/milestone/297",
    "labels_url": "https://api.github.com/repos/quarkusio/quarkus/milestones/297/labels",
    "id": 10395286,
    "node_id": "MI_kwDOCFbutM4Anp6W",
    "number": 297,
    "title": "3.6.5",
    "description": "",
    "creator": {
      "login": "gsmet",
      "id": 1279749,
      "node_id": "MDQ6VXNlcjEyNzk3NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1279749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmet",
      "html_url": "https://github.com/gsmet",
      "followers_url": "https://api.github.com/users/gsmet/followers",
      "following_url": "https://api.github.com/users/gsmet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmet/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmet/orgs",
      "repos_url": "https://api.github.com/users/gsmet/repos",
      "events_url": "https://api.github.com/users/gsmet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmet/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 32,
    "state": "closed",
    "created_at": "2024-01-09T13:27:47Z",
    "updated_at": "2024-03-12T12:51:46Z",
    "due_on": null,
    "closed_at": "2024-01-10T13:54:17Z"
  },
  "comments": 4,
  "created_at": "2024-01-06T19:28:44Z",
  "updated_at": "2024-01-09T16:43:18Z",
  "closed_at": "2024-01-09T09:35:28Z",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nFor example:\r\n\r\n```java\r\n@Command(name = \"hassq\", mixinStandardHelpOptions = true, \r\n          subcommands = { StateCommand.class, AreaCommand.class, EntityCommand.class, EventCommand.class, ConfigCommand.class},\r\n          versionProvider = VersionProvider.class)\r\n```\r\n\r\nand then VersionProvider looks like this:\r\n\r\n```java\r\n@Unremovable @Singleton\r\npublic class VersionProvider implements IVersionProvider {\r\n\r\n    @ConfigProperty(name = \"quarkus.application.version\")\r\n    String version;\r\n\r\n    @Override\r\n    public String[] getVersion() throws Exception {\r\n        return new String[] { version };\r\n    }\r\n}\r\n```\r\n\r\nThis is picked up by quarkus picocli extension as we provided a picocli IFactory.\r\n\r\nIt shouldn't be necessary to specify @Unremovable in this case should it ?  Right now it is required though.\r\n\r\nThere are multiple other class references via annotation in picocli apis:\r\n\r\n```\r\nrg \"Class<\\? extends .*>.*default\"\r\nsrc/main/java/picocli/CommandLine.java\r\n3960:        Class<? extends ITypeConverter<?>>[] converter() default {};\r\n4016:        Class<? extends Iterable<String>> completionCandidates() default NoCompletionCandidates.class;\r\n4126:        Class<? extends IParameterConsumer> parameterConsumer() default NullParameterConsumer.class;\r\n4131:        Class<? extends IParameterPreprocessor> preprocessor() default NoOpParameterPreprocessor.class;\r\n4262:        Class<? extends ITypeConverter<?>>[] converter() default {};\r\n4313:        Class<? extends Iterable<String>> completionCandidates() default NoCompletionCandidates.class;\r\n4360:        Class<? extends IParameterConsumer> parameterConsumer() default NullParameterConsumer.class;\r\n4377:        Class<? extends IParameterPreprocessor> preprocessor() default NoOpParameterPreprocessor.class;\r\n4642:        Class<? extends IVersionProvider> versionProvider() default NoVersionProvider.class;\r\n4757:        Class<? extends IDefaultValueProvider> defaultValueProvider() default NoDefaultProvider.class;\r\n4876:        Class<? extends IModelTransformer> modelTransformer() default NoOpModelTransformer.class;\r\n4881:        Class<? extends IParameterPreprocessor> preprocessor() default NoOpParameterPreprocessor.class;\r\n```\r\n\r\nand I expect all of these will today require @Unremovable even though we should be able to detect that picocli will eventually need them.\r\n\r\nSuggestion is thus that Arc gets instructed to leave these around if beans are of any of those types.\r\n\r\nAnyone see an issue making this happen? \r\n\r\n### Implementation ideas\r\n\r\n_No response_",
  "reactions": {
    "url": "https://api.github.com/repos/quarkusio/quarkus/issues/38077/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/quarkusio/quarkus/issues/38077/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
